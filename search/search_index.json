{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Monarch Documentation The Monarch Initiative and our collaborators develop a wide range of tools and ontologies to tackle global challenges such as Rare Disease. Here we document the software and data infrastructure across the entire Monarch ecosystem. If you would like any specific documentation to be added please use our Monarch-wide issue tracker . Standards documentation Repository Description Tracker Phenopackets The Phenopacket Schema represents an open standard for sharing disease and phenotype information to improve our ability to understand, diagnose, and treat both rare and common diseases. A Phenopacket links detailed phenotype descriptions with disease, patient, and genetic information, enabling clinicians, biologists, and disease and drug researchers to build more complete models of disease. The standard is designed to encourage wide adoption and synergy between the people, organizations and systems that comprise the joint effort to address human disease and biological understanding. Issue Tracker Simple Standard for Ontology Mappings The Simple Standard for Sharing Ontological Mappings (SSSOM), provides - a TSV-based representation for ontology term mappings a comprehensive set of standard metadata elements to describe mappings a standard translation between the TSV and the Web Ontology Language (OWL) The SSSOM TSV format in particular is geared towards the needs of the wider bioinformatics community as a way to safely exchange mappings in an easily readable yet semantically well-specified manner. Issue Tracker Human Phenotype Ontology The Human Phenotype Ontology (HPO) is a structured vocabulary used to describe human health conditions and symptoms in a standardized way. It helps doctors, researchers, and computer systems consistently record and analyze patient characteristics, especially in the context of rare diseases. By organizing thousands of clinical features into a searchable hierarchy, HPO supports better diagnosis, data sharing, and discovery in genetic medicine. Issue Tracker obographs The obographs ontology format aims and providing a simple graph-oriented JSON format for ontologies. Issue Tracker Mondo Disease Ontology The Mondo Disease Ontology (Mondo) aims to harmonize disease definitions across the world, with a particular focus on rare diseases. Mondo goes beyond loose database cross-references. It curates precise 1:1 equivalence axioms connecting to other resources, validated by OWL reasoning. This means it is safe to propagate across these from Online Mendelian Inheritance in Man (OMIM), ORDO (Orphanet), Experimental Factor Ontology (EFO), Disease Ontology (DOID) and the neoplasm branch of National Cancer Institute Thesaurus (NCIt). Issue Tracker Genotype Ontology The Genotype Ontology (GENO) is an OWL2 ontology that represents the levels of genetic variation specified in genotypes, to support genotype-to-phenotype (G2P) data aggregation and analysis across diverse research communities and sources. The core of the ontology is a graph decomposing a genotype into smaller components of variation, from a complete genotype specifying sequence variation across an entire genome, down to specific allelic variants and sequence alterations. Structuring genotype instance data according to this model supports a primary use case of GENO to enable integrated analysis of G2P data where phenotype annotations are made at different levels of granularity in this genotype partonomy. GENO also enables description of various attributes of genotypes and genetic variants. These attributes include zygosity, genomic position, expression, dominance, and functional dependencies or consequences of a given variant. In addition to heritable variation in genomic sequence specified by traditional genotypes, GENO also represents transient variation in gene expression, as seen in experiments where genes are targeted by knockdown reagents or overexpressed by DNA constructs at the time a phenotype is assessed. This variation in gene expression is represented in terms of the targeted genes themselves, to parallel representation of sequence variation and facilitate integrated description and analysis of data about any genetic contribution to a measured phenotype. Finally, GENO also supports modelling of G2P associations, focusing on the interplay between genotype, phenotype, and environment. GENO describes provenance and experimental evidence for these associations using the Scientific Evidence and Provenance Information Ontology (SEPIO) model. Issue Tracker Scientific Evidence and Provenance Information Ontology The Scientific Evidence and Provenance Information Ontology (SEPIO) was developed to support description of evidence and provenance information for scientific claims. The core model represents the relationships between claims, their evidence lines, the information items that comprise these lines of evidence, and the methods, tools, and agents involved in the creation of these entities. Use cases driving SEPIO development include integration of scientific claims and their associated evidence/provenance metadata, and support for the discovery, analysis, and evaluation of claims based on this metadata. Issue Tracker Vertebrate Breed Ontology The Vertebrate Breed Ontology (VBO) is an open, community-driven ontology representing over 19,500 livestock and companion animal breed concepts covering 49 species. Breeds are classified based on community and expert conventions (e.g., cattle breed) and supported by relations to the breed's genus and species indicated by National Center for Biotechnology Information (NCBI) Taxonomy terms. Relationships between VBO terms (e.g., relating breeds to their foundation stock) provide additional context to support advanced data analytics. VBO term metadata includes synonyms, breed identifiers/codes, and attributed cross-references to other databases. Issue Tracker The Unified Phenotype Ontology The Unified Phenotype Ontology (uPheno) framework is a community effort to provide an integration layer over domain-specific phenotype ontologies, as a single, unified, logical representation. uPheno comprises - a system for consistent computational definition of phenotype terms using ontology design patterns, maintained as a community library a hierarchical vocabulary of species-neutral phenotype terms under which their species-specific counterparts are grouped mapping tables between species-specific ontologies uPheno is a framework for consistent and logical definition of phenotype categories using ontology design patterns that provides a hierarchical vocabulary of species-neutral phenotype terms under which their species-specific counterparts are grouped. The ontology design templates are based on shared features of existing phenotypic descriptions from various model organisms, and represent community consensus. The phenotype pattern template-adherent terms are adopted by species-specific ontologies, thereby contributing to the community-built uPheno framework. uPheno accelerates cross-species inference and computationally amenable comparative phenotype analysis.For example, the interoperable representation of heart phenotypes characterized by increased size, compared with wild-type in distinct species\u2014such as zebrafish and humans\u2014allows the cross-species identification of genes whose alleles can cause similar phenotypes. uPheno contextual hierarchy for increased size of the heart as displayed in the OLS. Issue Tracker Medical Action Ontology Issue Tracker Ontology of Biological Attributes The Ontology of Biological Attributes (OBA) is a formalised, species-independent collection of interoperable phenotypic trait categories that is intended to fulfil a data integration role. OBA is a standardised representational framework for observable attributes that are characteristics of biological entities, organisms, or parts of organisms. It is a collection of biological attributes (traits) covering all kingdoms of life and is interoperable with other ontologies in the Open Biological and Biomedical Ontologies Foundry. Issue Tracker Uberon Anatomy Ontology Uberon is an anatomical ontology that represents body parts, organs, and tissues in a variety of animal species, with a focus on vertebrates. It has been constructed to integrate seamlessly with other ontologies, such as the Cell Ontology workflows, the Gene Ontology, Trait and Phenotype ontologies, as well as other anatomical ontologies. The ontology includes comprehensive relationships to taxon-specific anatomical ontologies, allowing integration of functional, phenotype and expression data. Currently, Uberon consists of over 13,000 classes representing structures that are shared across a variety of metazoans. As one of the main uses of Uberon is translational science, we have extensive coverage of structures shared between humans and other species. However, thanks to the involvement of many collaborators, we have deep coverage of broad areas of anatomy across diverse taxa. We also make available an ontology called composite-metazoan, which brings in subsets of federated ontologies, with a total of over 40,000 classes. Issue Tracker Phenomics Integrated Ontology The Phenomics Integrated Ontology (Phenio) is an ontology for accessing and comparing knowledge concerning phenotypes across species and genetic backgrounds. Issue Tracker Environmental Conditions, Treatments and Exposures Ontology The Environmental Conditions, Treatments and Exposures Ontology (ECTO) describes exposures to experimental treatments of plants and model organisms (e.g. exposures to modification of diet, lighting levels, temperature); exposures of humans or any other organisms to stressors through a variety of routes, for purposes of public health, environmental monitoring etc, stimuli, natural and experimental, any kind of environmental condition or change in condition that can be experienced by an organism or population of organisms on earth. The scope is very general and can include for example plant treatment regimens, as well as human clinical exposures (although these may better be handled by a more specialized ontology). Issue Tracker Dead simple owl design pattern (DOS-DP) exchange format Issue Tracker Knowledge Graph Change Language Issue Tracker Babelon - A simple standard for managing ontology translations and language profiles Issue Tracker Tools documentation Repository Description Tracker Exomiser Exomiser is a Java program that finds potential disease-causing variants from whole-exome or whole-genome sequencing data. Starting from a VCF file and a set of phenotypes encoded using the Human Phenotype Ontology (HPO) it will annotate, filter and prioritise likely causative variants. The program does this based on criteria such as a variant's predicted pathogenicity, frequency of occurrence in a population and also how closely the given phenotype matches the phenotypic features of disease genes from human and model organism data. The functional annotation of variants is handled by Jannovar and uses any of UCSC, RefSeq or Ensembl KnownGene transcript definitions and hg19 or hg38 genomic coordinates. Variants are prioritised according to user-defined criteria on variant frequency, pathogenicity, quality, inheritance pattern, and model organism phenotype data. Predicted pathogenicity data is extracted from the dbNSFP resource. Variant frequency data is taken from the 1000 Genomes, ESP, TOPMed, UK10K, ExAC and gnomAD datasets. Subsets of these frequency and pathogenicity data can be defined to further tune the analysis. Cross-species phenotype comparisons come from our PhenoDigm tool powered by the OWLTools OWLSim algorithm. Issue Tracker Monarch Knowledge Graph & Services Integrates gene, disease, and phenotype data across species. Issue Tracker Monarch App A web application for exploring the Monarch Knowledge Graph. Issue Tracker Monarch API The Monarch API is used to access information from the Monarch Knowledge Graph programmatically. Issue Tracker Ontology Development Kit Manage your ontology's life cycle with the Ontology Development Kit (ODK)!The ODK is - a toolbox of various ontology related tools such as ROBOT, owltools, dosdp-tools and many more, bundled as a Docker image. a set of executable workflows for managing your ontology's continuous integration, quality control, releases and dynamic imports. Issue Tracker Monarch OLS A browsable collection of ontologies provided by the Monarch Initiative using OLS4 (developed by EMBL-EBI). This instance of OLS is tailored to the needs of the Monarch Initiative and provides access to a range of ontologies relevant to genomics, phenomics, and biomedical research, which are not available through normal OLS. It also provides development snapshots of various unreleased ontologies for early access of the wider community. Issue Tracker Ontology Access Kit The Ontology Access Kit (OAK) is for both technical and non-technical users of ontologies. Non-technical users can use the command line interface to query ontologies in a variety of ways. Technical users can write Python code that uses the OAK library to perform ontology-related tasks. OAK provides a collection of interfaces for various ontology operations, including - Lookup features of an ontology element such as its label, definition, relationships, or aliases search an ontology for a term validate an ontology modify or delete terms generate and visualize subgraphs identify lexical matches and export as SSSOM mapping tables perform more advanced operations, such as graph traversal, OWL axiom processing, or text annotation These interfaces are separated from any particular backend, for which there are a number of different adapters. This means the same Python API and command line can be used regardless of whether the ontology - is served by a remote API such as OLS or BioPortal is present locally on the filesystem in owl, obo, obojson, or sqlite formats is to be downloaded from a remote repository such as the OBO library is queried from a remote database, including SPARQL endpoints (Ontobee/Ubergraph), a SQL database, a Solr/ES endpoint Issue Tracker SSSOM Toolkit A python toolkit for processing SSSOM mapping files. Issue Tracker LIkelihood Ratio Interpretation of Clinical AbnormaLities (LIRICAL) LIkelihood Ratio Interpretation of Clinical AbnormaLities performs phenotype-driven prioritization of candidate diseases and genes in the setting of genomic diagnostics. Issue Tracker PhEval The absence of standardised benchmarks and data standardisation for Variant and Gene Prioritisation Algorithms (VGPAs) presents a significant challenge in the field of genomic research. PhEval addresses this gap. It is a novel framework designed to streamline the evaluation of VGPAs that incorporate phenotypic data. PhEval offers several key benefits - Automated Processes \u2014 Reduces manual effort by automating various evaluation tasks, thus enhancing efficiency. Standardisation \u2014 Ensures consistency and comparability in evaluation methodologies, leading to more reliable and standardised assessments. Reproducibility \u2014 Facilitates reproducibility in research by providing a standardised platform, allowing for consistent validation of algorithms. Comprehensive Benchmarking \u2014 Enables thorough benchmarking of algorithms, providing well-founded comparisons and deeper insights into their performance. PhEval is a valuable tool for researchers looking to improve the accuracy and reliability of VGPA evaluations through a structured and standardised approach. Issue Tracker obographviz Issue Tracker robot Issue Tracker OntoGPT OntoGPT is a Python package for extracting structured information from text with large language models (LLMs), instruction prompts, and ontology-based grounding. It works well with OpenAI's GPT models as well as a selection of other LLMs. OntoGPT's output can be used for general-purpose natural language tasks (e.g., named entity recognition and relation extraction), summarization, knowledge base and knowledge graph construction, and more. Issue Tracker Aurelian Aurelian is an Agentic Universal Research Engine for Literature, Integration, Annotation, and Navigation. Issue Tracker Knowledge Graph Registry A simple registry for knowledge graphs, including Knowledge Graph Hub (KG-Hub) projects. Issue Tracker Knowledge Graph Hub The Knowledge Graph Hub (KG-Hub) is a platform that provides software development patterns for the standardized construction, exchange, and reuse of knowledge graphs. Features include a simple, modular extract-transform-load (ETL) pattern for ingest of upstream data in a Biolink-model compliant manner, cached downloads of upstream data, versioned and automatically updated builds, web-browsable storage of KG artifacts on cloud infrastructure, easy reuse of transformed subgraphs of upstream data across different projects, and easy integration of any OBO ontology. Issue Tracker LinkML Registry A collection of Linked Data Modeling Language (LinkML)schemas. Issue Tracker TALISMAN TALISMAN is a Python package for summarizing gene set functions using large language models (LLMs). Issue Tracker CurateGPT CurateGPT is a framework for performing general purpose AI-guided curation and curation-related operations over collections of objects, including ontologies and biological datasets. CurateGPT melds the power of generative AI together with trusted knowledge bases and literature sources. CurateGPT streamlines the curation process, enhancing collaboration and efficiency in common workflows. Compared to direct interaction with an LLM, CurateGPT's agents enable access to information beyond that in the LLM's training data and they provide direct links to the data supporting each claim. This helps curators, researchers, and engineers scale up curation efforts to keep pace with the ever-increasing volume of scientific data.CurateGPT also contains other tools and features, such as a prototype web application that allows LLMs to answer user questions using knowledge bases. Issue Tracker Monarch Python Toolkit Issue Tracker Babelon Toolkit Issue Tracker Fenominal Issue Tracker Koza Issue Tracker Linked Data Modeling Language LinkML (Linked data Modeling Language; linkml.io) is an open and extensible data modeling framework that provides a simple and structured way to describe and validate data. It includes a set of tools that make it easy to author, validate, and share data. LinkML can describe a range of data structures, from flat, list-based models to complex, interrelated, and normalized models that utilize polymorphism and compound inheritance. It offers an approachable syntax that is not tied to any one technical architecture, and can be integrated seamlessly with many existing frameworks. Its low barrier to entry allows people from different backgrounds and levels of technical expertise to collaborate to form a shared understanding of the underlying data semantics, providing an easy-to-understand basis for interdisciplinary collaboration. Its metamodel syntax allows modelers to focus on creating well-defined, stable, ontology-based data structures instead of a mixture of customized models and free text. LinkML helps reduce heterogeneity, complexity, and the proliferation of single-use data models while simultaneously enabling compliance with FAIR data standards. Issue Tracker Monarch Ingest The Monarch Ingest pulls in data from a wide variety of biomedical data sources and generates Biolink-compliant KGX files that are used to build the Monarch KG. Issue Tracker Monarch Mapping Registry Simple Standard for Ontology Mappings (SSSOM) mappings collected and curated by the Monarch Initiative. Issue Tracker HPO Language Translations Infrastructure to collect and coordinate HPO language translations. Issue Tracker Phenomizer A web application for clinical diagnostics in human genetics using semantic similarity searches in ontologies. Issue Tracker Phenogrid Phenogrid is a web component that visualizes semantic similarity calculations provided by OWLSim, as provided through APIs from the Monarch Initiative. Issue Tracker monarchr R package for easy access, manipulation, and analysis of the Monarch Initiative or other KGX-formatted knowledge graphs. Issue Tracker Phenomics Assistant An LLM retrieval augmented generation (RAG) agent for Monarch Initiative. Issue Tracker pheval.llm LLM Benchmarking in differential diagnostics. Issue Tracker phenopacket2prompt Creation of prompts from phenopackets, in multiple languages, intended for prompting LLMs. Issue Tracker AutoMAxO Streamline the creation of ontology annotations of MAxO via LLMs. Issue Tracker pheval.exomiser Exomiser plugin for PhEval. Issue Tracker pheval.ai_marrvel A PhEval plugin for integrating AI-MARRVEL, enabling variant prioritisation based on phenotypic data in a standardised pipeline Issue Tracker pheval.phen2gene A PhEval plugin for integrating Phen2Gene, enabling gene prioritisation based on phenotypic data in a standardised pipeline. Issue Tracker pheval.gado A PhEval plugin for integrating GADO, enabling gene prioritisation based on phenotypic data in a standardised pipeline. Issue Tracker pheval.svanna A PhEval plugin for integrating SvAnna, enabling structural variant prioritisation in a standardised pipeline. Issue Tracker pheval.lirical A PhEval plugin integrating LIRICAL for efficient phenotype and variant prioritisation in a standardised pipeline. Issue Tracker pheval.phenogenius A PhEval plugin for integrating PhenoGenius, enabling gene prioritisation based on phenotypic data in a standardised pipeline. Issue Tracker phenotype2phenopacket Phenotype2Phenopacket is a command-line tool that converts a phenotype annotation into GA4GH Phenopackets, facilitating standardised phenotypic data representation. Issue Tracker Data documentation Repository Description Tracker HPOA - Disease Annotations Issue Tracker HPOA - Phenotype to Gene Associations Issue Tracker HPOA - Gene to Phenotype Associations Issue Tracker HPOA Knowledge Graph Ingestible Issue Tracker Alliance Knowledge Graph Ingestible Issue Tracker Other documentation and training materials Repository Description Tracker OBO Academy A resource for self-paced training of Semantic Engineers. Issue Tracker Best practices for collaborative open source coding The best practice / house style guide maintained by Monarch's LBNL team members. Issue Tracker","title":"Home"},{"location":"#monarch-documentation","text":"The Monarch Initiative and our collaborators develop a wide range of tools and ontologies to tackle global challenges such as Rare Disease. Here we document the software and data infrastructure across the entire Monarch ecosystem. If you would like any specific documentation to be added please use our Monarch-wide issue tracker .","title":"Monarch Documentation"},{"location":"#standards-documentation","text":"Repository Description Tracker Phenopackets The Phenopacket Schema represents an open standard for sharing disease and phenotype information to improve our ability to understand, diagnose, and treat both rare and common diseases. A Phenopacket links detailed phenotype descriptions with disease, patient, and genetic information, enabling clinicians, biologists, and disease and drug researchers to build more complete models of disease. The standard is designed to encourage wide adoption and synergy between the people, organizations and systems that comprise the joint effort to address human disease and biological understanding. Issue Tracker Simple Standard for Ontology Mappings The Simple Standard for Sharing Ontological Mappings (SSSOM), provides - a TSV-based representation for ontology term mappings a comprehensive set of standard metadata elements to describe mappings a standard translation between the TSV and the Web Ontology Language (OWL) The SSSOM TSV format in particular is geared towards the needs of the wider bioinformatics community as a way to safely exchange mappings in an easily readable yet semantically well-specified manner. Issue Tracker Human Phenotype Ontology The Human Phenotype Ontology (HPO) is a structured vocabulary used to describe human health conditions and symptoms in a standardized way. It helps doctors, researchers, and computer systems consistently record and analyze patient characteristics, especially in the context of rare diseases. By organizing thousands of clinical features into a searchable hierarchy, HPO supports better diagnosis, data sharing, and discovery in genetic medicine. Issue Tracker obographs The obographs ontology format aims and providing a simple graph-oriented JSON format for ontologies. Issue Tracker Mondo Disease Ontology The Mondo Disease Ontology (Mondo) aims to harmonize disease definitions across the world, with a particular focus on rare diseases. Mondo goes beyond loose database cross-references. It curates precise 1:1 equivalence axioms connecting to other resources, validated by OWL reasoning. This means it is safe to propagate across these from Online Mendelian Inheritance in Man (OMIM), ORDO (Orphanet), Experimental Factor Ontology (EFO), Disease Ontology (DOID) and the neoplasm branch of National Cancer Institute Thesaurus (NCIt). Issue Tracker Genotype Ontology The Genotype Ontology (GENO) is an OWL2 ontology that represents the levels of genetic variation specified in genotypes, to support genotype-to-phenotype (G2P) data aggregation and analysis across diverse research communities and sources. The core of the ontology is a graph decomposing a genotype into smaller components of variation, from a complete genotype specifying sequence variation across an entire genome, down to specific allelic variants and sequence alterations. Structuring genotype instance data according to this model supports a primary use case of GENO to enable integrated analysis of G2P data where phenotype annotations are made at different levels of granularity in this genotype partonomy. GENO also enables description of various attributes of genotypes and genetic variants. These attributes include zygosity, genomic position, expression, dominance, and functional dependencies or consequences of a given variant. In addition to heritable variation in genomic sequence specified by traditional genotypes, GENO also represents transient variation in gene expression, as seen in experiments where genes are targeted by knockdown reagents or overexpressed by DNA constructs at the time a phenotype is assessed. This variation in gene expression is represented in terms of the targeted genes themselves, to parallel representation of sequence variation and facilitate integrated description and analysis of data about any genetic contribution to a measured phenotype. Finally, GENO also supports modelling of G2P associations, focusing on the interplay between genotype, phenotype, and environment. GENO describes provenance and experimental evidence for these associations using the Scientific Evidence and Provenance Information Ontology (SEPIO) model. Issue Tracker Scientific Evidence and Provenance Information Ontology The Scientific Evidence and Provenance Information Ontology (SEPIO) was developed to support description of evidence and provenance information for scientific claims. The core model represents the relationships between claims, their evidence lines, the information items that comprise these lines of evidence, and the methods, tools, and agents involved in the creation of these entities. Use cases driving SEPIO development include integration of scientific claims and their associated evidence/provenance metadata, and support for the discovery, analysis, and evaluation of claims based on this metadata. Issue Tracker Vertebrate Breed Ontology The Vertebrate Breed Ontology (VBO) is an open, community-driven ontology representing over 19,500 livestock and companion animal breed concepts covering 49 species. Breeds are classified based on community and expert conventions (e.g., cattle breed) and supported by relations to the breed's genus and species indicated by National Center for Biotechnology Information (NCBI) Taxonomy terms. Relationships between VBO terms (e.g., relating breeds to their foundation stock) provide additional context to support advanced data analytics. VBO term metadata includes synonyms, breed identifiers/codes, and attributed cross-references to other databases. Issue Tracker The Unified Phenotype Ontology The Unified Phenotype Ontology (uPheno) framework is a community effort to provide an integration layer over domain-specific phenotype ontologies, as a single, unified, logical representation. uPheno comprises - a system for consistent computational definition of phenotype terms using ontology design patterns, maintained as a community library a hierarchical vocabulary of species-neutral phenotype terms under which their species-specific counterparts are grouped mapping tables between species-specific ontologies uPheno is a framework for consistent and logical definition of phenotype categories using ontology design patterns that provides a hierarchical vocabulary of species-neutral phenotype terms under which their species-specific counterparts are grouped. The ontology design templates are based on shared features of existing phenotypic descriptions from various model organisms, and represent community consensus. The phenotype pattern template-adherent terms are adopted by species-specific ontologies, thereby contributing to the community-built uPheno framework. uPheno accelerates cross-species inference and computationally amenable comparative phenotype analysis.For example, the interoperable representation of heart phenotypes characterized by increased size, compared with wild-type in distinct species\u2014such as zebrafish and humans\u2014allows the cross-species identification of genes whose alleles can cause similar phenotypes. uPheno contextual hierarchy for increased size of the heart as displayed in the OLS. Issue Tracker Medical Action Ontology Issue Tracker Ontology of Biological Attributes The Ontology of Biological Attributes (OBA) is a formalised, species-independent collection of interoperable phenotypic trait categories that is intended to fulfil a data integration role. OBA is a standardised representational framework for observable attributes that are characteristics of biological entities, organisms, or parts of organisms. It is a collection of biological attributes (traits) covering all kingdoms of life and is interoperable with other ontologies in the Open Biological and Biomedical Ontologies Foundry. Issue Tracker Uberon Anatomy Ontology Uberon is an anatomical ontology that represents body parts, organs, and tissues in a variety of animal species, with a focus on vertebrates. It has been constructed to integrate seamlessly with other ontologies, such as the Cell Ontology workflows, the Gene Ontology, Trait and Phenotype ontologies, as well as other anatomical ontologies. The ontology includes comprehensive relationships to taxon-specific anatomical ontologies, allowing integration of functional, phenotype and expression data. Currently, Uberon consists of over 13,000 classes representing structures that are shared across a variety of metazoans. As one of the main uses of Uberon is translational science, we have extensive coverage of structures shared between humans and other species. However, thanks to the involvement of many collaborators, we have deep coverage of broad areas of anatomy across diverse taxa. We also make available an ontology called composite-metazoan, which brings in subsets of federated ontologies, with a total of over 40,000 classes. Issue Tracker Phenomics Integrated Ontology The Phenomics Integrated Ontology (Phenio) is an ontology for accessing and comparing knowledge concerning phenotypes across species and genetic backgrounds. Issue Tracker Environmental Conditions, Treatments and Exposures Ontology The Environmental Conditions, Treatments and Exposures Ontology (ECTO) describes exposures to experimental treatments of plants and model organisms (e.g. exposures to modification of diet, lighting levels, temperature); exposures of humans or any other organisms to stressors through a variety of routes, for purposes of public health, environmental monitoring etc, stimuli, natural and experimental, any kind of environmental condition or change in condition that can be experienced by an organism or population of organisms on earth. The scope is very general and can include for example plant treatment regimens, as well as human clinical exposures (although these may better be handled by a more specialized ontology). Issue Tracker Dead simple owl design pattern (DOS-DP) exchange format Issue Tracker Knowledge Graph Change Language Issue Tracker Babelon - A simple standard for managing ontology translations and language profiles Issue Tracker","title":"Standards documentation"},{"location":"#tools-documentation","text":"Repository Description Tracker Exomiser Exomiser is a Java program that finds potential disease-causing variants from whole-exome or whole-genome sequencing data. Starting from a VCF file and a set of phenotypes encoded using the Human Phenotype Ontology (HPO) it will annotate, filter and prioritise likely causative variants. The program does this based on criteria such as a variant's predicted pathogenicity, frequency of occurrence in a population and also how closely the given phenotype matches the phenotypic features of disease genes from human and model organism data. The functional annotation of variants is handled by Jannovar and uses any of UCSC, RefSeq or Ensembl KnownGene transcript definitions and hg19 or hg38 genomic coordinates. Variants are prioritised according to user-defined criteria on variant frequency, pathogenicity, quality, inheritance pattern, and model organism phenotype data. Predicted pathogenicity data is extracted from the dbNSFP resource. Variant frequency data is taken from the 1000 Genomes, ESP, TOPMed, UK10K, ExAC and gnomAD datasets. Subsets of these frequency and pathogenicity data can be defined to further tune the analysis. Cross-species phenotype comparisons come from our PhenoDigm tool powered by the OWLTools OWLSim algorithm. Issue Tracker Monarch Knowledge Graph & Services Integrates gene, disease, and phenotype data across species. Issue Tracker Monarch App A web application for exploring the Monarch Knowledge Graph. Issue Tracker Monarch API The Monarch API is used to access information from the Monarch Knowledge Graph programmatically. Issue Tracker Ontology Development Kit Manage your ontology's life cycle with the Ontology Development Kit (ODK)!The ODK is - a toolbox of various ontology related tools such as ROBOT, owltools, dosdp-tools and many more, bundled as a Docker image. a set of executable workflows for managing your ontology's continuous integration, quality control, releases and dynamic imports. Issue Tracker Monarch OLS A browsable collection of ontologies provided by the Monarch Initiative using OLS4 (developed by EMBL-EBI). This instance of OLS is tailored to the needs of the Monarch Initiative and provides access to a range of ontologies relevant to genomics, phenomics, and biomedical research, which are not available through normal OLS. It also provides development snapshots of various unreleased ontologies for early access of the wider community. Issue Tracker Ontology Access Kit The Ontology Access Kit (OAK) is for both technical and non-technical users of ontologies. Non-technical users can use the command line interface to query ontologies in a variety of ways. Technical users can write Python code that uses the OAK library to perform ontology-related tasks. OAK provides a collection of interfaces for various ontology operations, including - Lookup features of an ontology element such as its label, definition, relationships, or aliases search an ontology for a term validate an ontology modify or delete terms generate and visualize subgraphs identify lexical matches and export as SSSOM mapping tables perform more advanced operations, such as graph traversal, OWL axiom processing, or text annotation These interfaces are separated from any particular backend, for which there are a number of different adapters. This means the same Python API and command line can be used regardless of whether the ontology - is served by a remote API such as OLS or BioPortal is present locally on the filesystem in owl, obo, obojson, or sqlite formats is to be downloaded from a remote repository such as the OBO library is queried from a remote database, including SPARQL endpoints (Ontobee/Ubergraph), a SQL database, a Solr/ES endpoint Issue Tracker SSSOM Toolkit A python toolkit for processing SSSOM mapping files. Issue Tracker LIkelihood Ratio Interpretation of Clinical AbnormaLities (LIRICAL) LIkelihood Ratio Interpretation of Clinical AbnormaLities performs phenotype-driven prioritization of candidate diseases and genes in the setting of genomic diagnostics. Issue Tracker PhEval The absence of standardised benchmarks and data standardisation for Variant and Gene Prioritisation Algorithms (VGPAs) presents a significant challenge in the field of genomic research. PhEval addresses this gap. It is a novel framework designed to streamline the evaluation of VGPAs that incorporate phenotypic data. PhEval offers several key benefits - Automated Processes \u2014 Reduces manual effort by automating various evaluation tasks, thus enhancing efficiency. Standardisation \u2014 Ensures consistency and comparability in evaluation methodologies, leading to more reliable and standardised assessments. Reproducibility \u2014 Facilitates reproducibility in research by providing a standardised platform, allowing for consistent validation of algorithms. Comprehensive Benchmarking \u2014 Enables thorough benchmarking of algorithms, providing well-founded comparisons and deeper insights into their performance. PhEval is a valuable tool for researchers looking to improve the accuracy and reliability of VGPA evaluations through a structured and standardised approach. Issue Tracker obographviz Issue Tracker robot Issue Tracker OntoGPT OntoGPT is a Python package for extracting structured information from text with large language models (LLMs), instruction prompts, and ontology-based grounding. It works well with OpenAI's GPT models as well as a selection of other LLMs. OntoGPT's output can be used for general-purpose natural language tasks (e.g., named entity recognition and relation extraction), summarization, knowledge base and knowledge graph construction, and more. Issue Tracker Aurelian Aurelian is an Agentic Universal Research Engine for Literature, Integration, Annotation, and Navigation. Issue Tracker Knowledge Graph Registry A simple registry for knowledge graphs, including Knowledge Graph Hub (KG-Hub) projects. Issue Tracker Knowledge Graph Hub The Knowledge Graph Hub (KG-Hub) is a platform that provides software development patterns for the standardized construction, exchange, and reuse of knowledge graphs. Features include a simple, modular extract-transform-load (ETL) pattern for ingest of upstream data in a Biolink-model compliant manner, cached downloads of upstream data, versioned and automatically updated builds, web-browsable storage of KG artifacts on cloud infrastructure, easy reuse of transformed subgraphs of upstream data across different projects, and easy integration of any OBO ontology. Issue Tracker LinkML Registry A collection of Linked Data Modeling Language (LinkML)schemas. Issue Tracker TALISMAN TALISMAN is a Python package for summarizing gene set functions using large language models (LLMs). Issue Tracker CurateGPT CurateGPT is a framework for performing general purpose AI-guided curation and curation-related operations over collections of objects, including ontologies and biological datasets. CurateGPT melds the power of generative AI together with trusted knowledge bases and literature sources. CurateGPT streamlines the curation process, enhancing collaboration and efficiency in common workflows. Compared to direct interaction with an LLM, CurateGPT's agents enable access to information beyond that in the LLM's training data and they provide direct links to the data supporting each claim. This helps curators, researchers, and engineers scale up curation efforts to keep pace with the ever-increasing volume of scientific data.CurateGPT also contains other tools and features, such as a prototype web application that allows LLMs to answer user questions using knowledge bases. Issue Tracker Monarch Python Toolkit Issue Tracker Babelon Toolkit Issue Tracker Fenominal Issue Tracker Koza Issue Tracker Linked Data Modeling Language LinkML (Linked data Modeling Language; linkml.io) is an open and extensible data modeling framework that provides a simple and structured way to describe and validate data. It includes a set of tools that make it easy to author, validate, and share data. LinkML can describe a range of data structures, from flat, list-based models to complex, interrelated, and normalized models that utilize polymorphism and compound inheritance. It offers an approachable syntax that is not tied to any one technical architecture, and can be integrated seamlessly with many existing frameworks. Its low barrier to entry allows people from different backgrounds and levels of technical expertise to collaborate to form a shared understanding of the underlying data semantics, providing an easy-to-understand basis for interdisciplinary collaboration. Its metamodel syntax allows modelers to focus on creating well-defined, stable, ontology-based data structures instead of a mixture of customized models and free text. LinkML helps reduce heterogeneity, complexity, and the proliferation of single-use data models while simultaneously enabling compliance with FAIR data standards. Issue Tracker Monarch Ingest The Monarch Ingest pulls in data from a wide variety of biomedical data sources and generates Biolink-compliant KGX files that are used to build the Monarch KG. Issue Tracker Monarch Mapping Registry Simple Standard for Ontology Mappings (SSSOM) mappings collected and curated by the Monarch Initiative. Issue Tracker HPO Language Translations Infrastructure to collect and coordinate HPO language translations. Issue Tracker Phenomizer A web application for clinical diagnostics in human genetics using semantic similarity searches in ontologies. Issue Tracker Phenogrid Phenogrid is a web component that visualizes semantic similarity calculations provided by OWLSim, as provided through APIs from the Monarch Initiative. Issue Tracker monarchr R package for easy access, manipulation, and analysis of the Monarch Initiative or other KGX-formatted knowledge graphs. Issue Tracker Phenomics Assistant An LLM retrieval augmented generation (RAG) agent for Monarch Initiative. Issue Tracker pheval.llm LLM Benchmarking in differential diagnostics. Issue Tracker phenopacket2prompt Creation of prompts from phenopackets, in multiple languages, intended for prompting LLMs. Issue Tracker AutoMAxO Streamline the creation of ontology annotations of MAxO via LLMs. Issue Tracker pheval.exomiser Exomiser plugin for PhEval. Issue Tracker pheval.ai_marrvel A PhEval plugin for integrating AI-MARRVEL, enabling variant prioritisation based on phenotypic data in a standardised pipeline Issue Tracker pheval.phen2gene A PhEval plugin for integrating Phen2Gene, enabling gene prioritisation based on phenotypic data in a standardised pipeline. Issue Tracker pheval.gado A PhEval plugin for integrating GADO, enabling gene prioritisation based on phenotypic data in a standardised pipeline. Issue Tracker pheval.svanna A PhEval plugin for integrating SvAnna, enabling structural variant prioritisation in a standardised pipeline. Issue Tracker pheval.lirical A PhEval plugin integrating LIRICAL for efficient phenotype and variant prioritisation in a standardised pipeline. Issue Tracker pheval.phenogenius A PhEval plugin for integrating PhenoGenius, enabling gene prioritisation based on phenotypic data in a standardised pipeline. Issue Tracker phenotype2phenopacket Phenotype2Phenopacket is a command-line tool that converts a phenotype annotation into GA4GH Phenopackets, facilitating standardised phenotypic data representation. Issue Tracker","title":"Tools documentation"},{"location":"#data-documentation","text":"Repository Description Tracker HPOA - Disease Annotations Issue Tracker HPOA - Phenotype to Gene Associations Issue Tracker HPOA - Gene to Phenotype Associations Issue Tracker HPOA Knowledge Graph Ingestible Issue Tracker Alliance Knowledge Graph Ingestible Issue Tracker","title":"Data documentation"},{"location":"#other-documentation-and-training-materials","text":"Repository Description Tracker OBO Academy A resource for self-paced training of Semantic Engineers. Issue Tracker Best practices for collaborative open source coding The best practice / house style guide maintained by Monarch's LBNL team members. Issue Tracker","title":"Other documentation and training materials"},{"location":"monarch-sop/","text":"Monarch Standard Operating Procedures New projects Creating a new project Every new project in the \"monarch-initative\" organisation MUST establish a public GitHub repository . Every new project MUST have an associated documentation page. A documentation page MUST fulfill the following criteria: Required information A \"home\" page which explains what the project is. A Monarch Initiative logo MUST be displayed somewhere on the page. A \"contributing\" page that explains, or links to an explanation, of how to contribute to the project. A \"use cases\" page that explains concrete use cases of the project. A \"Other Monarch Docs\" backlink to the main Monarch documentation pages (https://monarch-initiative.github.io/monarch-documentation/) An \"Editors guide\" that explains how the resource is maintained. The information should be sufficient for a new developer to take up maintenance of the resource. A \"contact\" page with clear instructions on how to contact the primary maintainer of the resource. The documentation SHOULD be maintained in markdown, and SHOULD follow the Monarch style guide . Every new project MUST assign an accountable contact person . Every new project MUST be registered in the Monarch Asset Registry database. Every new project that is either a new ontology, a new datamodel or schema, or a new software project, MUST follow their respective SOP (see below). Creating a new ontology Every new ontology MUST use a standard ODK setup . Creating a data model or schema Every new data model MUST use the LinkML Project Template . Creating a new Python project Every new python project in Monarch SHOULD use the Monarch Project Template to ensure uniform QC standards. Monarch Style guide Monarch documentation pages SHOULD follow the \"materials\" theme provided by the mkdocs framework. NOTE: This recommendation is provisional until we have a better colour scheme in place. Monarch AI Guidelines Every commit and PR created by an AI agent / tool MUST be created by a dedicated AI user account . Human user accounts MUST NOT be used for AI-generated content. AI-generated content (especially that is not reviewed by humans) MUST be flagged with appropriate metadata whenever it is asserted (ontologies or KGs). For example, axioms generated by an AI tool MUST be clearly marked as such by (a) providing a reference to the AI tool used and (b) providing an indication THAT the content was generated by an AI tool (e.g. MONDO:AI_GENERATED). Responsibilities of the \"primary contact\" of a resource (PCR) Monitor the projects issue tracker. User issues MUST be responded to within 2 weeks. Monarch internal issues MUST be responded to within 1 month. Respond to non-issue-tracker user correspondence (slack or email) User issues MUST be responded to within 2 weeks. Monarch internal issues MUST be responded to within 1 month. If the PCR is missing for more than 2 weeks at a time, they SHOULD name a replacement contact The PCR MUST report progress to the wider Monarch Community and Organisation on request by Monarch Leadership. The PCR MUST ensure the relevant SOPs to their resource, such as documentation requirements, are upheld.","title":"Monarch Standard Operating Procedures"},{"location":"monarch-sop/#monarch-standard-operating-procedures","text":"","title":"Monarch Standard Operating Procedures"},{"location":"monarch-sop/#new-projects","text":"","title":"New projects"},{"location":"monarch-sop/#creating-a-new-project","text":"Every new project in the \"monarch-initative\" organisation MUST establish a public GitHub repository . Every new project MUST have an associated documentation page. A documentation page MUST fulfill the following criteria: Required information A \"home\" page which explains what the project is. A Monarch Initiative logo MUST be displayed somewhere on the page. A \"contributing\" page that explains, or links to an explanation, of how to contribute to the project. A \"use cases\" page that explains concrete use cases of the project. A \"Other Monarch Docs\" backlink to the main Monarch documentation pages (https://monarch-initiative.github.io/monarch-documentation/) An \"Editors guide\" that explains how the resource is maintained. The information should be sufficient for a new developer to take up maintenance of the resource. A \"contact\" page with clear instructions on how to contact the primary maintainer of the resource. The documentation SHOULD be maintained in markdown, and SHOULD follow the Monarch style guide . Every new project MUST assign an accountable contact person . Every new project MUST be registered in the Monarch Asset Registry database. Every new project that is either a new ontology, a new datamodel or schema, or a new software project, MUST follow their respective SOP (see below).","title":"Creating a new project"},{"location":"monarch-sop/#creating-a-new-ontology","text":"Every new ontology MUST use a standard ODK setup .","title":"Creating a new ontology"},{"location":"monarch-sop/#creating-a-data-model-or-schema","text":"Every new data model MUST use the LinkML Project Template .","title":"Creating a data model or schema"},{"location":"monarch-sop/#creating-a-new-python-project","text":"Every new python project in Monarch SHOULD use the Monarch Project Template to ensure uniform QC standards.","title":"Creating a new Python project"},{"location":"monarch-sop/#monarch-style-guide","text":"Monarch documentation pages SHOULD follow the \"materials\" theme provided by the mkdocs framework. NOTE: This recommendation is provisional until we have a better colour scheme in place.","title":"Monarch Style guide"},{"location":"monarch-sop/#monarch-ai-guidelines","text":"Every commit and PR created by an AI agent / tool MUST be created by a dedicated AI user account . Human user accounts MUST NOT be used for AI-generated content. AI-generated content (especially that is not reviewed by humans) MUST be flagged with appropriate metadata whenever it is asserted (ontologies or KGs). For example, axioms generated by an AI tool MUST be clearly marked as such by (a) providing a reference to the AI tool used and (b) providing an indication THAT the content was generated by an AI tool (e.g. MONDO:AI_GENERATED).","title":"Monarch AI Guidelines"},{"location":"monarch-sop/#responsibilities-of-the-primary-contact-of-a-resource-pcr","text":"Monitor the projects issue tracker. User issues MUST be responded to within 2 weeks. Monarch internal issues MUST be responded to within 1 month. Respond to non-issue-tracker user correspondence (slack or email) User issues MUST be responded to within 2 weeks. Monarch internal issues MUST be responded to within 1 month. If the PCR is missing for more than 2 weeks at a time, they SHOULD name a replacement contact The PCR MUST report progress to the wider Monarch Community and Organisation on request by Monarch Leadership. The PCR MUST ensure the relevant SOPs to their resource, such as documentation requirements, are upheld.","title":"Responsibilities of the \"primary contact\" of a resource (PCR)"},{"location":"registry/","text":".md-typeset h1, .md-content__button { display: none; } Monarch Tool, Standard and Data Registry The Monarch Tool, Standard and Data Registry aims to provide a centralised view of the diverse ecosystem of tools, data and standards that Monarch supports. Standards developed or significantly supported by the Monarch Initiative Phenopackets Phenopackets PURL phenopackets Cite Ladewig, M. S., Jacobsen, J. O. B., Wagner, A. H., Danis, D., El Kassaby, B., Gargano, M., Groza, T., Baudis, M., Steinhaus, R., Seelow, D., Bechrakis, N. E., Mungall, C. J., Schofield, P. N., Elemento, O., Smith, L., McMurry, J. A., Munoz-Torres, M., Haendel, M. A., & Robinson, P. N. (2023). GA4GH Phenopackets: A practical introduction. Advanced Genetics, 4(1), 2200016. https://doi.org/10.1002/ggn2.202200016 Resource category Data Exchange Documentation https://phenopacket-schema.readthedocs.io/en/latest/introduction.html Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Foundational Main repository https://github.com/phenopackets/phenopacket-schema Responsible contact in Monarch Jules Jacobsen, https://orcid.org/0000-0002-3265-1591, @julesjacobsen Project boards Simple Standard for Ontology Mappings Simple Standard for Ontology Mappings PURL sssom Cite Matentzoglu, N., Balhoff, J. P., Bello, S. M., Bizon, C., Brush, M., Callahan, T. J., Chute, C. G., Duncan, W. D., Evelo, C. T., Gabriel, D., Graybeal, J., Gray, A., Gyori, B. M., Haendel, M., Harmse, H., Harris, N. L., Harrow, I., Hegde, H. B., Hoyt, A. L., Hoyt, C. T., Jiao, D., Jim\u00e9nez-Ruiz, E., Jupp, S., Kim, H., K\u00f6hler, S., Liener, T., Long, Q., Malone, J., McLaughlin, J. A., McMurry, J. A., Moxon, S., Munoz-Torres, M. C., Osumi-Sutherland, D., Overton, J. A., Peters, B., Putman, T., Queralt-Rosinach, N., Shefchek, K., Solbrig, H., Thessen, A., Tudorache, T., Vasilevsky, N., Wagner, A. H., & Mungall, C. J. (2022). A simple standard for sharing ontological mappings (SSSOM). Database, 2022, baac035. https://doi.org/10.1093/database/baac035 Resource category Data Exchange Documentation https://mapping-commons.github.io/sssom Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Core Main repository https://github.com/mapping-commons/sssom Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards SSSOM Toolkit , SSSOM Model Human Phenotype Ontology Human Phenotype Ontology PURL hp Cite Gargano, M. A., Matentzoglu, N., Coleman, B., Addo-Lartey, E. B., Anagnostopoulos, A. V., Anderton, J., Avillach, P., Bagley, A. M., Bak\u0161tein, E., Balhoff, J. P., Baynam, G., Bello, S. M., Berk, M., Bertram, H., Bishop, S., Blau, H., Bodenstein, D. F., Botas, P., Boztug, K., \u010cady, J., Callahan, T. J., Cameron, R., Carbon, S. J., Castellanos, F., Caufield, J. H., Chan, L. E., Chute, C. G., Cruz-Rojo, J., Dahan-Oliel, N., Davids, J. R., de Dieuleveult, M., de Souza, V., de Vries, B. B. A., de Vries, E., DePaulo, J. R., Derfalvi, B., Dhombres, F., Diaz-Byrd, C., Dingemans, A. J. M., Donadille, B., Duyzend, M., Elfeky, R., Essaid, S., Fabrizzi, C., Fico, G., Firth, H. V., Freudenberg-Hua, Y., Fullerton, J. M., Gabriel, D. L., Gilmour, K., Giordano, J., Goes, F. S., Moses, R. G., Green, I., Griese, M., Groza, T., Gu, W., Guthrie, J., Gyori, B., Hamosh, A., Hanauer, M., Hanu\u0161ov\u00e1, K., He, Y. O., Hegde, H., Helbig, I., Holasov\u00e1, K., Hoyt, C. T., Huang, S., Hurwitz, E., Jacobsen, J. O. B., Jiang, X., Joseph, L., Keramatian, K., King, B., Knoflach, K., Koolen, D. A., Kraus, M. L., Kroll, C., Kusters, M., Ladewig, M. S., Lagorce, D., Lai, M. C., Lapunzina, P., Laraway, B., Lewis-Smith, D., Li, X., Lucano, C., Majd, M., Marazita, M. L., Martinez-Glez, V., McHenry, T. H., McInnis, M. G., McMurry, J. A., Mihulov\u00e1, M., Millett, C. E., Mitchell, P. B., Moslerov\u00e1, V., Narutomi, K., Nematollahi, S., Nevado, J., Nierenberg, A. A., \u010cajbikov\u00e1, N. N., Nurnberger, J. I., Ogishima, S., Olson, D., Ortiz, A., Pachajoa, H., Perez de Nanclares, G., Peters, A., Putman, T., Rapp, C. K., Rath, A., Reese, J., Rekerle, L., Roberts, A. M., Roy, S., Sanders, S. J., Schuetz, C., Schulte, E. C., Schulze, T. G., Schwarz, M., Scott, K., Seelow, D., Seitz, B., Shen, Y., Similuk, M. N., Simon, E. S., Singh, B., Smedley, D., Smith, C. L., Smolinsky, J. T., Sperry, S., Stafford, E., Stefancsik, R., Steinhaus, R., Strawbridge, R., Sundaramurthi, J. C., Talapova, P., Tenorio Castano, J. A., Tesner, P., Thomas, R. H., Thurm, A., Turnovec, M., van Gijn, M. E., Vasilevsky, N. A., Vl\u010dkov\u00e1, M., Walden, A., Wang, K., Wapner, R., Ware, J. S., Wiafe, A. A., Wiafe, S. A., Wiggins, L. D., Williams, A. E., Wu, C., Wyrwoll, M. J., Xiong, H., Yalin, N., Yamamoto, Y., Yatham, L. N., Yocum, A. K., Young, A. H., Y\u00fcksel, Z., Zandi, P. P., Zankl, A., Zarante, I., Zvolsk\u00fd, M., Toro, S., Carmody, L. C., Harris, N. L., Munoz-Torres, M. C., Danis, D., Mungall, C. J., K\u00f6hler, S., Haendel, M. A., & Robinson, P. N. (2024). The Human Phenotype Ontology in 2024: Phenotypes around the world. Nucleic Acids Research, 52(D1), D1333\u2013D1346. https://doi.org/10.1093/nar/gkad1005 Resource category Ontology Documentation https://obophenotype.github.io/human-phenotype-ontology/ Monarch role in the development Lead Grants involved in this standard HPO, Phenomics First Role in Monarchs strategic vision Foundational Main repository https://github.com/obophenotype/human-phenotype-ontology Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards obographs obographs PURL obographs Cite Resource category Data Exchange Documentation https://incatools.github.io/ontology-access-kit/datamodels/obograph/index.html Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Support Main repository https://github.com/geneontology/obographs Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards Mondo Disease Ontology Mondo Disease Ontology PURL mondo Cite Vasilevsky, N. A., Matentzoglu, N. A., Toro, S., Flack, J. E., Hegde, H., Unni, D. R., Alyea, G., Amberger, J. S., Babb, L., Balhoff, J. P., Bingaman, T. I., Burns, G. A., Callahan, T. J., Carmody, L. C., Chan, L. E., Chang, G. S., Dumontier, M., Failla, L. E., Flowers, M. J., Garrett, H. A., Gration, D., Groza, T., Hanauer, M., Harris, N. L., Helbig, I., Hilton, J. A., Himmelstein, D. S., Hoyt, C. T., Kane, M. S., K\u00f6hler, S., Lagorce, D., Larralde, M., Lock, A., L\u00f3pez Santiago, I., Maglott, D. R., Malheiro, A. J., Meldal, B. H. M., McMurry, J. A., Munoz-Torres, M., Nelson, T. H., Ochoa, D., Oprea, T. I., Osumi-Sutherland, D., Parkinson, H., Pendlington, Z. M., Rath, A., Rehm, H. L., Remennik, L., Riggs, E. R., Roncaglia, P., Ross, J. E., Shadbolt, M. F., Shefchek, K. A., Similuk, M. N., Sioutos, N., Sparks, R., Stefancsik, R., Stephan, R., Stupp, D., Sundaramurthi, J. C., Tammen, I., Thaxton, C. L., Valasek, E., Wagner, A. H., Welter, D., Whetzel, P. L., Whiteman, L. L., Wood, V., Xu, C. H., Zankl, A., Zhang, X. A., Chute, C. G., Robinson, P. N., Mungall, C. J., Hamosh, A., & Haendel, M. A. (2022). Mondo: Unifying diseases for the world, by the world [Preprint]. medRxiv. https://doi.org/10.1101/2022.04.13.22273750 Resource category Ontology Documentation https://mondo.readthedocs.io/en/latest Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Foundational Main repository https://github.com/monarch-initiative/mondo Responsible contact in Monarch Sabrina Toro, https://orcid.org/0000-0002-4142-7153, @sabrinatoro Project boards Genotype Ontology Genotype Ontology PURL geno Cite Monarch Initiative. (n.d.). GENO-ontology [Source code]. GitHub. https://github.com/monarch-initiative/GENO-ontology Resource category Ontology Documentation https://github.com/monarch-initiative/GENO-ontology Monarch role in the development Lead Grants involved in this standard Monarch R24 Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/GENO-ontology Responsible contact in Monarch Matt Brush, https://orcid.org/0000-0002-1048-5019, @mbrush Project boards Scientific Evidence and Provenance Information Ontology Scientific Evidence and Provenance Information Ontology PURL sepio Cite Monarch Initiative. (n.d.). SEPIO-ontology [Source code]. GitHub. https://github.com/monarch-initiative/SEPIO-ontology Resource category Ontology Documentation https://github.com/monarch-initiative/SEPIO-ontology Monarch role in the development Lead Grants involved in this standard Monarch R24 Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/SEPIO-ontology Responsible contact in Monarch Matt Brush, https://orcid.org/0000-0002-1048-5019, @mbrush Project boards Vertebrate Breed Ontology Vertebrate Breed Ontology PURL vbo Cite Mullen, K. R., Tammen, I., Matentzoglu, N. A., Mather, M., Balhoff, J. P., Esdaile, E., Leroy, G., Park, C. A., Rando, H. M., Saklou, N. T., Webb, T. L., Vasilevsky, N. A., Mungall, C. J., Haendel, M. A., Nicholas, F. W., & Toro, S. (2025). The Vertebrate Breed Ontology: Toward effective breed data standardization. Journal of Veterinary Internal Medicine, 39(4), e70133. https://doi.org/10.1111/jvim.70133 Resource category Ontology Documentation https://monarch-initiative.github.io/vertebrate-breed-ontology Monarch role in the development Lead Grants involved in this standard Monarch R24 Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/vertebrate-breed-ontology Responsible contact in Monarch Sabrina Toro, https://orcid.org/0000-0002-4142-7153, @sabrinatoro Project boards The Unified Phenotype Ontology The Unified Phenotype Ontology PURL upheno Cite Matentzoglu, N., Bello, S. M., Stefancsik, R., Alghamdi, S. M., Anagnostopoulos, A. V., Balhoff, J. P., Balk, M. A., Bradford, Y. M., Bridges, Y., Callahan, T. J., Caufield, H., Cuzick, A., Carmody, L. C., Caron, A. R., de Souza, V., Engel, S. R., Fey, P., Fisher, M., Gehrke, S., Grove, C., Hansen, P., Harris, N. L., Harris, M. A., Harris, L., Ibrahim, A., Jacobsen, J. O. B., K\u00f6hler, S., McMurry, J. A., Munoz-Fuentes, V., Munoz-Torres, M. C., Parkinson, H., Pendlington, Z. M., Pilgrim, C., Robb, S. M., Robinson, P. N., Seager, J., Segerdell, E., Smedley, D., Sollis, E., Toro, S., Vasilevsky, N., Wood, V., Haendel, M. A., Mungall, C. J., McLaughlin, J. A., & Osumi-Sutherland, D. (2025). The Unified Phenotype Ontology: A framework for cross-species integrative phenomics. Genetics, 229(3), iyaf027. https://doi.org/10.1093/genetics/iyaf027 Resource category Ontology Documentation https://obophenotype.github.io/upheno Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Core Main repository https://github.com/obophenotype/upheno Responsible contact in Monarch James McLaughlin, https://orcid.org/0000-0002-8361-2795, @udp Project boards uPheno 2 Ontology Development Medical Action Ontology Medical Action Ontology PURL maxo Cite Resource category Ontology Documentation https://github.com/monarch-initiative/MAxO Monarch role in the development Lead Grants involved in this standard HPO Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards Ontology of Biological Attributes Ontology of Biological Attributes PURL oba Cite Stefancsik, R., Balhoff, J. P., Balk, M. A., et al. (2023). The Ontology of Biological Attributes (OBA)\u2014Computational traits for the life sciences. Mammalian Genome, 34, 364\u2013378. https://doi.org/10.1007/s00335-023-09992-1 Resource category Ontology Documentation https://obophenotype.github.io/bio-attribute-ontology Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Core Main repository https://github.com/obophenotype/bio-attribute-ontology Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards OBA Ontology Development (uPheno board) Uberon Anatomy Ontology Uberon Anatomy Ontology PURL uberon Cite Mungall, C. J., Torniai, C., Gkoutos, G. V., Lewis, S. E., & Haendel, M. A. (2012). Uberon, an integrative multi-species anatomy ontology. Genome Biology, 13(1), R5. DOI: https://doi.org/10.1186/gb-2012-13-1-r5 PubMed: https://pubmed.ncbi.nlm.nih.gov/22293552 Haendel, M. A., Balhoff, J. P., Bastian, F. B., Blackburn, D. C., Blake, J. A., Bradford, Y., Comte, A., Dahdul, W. M., Dececchi, T. A., Druzinsky, R. E., Hayamizu, T. F., Ibrahim, N., Lewis, S. E., Mabee, P. M., Niknejad, A., Robinson-Rechavi, M., Sereno, P. C., & Mungall, C. J. (2014). Unification of multi-species vertebrate anatomy ontologies for comparative biology in Uberon. Journal of Biomedical Semantics, 5(1), 21. DOI: https://doi.org/10.1186/2041-1480-5-21 PubMed: https://pubmed.ncbi.nlm.nih.gov/24742169 | | Resource category | Ontology | | Documentation | https://obophenotype.github.io/uberon | | Monarch role in the development | Co-Lead | | Grants involved in this standard | Phenomics First | | Role in Monarchs strategic vision | Foundational | | Main repository | https://github.com/obophenotype/uberon | | Responsible contact in Monarch | Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall | | Project boards | | Phenomics Integrated Ontology Phenomics Integrated Ontology PURL phenio Cite Monarch Initiative. (n.d.). phenio [Source code]. GitHub. https://github.com/monarch-initiative/phenio Resource category Ontology Documentation https://monarch-initiative.github.io/phenio Monarch role in the development Lead Grants involved in this standard Monarch R24 Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/phenio Responsible contact in Monarch Harry Caufield, https://orcid.org/0000-0001-5705-7831, @caufieldjh Project boards Environmental Conditions, Treatments and Exposures Ontology Environmental Conditions, Treatments and Exposures Ontology PURL ecto Cite Matentzoglu, N. A., Vasilevsky, N. A., Balhoff, J. P., Bello, S. M., Brush, M. H., Carbon, S., Carmody, L. C., Cooper, L., Courtot, M., Diehl, A. D., Duncan, W. D., Harris, N. L., Haendel, M. A., Mungall, C. J., Osumi-Sutherland, D., Relevo, R., Segerdell, E., Smith, C. L., & Robinson, P. N. (2023). The Environmental Conditions, Treatments, and Exposures Ontology (ECTO): connecting toxicology and exposure to human health and beyond https://doi.org/10.1186/s13326-023-00283-x Resource category Ontology Documentation https://github.com/EnvironmentOntology/environmental-exposure-ontology Monarch role in the development Lead Grants involved in this standard TBD Role in Monarchs strategic vision Support Main repository https://github.com/EnvironmentOntology/environmental-exposure-ontology Responsible contact in Monarch Anne Thessen, https://orcid.org/0000-0002-2908-3327, @diatomsRcool Project boards Dead simple owl design pattern (DOS-DP) exchange format Dead simple owl design pattern (DOS-DP) exchange format PURL dead_simple_owl_design_patterns Cite Resource category Data Exchange Documentation https://incatools.github.io/dead_simple_owl_design_patterns/ Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Support Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards Knowledge Graph Change Language Knowledge Graph Change Language PURL kgcl Cite Resource category Ontology Curation Documentation https://incatools.github.io/kgcl/ Monarch role in the development Lead Grants involved in this standard Bosch Gift Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards Babelon - A simple standard for managing ontology translations and language profiles Babelon - A simple standard for managing ontology translations and language profiles PURL babelon Cite Resource category Data Exchange Documentation https://monarch-initiative.github.io/babelon/ Monarch role in the development Lead Grants involved in this standard HPO Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/babelon Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards Tools and Services developed or significantly supported by the Monarch Initiative Exomiser Exomiser PURL exomiser Cite Smedley, D., Schubach, M., Jacobsen, J. O. B., K\u00f6hler, S., Zemojtel, T., Spielmann, M., J\u00e4ger, M., Hochheiser, H., Washington, N. L., McMurry, J. A., Haendel, M. A., Mungall, C. J., Lewis, S. E., Groza, T., Valentini, G., & Robinson, P. N. (2016). A whole-genome analysis framework for effective identification of pathogenic regulatory variants in Mendelian disease. The American Journal of Human Genetics, 99(3), 595\u2013606. https://doi.org/10.1016/j.ajhg.2016.07.005 Resource category Clinical Diagnosis Documentation https://exomiser.readthedocs.io Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Foundational Main repository https://github.com/exomiser/Exomiser Responsible contact in Monarch Jules Jacobsen, https://orcid.org/0000-0002-3265-1591, @julesjacobsen Project boards Monarch Knowledge Graph & Services Monarch Knowledge Graph & Services PURL monarch_kg_services Cite Resource category Clinical Diagnosis Documentation https://monarch-initiative.github.io/monarch-ingest/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Foundational Main repository https://github.com/monarch-initiative/monarch-app Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards Monarch App Monarch App PURL monarch_app Cite Resource category Clinical Diagnosis Documentation https://monarch-app.monarchinitiative.org/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/monarch-app Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards Monarch API Monarch API PURL monarch_api Cite Resource category Clinical Diagnosis Documentation https://monarch-app.monarchinitiative.org/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/monarch-app Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards Ontology Development Kit Ontology Development Kit PURL odk Cite Matentzoglu, N., Goutte-Gattat, D., Tan, S. Z. K., Balhoff, J. P., Carbon, S., Caron, A. R., Duncan, W. D., Flack, J. E., Haendel, M., Harris, N. L., Hogan, W. R., Hoyt, C. T., Jackson, R. C., Kim, H., Kir, H., Larralde, M., McMurry, J. A., Overton, J. A., Peters, B., Pilgrim, C., Stefancsik, R., Robb, S. M. C., Toro, S., Vasilevsky, N. A., Walls, R., Mungall, C. J., & Osumi-Sutherland, D. (2022). Ontology Development Kit: A toolkit for building, maintaining and standardizing biomedical ontologies. Database, 2022, baac087. https://doi.org/10.1093/database/baac087 Resource category Ontology Maintenance Documentation https://incatools.github.io/ontology-development-kit Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/INCATools/ontology-development-kit Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards ODK Milestones Monarch OLS Monarch OLS PURL monarch_ols Cite EBISPOT. (n.d.). OLS4 [Source code]. GitHub. https://github.com/EBISPOT/ols4 Resource category Registry Documentation https://github.com/monarch-initiative/ontotools-docker Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/ontotools-docker Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards Ontology Access Kit Ontology Access Kit PURL oak Cite INCATools. (n.d.). ontology-access-kit [Source code]. GitHub. https://github.com/INCATools/ontology-access-kit Resource category Ontology Use Documentation https://incatools.github.io/ontology-access-kit Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/INCATools/ontology-access-kit Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards OAK Project Board SSSOM Toolkit SSSOM Toolkit PURL sssom_py Cite Resource category Mapping Documentation https://mapping-commons.github.io/sssom-py Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards POET POET PURL poet Cite Resource category Data Curation Documentation TBD Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/TheJacksonLaboratory/POET Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards LIkelihood Ratio Interpretation of Clinical AbnormaLities (LIRICAL) LIkelihood Ratio Interpretation of Clinical AbnormaLities (LIRICAL) PURL lirical Cite Resource category Clinical Diagnosis Documentation https://lirical.readthedocs.io/en/latest/ Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/TheJacksonLaboratory/LIRICAL Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards PhEval PhEval PURL pheval Cite Bridges, Y., Souza, V., Cortes, K. G., Haendel, M., Harris, N. L., Korn, D. R., Marinakis, N. M., Matentzoglu, N., McLaughlin, J. A., Mungall, C. J., Odell, A., Osumi-Sutherland, D., Robinson, P. N., Smedley, D., & Jacobsen, J. O. B. (2025). Towards a standard benchmark for phenotype-driven variant and gene prioritisation algorithms: PhEval \u2013 Phenotypic inference evaluation framework. BMC Bioinformatics, 26(1), 87. https://doi.org/10.1186/s12859-025-06105-4. Resource category Benchmarking Documentation https://monarch-initiative.github.io/pheval Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval Responsible contact in Monarch Jules Jacobsen, https://orcid.org/0000-0002-3265-1591, @julesjacobsen Project boards obographviz obographviz PURL obographviz Cite Resource category Ontology Use Documentation https://github.com/INCATools/obographviz#readme Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/INCATools/obographviz Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards ubergraph ubergraph PURL ubergraph Cite Resource category Ontology Use Documentation TBD Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/INCATools/ubergraph Responsible contact in Monarch Jim Balhoff, https://orcid.org/0000-0002-8688-6599, @balhoff Project boards whelk whelk PURL whelk Cite Resource category Ontology Use Documentation TBD Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/balhoff/whelk Responsible contact in Monarch Jim Balhoff, https://orcid.org/0000-0002-8688-6599, @balhoff Project boards robot robot PURL robot Cite Resource category Ontology Use Documentation https://robot.obolibrary.org Monarch role in the development Contributor Grants involved in this standard Role in Monarchs strategic vision Community Main repository https://github.com/ontodev/robot Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards Data Harmonizer Data Harmonizer PURL data_harmonizer Cite Resource category Data Curation Documentation TBD Monarch role in the development Contributor Grants involved in this standard Role in Monarchs strategic vision Community Main repository https://github.com/cidgoh/DataHarmonizer Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards OntoGPT OntoGPT PURL ontogpt Cite Caufield, J. H., Hegde, H., Emonet, V., Harris, N. L., Joachimiak, M. P., Matentzoglu, N., Kim, H., Moxon, S., Reese, J. T., Haendel, M. A., Robinson, P. N., & Mungall, C. J. (2024). Structured Prompt Interrogation and Recursive Extraction of Semantics (SPIRES): A method for populating knowledge bases using zero-shot learning. Bioinformatics, 40(3). https://doi.org/10.1093/bioinformatics/btae104 Resource category Data Curation Documentation https://monarch-initiative.github.io/ontogpt Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/ontogpt Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards Aurelian Aurelian PURL aurelian Cite Resource category Data Curation Documentation https://github.com/monarch-initiative/aurelian Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/aurelian Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards Knowledge Graph Registry Knowledge Graph Registry PURL kg_registry Cite Knowledge Graph Hub. (n.d.). kg-registry [Source code]. GitHub. https://github.com/Knowledge-Graph-Hub/kg-registry Resource category Registry Documentation https://github.com/Knowledge-Graph-Hub/kg-registry Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/Knowledge-Graph-Hub/kg-registry Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards Knowledge Graph Hub Knowledge Graph Hub PURL kg_hub Cite Caufield, J. H., Putman, T., Schaper, K., Unni, D. R., Hegde, H., Callahan, T. J., Cappelletti, L., Moxon, S. A. T., Ravanmehr, V., Carbon, S., Chan, L. E., Cortes, K., Shefchek, K. A., Elsarboukh, G., Balhoff, J. P., Fontana, T., Matentzoglu, N., Bruskiewich, R. M., Thessen, A. E., Harris, N. L., Munoz-Torres, M. C., Haendel, M. A., Robinson, P. N., Joachimiak, M. P., Mungall, C. J., & Reese, J. T. (2023). KG-Hub \u2014 Building and exchanging biological knowledge graphs (arXiv:2302.10800). arXiv. https://arxiv.org/abs/2302.10800 Resource category Registry Documentation https://github.com/Knowledge-Graph-Hub/knowledge-graph-hub.github.io Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/Knowledge-Graph-Hub/knowledge-graph-hub.github.io Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards LinkML Registry LinkML Registry PURL linkml_registry Cite LinkML. (n.d.). linkml-registry [Source code]. GitHub. https://github.com/linkml/linkml-registry Resource category Registry Documentation https://linkml.io/linkml-registry/registry Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/linkml/linkml-registry Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards TALISMAN TALISMAN PURL talisman Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/talisman/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/talisman/ Responsible contact in Monarch Marcin Joachimiak, https://orcid.org/0000-0001-8175-045X, @realmarcin Project boards CurateGPT CurateGPT PURL curate_gpt Cite Caufield, H., Kroll, C., O\u2019Neil, S. T., Reese, J. T., Joachimiak, M. P., Hegde, H., Harris, N. L., Krishnamurthy, M., McLaughlin, J. A., Smedley, D., Haendel, M. A., Robinson, P. N., & Mungall, C. J. (2024). CurateGPT: A flexible language-model assisted biocuration tool. arXiv [cs.CL]. http://arxiv.org/abs/2411.00046 Resource category Data Curation Documentation https://monarch-initiative.github.io/curategpt Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/curate-gpt Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards semsimian semsimian PURL semsimian Cite Resource category Mapping Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/semsimian Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards Monarch Python Toolkit Monarch Python Toolkit PURL monarch_py Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/monarch-py/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/monarch-app/backend Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards Babelon Toolkit Babelon Toolkit PURL babelon Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/babelon/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/babelon Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards Fenominal Fenominal PURL fenominal Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/fenominal/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/fenominal Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards Koza Koza PURL koza Cite Resource category Data Curation Documentation https://koza.monarchinitiative.org/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/fenominal Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards Linked Data Modeling Language Linked Data Modeling Language PURL linkml Cite Moxon, S., Solbrig, H., Unni, D., Jiao, D., Bruskiewich, R., Balhoff, J., Vaidya, G., Duncan, W., Hegde, H., Miller, M., Brush, M., Harris, N., Haendel, M., & Mungall, C. (2021). The Linked Data Modeling Language (LinkML): A general-purpose data modeling framework grounded in machine-readable semantics. CEUR Workshop Proceedings, 3073, 148\u2013151 Resource category Data Curation Documentation https://linkml.io/linkml/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/linkml Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards Monarch Ingest Monarch Ingest PURL monarch_ingest Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/monarch-ingest Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/monarch-ingest Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards Monarch Mapping Registry Monarch Mapping Registry PURL monarch_mapping_registry Cite Monarch Initiative. (n.d.). monarch-mapping-commons [Source code]. GitHub. https://github.com/monarch-initiative/monarch-mapping-commons Resource category Registry Documentation https://github.com/monarch-initiative/monarch-mapping-commons Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/monarch-mapping-commons Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards HPO Language Translations HPO Language Translations PURL hpo_translations Cite Resource category Ontology Maintenance Documentation https://obophenotype.github.io/hpo-translations Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/obophenotype/hpo-translations Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards Phenomizer Phenomizer PURL Phenomiser Cite Resource category Clinical Diagnosis Documentation https://github.com/TheJacksonLaboratory/Phenomiser Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/TheJacksonLaboratory/Phenomiser Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards Phenogrid Phenogrid PURL phenogrid Cite Resource category Clinical Diagnosis Documentation https://github.com/monarch-initiative/phenogrid Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/phenogrid Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards monarchr monarchr PURL monarchr Cite Resource category Ontology Use Documentation https://github.com/monarch-initiative/monarchr Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/monarchr Responsible contact in Monarch Shawn O'Neil, https://orcid.org/0000-0001-6220-7080, @oneilsh Project boards Phenomics Assistant Phenomics Assistant PURL phenomics_assistant Cite Resource category Clinical Diagnosis Documentation https://github.com/monarch-initiative/phenomics-assistant Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/phenomics-assistant Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards pheval.llm pheval.llm PURL pheval.llm Cite Resource category Benchmarking Documentation https://monarch-initiative.github.io/pheval.llm Monarch role in the development Co-Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/pheval.llm Responsible contact in Monarch Leonardo Chimirri, https://orcid.org/0000-0002-6912-8518, @leokim-l Project boards phenopacket2prompt phenopacket2prompt PURL phenopacket2prompt Cite Resource category Clinical Diagnosis Documentation https://monarch-initiative.github.io/phenopacket2prompt Monarch role in the development Co-Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/phenopacket2prompt Responsible contact in Monarch Leonardo Chimirri, https://orcid.org/0000-0002-6912-8518, @leokim-l Project boards AutoMAxO AutoMAxO PURL automaxo Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/automaxo Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/automaxo/ Responsible contact in Monarch Enock Niyonkuru, https://orcid.org/0000-0002-7981-8133, @enockniyonkuru Project boards pheval.exomiser pheval.exomiser PURL pheval.exomiser Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.exomiser Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.exomiser Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards pheval.ai_marrvel pheval.ai_marrvel PURL pheval.ai_marrvel Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.ai_marrvel Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.ai_marrvel Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards pheval.phen2gene pheval.phen2gene PURL pheval.phen2gene Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.phen2gene Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.phen2gene Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards pheval.gado pheval.gado PURL pheval.gado Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.gado Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.gado Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards pheval.svanna pheval.svanna PURL pheval.svanna Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.svanna Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.svanna Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards pheval.lirical pheval.lirical PURL pheval.lirical Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.lirical Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.lirical Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards pheval.phenogenius pheval.phenogenius PURL pheval.phenogenius Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.phenogenius Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.phenogenius Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards phenotype2phenopacket phenotype2phenopacket PURL phenotype2phenopacket Cite Resource category Data Curation Documentation https://github.com/monarch-initiative/phenotype2phenopacket Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/phenotype2phenopacket Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards Datasets developed by the Monarch Initiative HPOA - Disease Annotations HPOA - Disease Annotations PURL phenotype.hpoa Cite Resource category Biomedical Data Documentation https://hpo-annotation-qc.readthedocs.io/en/latest/annotationFormat.html#phenotype-hpoa-format Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards HPOA - Phenotype to Gene Associations HPOA - Phenotype to Gene Associations PURL phenotype_to_genes.txt Cite Resource category Biomedical Data Documentation https://hpo.jax.org/app/download/annotation Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards HPOA - Gene to Phenotype Associations HPOA - Gene to Phenotype Associations PURL genes_to_phenotype.txt Cite Resource category Biomedical Data Documentation https://hpo.jax.org/app/download/annotation Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards HPOA Knowledge Graph Ingestible HPOA Knowledge Graph Ingestible PURL hpoa Cite Resource category Knowledge Graph Ingestibles Documentation https://monarch-initiative.github.io/monarch-ingest/Sources/HPOA/ Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards Alliance Knowledge Graph Ingestible Alliance Knowledge Graph Ingestible PURL alliance Cite Resource category Knowledge Graph Ingestibles Documentation https://monarch-initiative.github.io/monarch-ingest/Sources/Alliance/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards KG Covid-19 KG Covid-19 PURL kg_covid_19 Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards ECO KG ECO KG PURL eco_kg Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards KG IDG KG IDG PURL kg_idg Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards KG Phenio KG Phenio PURL kg_phenio Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards KG OBO KG OBO PURL kg_obo Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards KG Microbe KG Microbe PURL kg_microbe Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards SRI Reference KG SRI Reference KG PURL sri_reference_kg Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards Monarch KG Monarch KG PURL monarch_ingest Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Registry"},{"location":"registry/#monarch-tool-standard-and-data-registry","text":"The Monarch Tool, Standard and Data Registry aims to provide a centralised view of the diverse ecosystem of tools, data and standards that Monarch supports.","title":"Monarch Tool, Standard and Data Registry"},{"location":"registry/#standards-developed-or-significantly-supported-by-the-monarch-initiative","text":"","title":"Standards developed or significantly supported by the Monarch Initiative"},{"location":"registry/#phenopackets","text":"Phenopackets PURL phenopackets Cite Ladewig, M. S., Jacobsen, J. O. B., Wagner, A. H., Danis, D., El Kassaby, B., Gargano, M., Groza, T., Baudis, M., Steinhaus, R., Seelow, D., Bechrakis, N. E., Mungall, C. J., Schofield, P. N., Elemento, O., Smith, L., McMurry, J. A., Munoz-Torres, M., Haendel, M. A., & Robinson, P. N. (2023). GA4GH Phenopackets: A practical introduction. Advanced Genetics, 4(1), 2200016. https://doi.org/10.1002/ggn2.202200016 Resource category Data Exchange Documentation https://phenopacket-schema.readthedocs.io/en/latest/introduction.html Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Foundational Main repository https://github.com/phenopackets/phenopacket-schema Responsible contact in Monarch Jules Jacobsen, https://orcid.org/0000-0002-3265-1591, @julesjacobsen Project boards","title":"Phenopackets"},{"location":"registry/#simple-standard-for-ontology-mappings","text":"Simple Standard for Ontology Mappings PURL sssom Cite Matentzoglu, N., Balhoff, J. P., Bello, S. M., Bizon, C., Brush, M., Callahan, T. J., Chute, C. G., Duncan, W. D., Evelo, C. T., Gabriel, D., Graybeal, J., Gray, A., Gyori, B. M., Haendel, M., Harmse, H., Harris, N. L., Harrow, I., Hegde, H. B., Hoyt, A. L., Hoyt, C. T., Jiao, D., Jim\u00e9nez-Ruiz, E., Jupp, S., Kim, H., K\u00f6hler, S., Liener, T., Long, Q., Malone, J., McLaughlin, J. A., McMurry, J. A., Moxon, S., Munoz-Torres, M. C., Osumi-Sutherland, D., Overton, J. A., Peters, B., Putman, T., Queralt-Rosinach, N., Shefchek, K., Solbrig, H., Thessen, A., Tudorache, T., Vasilevsky, N., Wagner, A. H., & Mungall, C. J. (2022). A simple standard for sharing ontological mappings (SSSOM). Database, 2022, baac035. https://doi.org/10.1093/database/baac035 Resource category Data Exchange Documentation https://mapping-commons.github.io/sssom Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Core Main repository https://github.com/mapping-commons/sssom Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards SSSOM Toolkit , SSSOM Model","title":"Simple Standard for Ontology Mappings"},{"location":"registry/#human-phenotype-ontology","text":"Human Phenotype Ontology PURL hp Cite Gargano, M. A., Matentzoglu, N., Coleman, B., Addo-Lartey, E. B., Anagnostopoulos, A. V., Anderton, J., Avillach, P., Bagley, A. M., Bak\u0161tein, E., Balhoff, J. P., Baynam, G., Bello, S. M., Berk, M., Bertram, H., Bishop, S., Blau, H., Bodenstein, D. F., Botas, P., Boztug, K., \u010cady, J., Callahan, T. J., Cameron, R., Carbon, S. J., Castellanos, F., Caufield, J. H., Chan, L. E., Chute, C. G., Cruz-Rojo, J., Dahan-Oliel, N., Davids, J. R., de Dieuleveult, M., de Souza, V., de Vries, B. B. A., de Vries, E., DePaulo, J. R., Derfalvi, B., Dhombres, F., Diaz-Byrd, C., Dingemans, A. J. M., Donadille, B., Duyzend, M., Elfeky, R., Essaid, S., Fabrizzi, C., Fico, G., Firth, H. V., Freudenberg-Hua, Y., Fullerton, J. M., Gabriel, D. L., Gilmour, K., Giordano, J., Goes, F. S., Moses, R. G., Green, I., Griese, M., Groza, T., Gu, W., Guthrie, J., Gyori, B., Hamosh, A., Hanauer, M., Hanu\u0161ov\u00e1, K., He, Y. O., Hegde, H., Helbig, I., Holasov\u00e1, K., Hoyt, C. T., Huang, S., Hurwitz, E., Jacobsen, J. O. B., Jiang, X., Joseph, L., Keramatian, K., King, B., Knoflach, K., Koolen, D. A., Kraus, M. L., Kroll, C., Kusters, M., Ladewig, M. S., Lagorce, D., Lai, M. C., Lapunzina, P., Laraway, B., Lewis-Smith, D., Li, X., Lucano, C., Majd, M., Marazita, M. L., Martinez-Glez, V., McHenry, T. H., McInnis, M. G., McMurry, J. A., Mihulov\u00e1, M., Millett, C. E., Mitchell, P. B., Moslerov\u00e1, V., Narutomi, K., Nematollahi, S., Nevado, J., Nierenberg, A. A., \u010cajbikov\u00e1, N. N., Nurnberger, J. I., Ogishima, S., Olson, D., Ortiz, A., Pachajoa, H., Perez de Nanclares, G., Peters, A., Putman, T., Rapp, C. K., Rath, A., Reese, J., Rekerle, L., Roberts, A. M., Roy, S., Sanders, S. J., Schuetz, C., Schulte, E. C., Schulze, T. G., Schwarz, M., Scott, K., Seelow, D., Seitz, B., Shen, Y., Similuk, M. N., Simon, E. S., Singh, B., Smedley, D., Smith, C. L., Smolinsky, J. T., Sperry, S., Stafford, E., Stefancsik, R., Steinhaus, R., Strawbridge, R., Sundaramurthi, J. C., Talapova, P., Tenorio Castano, J. A., Tesner, P., Thomas, R. H., Thurm, A., Turnovec, M., van Gijn, M. E., Vasilevsky, N. A., Vl\u010dkov\u00e1, M., Walden, A., Wang, K., Wapner, R., Ware, J. S., Wiafe, A. A., Wiafe, S. A., Wiggins, L. D., Williams, A. E., Wu, C., Wyrwoll, M. J., Xiong, H., Yalin, N., Yamamoto, Y., Yatham, L. N., Yocum, A. K., Young, A. H., Y\u00fcksel, Z., Zandi, P. P., Zankl, A., Zarante, I., Zvolsk\u00fd, M., Toro, S., Carmody, L. C., Harris, N. L., Munoz-Torres, M. C., Danis, D., Mungall, C. J., K\u00f6hler, S., Haendel, M. A., & Robinson, P. N. (2024). The Human Phenotype Ontology in 2024: Phenotypes around the world. Nucleic Acids Research, 52(D1), D1333\u2013D1346. https://doi.org/10.1093/nar/gkad1005 Resource category Ontology Documentation https://obophenotype.github.io/human-phenotype-ontology/ Monarch role in the development Lead Grants involved in this standard HPO, Phenomics First Role in Monarchs strategic vision Foundational Main repository https://github.com/obophenotype/human-phenotype-ontology Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards","title":"Human Phenotype Ontology"},{"location":"registry/#obographs","text":"obographs PURL obographs Cite Resource category Data Exchange Documentation https://incatools.github.io/ontology-access-kit/datamodels/obograph/index.html Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Support Main repository https://github.com/geneontology/obographs Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"obographs"},{"location":"registry/#mondo-disease-ontology","text":"Mondo Disease Ontology PURL mondo Cite Vasilevsky, N. A., Matentzoglu, N. A., Toro, S., Flack, J. E., Hegde, H., Unni, D. R., Alyea, G., Amberger, J. S., Babb, L., Balhoff, J. P., Bingaman, T. I., Burns, G. A., Callahan, T. J., Carmody, L. C., Chan, L. E., Chang, G. S., Dumontier, M., Failla, L. E., Flowers, M. J., Garrett, H. A., Gration, D., Groza, T., Hanauer, M., Harris, N. L., Helbig, I., Hilton, J. A., Himmelstein, D. S., Hoyt, C. T., Kane, M. S., K\u00f6hler, S., Lagorce, D., Larralde, M., Lock, A., L\u00f3pez Santiago, I., Maglott, D. R., Malheiro, A. J., Meldal, B. H. M., McMurry, J. A., Munoz-Torres, M., Nelson, T. H., Ochoa, D., Oprea, T. I., Osumi-Sutherland, D., Parkinson, H., Pendlington, Z. M., Rath, A., Rehm, H. L., Remennik, L., Riggs, E. R., Roncaglia, P., Ross, J. E., Shadbolt, M. F., Shefchek, K. A., Similuk, M. N., Sioutos, N., Sparks, R., Stefancsik, R., Stephan, R., Stupp, D., Sundaramurthi, J. C., Tammen, I., Thaxton, C. L., Valasek, E., Wagner, A. H., Welter, D., Whetzel, P. L., Whiteman, L. L., Wood, V., Xu, C. H., Zankl, A., Zhang, X. A., Chute, C. G., Robinson, P. N., Mungall, C. J., Hamosh, A., & Haendel, M. A. (2022). Mondo: Unifying diseases for the world, by the world [Preprint]. medRxiv. https://doi.org/10.1101/2022.04.13.22273750 Resource category Ontology Documentation https://mondo.readthedocs.io/en/latest Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Foundational Main repository https://github.com/monarch-initiative/mondo Responsible contact in Monarch Sabrina Toro, https://orcid.org/0000-0002-4142-7153, @sabrinatoro Project boards","title":"Mondo Disease Ontology"},{"location":"registry/#genotype-ontology","text":"Genotype Ontology PURL geno Cite Monarch Initiative. (n.d.). GENO-ontology [Source code]. GitHub. https://github.com/monarch-initiative/GENO-ontology Resource category Ontology Documentation https://github.com/monarch-initiative/GENO-ontology Monarch role in the development Lead Grants involved in this standard Monarch R24 Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/GENO-ontology Responsible contact in Monarch Matt Brush, https://orcid.org/0000-0002-1048-5019, @mbrush Project boards","title":"Genotype Ontology"},{"location":"registry/#scientific-evidence-and-provenance-information-ontology","text":"Scientific Evidence and Provenance Information Ontology PURL sepio Cite Monarch Initiative. (n.d.). SEPIO-ontology [Source code]. GitHub. https://github.com/monarch-initiative/SEPIO-ontology Resource category Ontology Documentation https://github.com/monarch-initiative/SEPIO-ontology Monarch role in the development Lead Grants involved in this standard Monarch R24 Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/SEPIO-ontology Responsible contact in Monarch Matt Brush, https://orcid.org/0000-0002-1048-5019, @mbrush Project boards","title":"Scientific Evidence and Provenance Information Ontology"},{"location":"registry/#vertebrate-breed-ontology","text":"Vertebrate Breed Ontology PURL vbo Cite Mullen, K. R., Tammen, I., Matentzoglu, N. A., Mather, M., Balhoff, J. P., Esdaile, E., Leroy, G., Park, C. A., Rando, H. M., Saklou, N. T., Webb, T. L., Vasilevsky, N. A., Mungall, C. J., Haendel, M. A., Nicholas, F. W., & Toro, S. (2025). The Vertebrate Breed Ontology: Toward effective breed data standardization. Journal of Veterinary Internal Medicine, 39(4), e70133. https://doi.org/10.1111/jvim.70133 Resource category Ontology Documentation https://monarch-initiative.github.io/vertebrate-breed-ontology Monarch role in the development Lead Grants involved in this standard Monarch R24 Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/vertebrate-breed-ontology Responsible contact in Monarch Sabrina Toro, https://orcid.org/0000-0002-4142-7153, @sabrinatoro Project boards","title":"Vertebrate Breed Ontology"},{"location":"registry/#the-unified-phenotype-ontology","text":"The Unified Phenotype Ontology PURL upheno Cite Matentzoglu, N., Bello, S. M., Stefancsik, R., Alghamdi, S. M., Anagnostopoulos, A. V., Balhoff, J. P., Balk, M. A., Bradford, Y. M., Bridges, Y., Callahan, T. J., Caufield, H., Cuzick, A., Carmody, L. C., Caron, A. R., de Souza, V., Engel, S. R., Fey, P., Fisher, M., Gehrke, S., Grove, C., Hansen, P., Harris, N. L., Harris, M. A., Harris, L., Ibrahim, A., Jacobsen, J. O. B., K\u00f6hler, S., McMurry, J. A., Munoz-Fuentes, V., Munoz-Torres, M. C., Parkinson, H., Pendlington, Z. M., Pilgrim, C., Robb, S. M., Robinson, P. N., Seager, J., Segerdell, E., Smedley, D., Sollis, E., Toro, S., Vasilevsky, N., Wood, V., Haendel, M. A., Mungall, C. J., McLaughlin, J. A., & Osumi-Sutherland, D. (2025). The Unified Phenotype Ontology: A framework for cross-species integrative phenomics. Genetics, 229(3), iyaf027. https://doi.org/10.1093/genetics/iyaf027 Resource category Ontology Documentation https://obophenotype.github.io/upheno Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Core Main repository https://github.com/obophenotype/upheno Responsible contact in Monarch James McLaughlin, https://orcid.org/0000-0002-8361-2795, @udp Project boards uPheno 2 Ontology Development","title":"The Unified Phenotype Ontology"},{"location":"registry/#medical-action-ontology","text":"Medical Action Ontology PURL maxo Cite Resource category Ontology Documentation https://github.com/monarch-initiative/MAxO Monarch role in the development Lead Grants involved in this standard HPO Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards","title":"Medical Action Ontology"},{"location":"registry/#ontology-of-biological-attributes","text":"Ontology of Biological Attributes PURL oba Cite Stefancsik, R., Balhoff, J. P., Balk, M. A., et al. (2023). The Ontology of Biological Attributes (OBA)\u2014Computational traits for the life sciences. Mammalian Genome, 34, 364\u2013378. https://doi.org/10.1007/s00335-023-09992-1 Resource category Ontology Documentation https://obophenotype.github.io/bio-attribute-ontology Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Core Main repository https://github.com/obophenotype/bio-attribute-ontology Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards OBA Ontology Development (uPheno board)","title":"Ontology of Biological Attributes"},{"location":"registry/#uberon-anatomy-ontology","text":"Uberon Anatomy Ontology PURL uberon Cite Mungall, C. J., Torniai, C., Gkoutos, G. V., Lewis, S. E., & Haendel, M. A. (2012). Uberon, an integrative multi-species anatomy ontology. Genome Biology, 13(1), R5. DOI: https://doi.org/10.1186/gb-2012-13-1-r5 PubMed: https://pubmed.ncbi.nlm.nih.gov/22293552 Haendel, M. A., Balhoff, J. P., Bastian, F. B., Blackburn, D. C., Blake, J. A., Bradford, Y., Comte, A., Dahdul, W. M., Dececchi, T. A., Druzinsky, R. E., Hayamizu, T. F., Ibrahim, N., Lewis, S. E., Mabee, P. M., Niknejad, A., Robinson-Rechavi, M., Sereno, P. C., & Mungall, C. J. (2014). Unification of multi-species vertebrate anatomy ontologies for comparative biology in Uberon. Journal of Biomedical Semantics, 5(1), 21. DOI: https://doi.org/10.1186/2041-1480-5-21 PubMed: https://pubmed.ncbi.nlm.nih.gov/24742169 | | Resource category | Ontology | | Documentation | https://obophenotype.github.io/uberon | | Monarch role in the development | Co-Lead | | Grants involved in this standard | Phenomics First | | Role in Monarchs strategic vision | Foundational | | Main repository | https://github.com/obophenotype/uberon | | Responsible contact in Monarch | Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall | | Project boards | |","title":"Uberon Anatomy Ontology"},{"location":"registry/#phenomics-integrated-ontology","text":"Phenomics Integrated Ontology PURL phenio Cite Monarch Initiative. (n.d.). phenio [Source code]. GitHub. https://github.com/monarch-initiative/phenio Resource category Ontology Documentation https://monarch-initiative.github.io/phenio Monarch role in the development Lead Grants involved in this standard Monarch R24 Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/phenio Responsible contact in Monarch Harry Caufield, https://orcid.org/0000-0001-5705-7831, @caufieldjh Project boards","title":"Phenomics Integrated Ontology"},{"location":"registry/#environmental-conditions-treatments-and-exposures-ontology","text":"Environmental Conditions, Treatments and Exposures Ontology PURL ecto Cite Matentzoglu, N. A., Vasilevsky, N. A., Balhoff, J. P., Bello, S. M., Brush, M. H., Carbon, S., Carmody, L. C., Cooper, L., Courtot, M., Diehl, A. D., Duncan, W. D., Harris, N. L., Haendel, M. A., Mungall, C. J., Osumi-Sutherland, D., Relevo, R., Segerdell, E., Smith, C. L., & Robinson, P. N. (2023). The Environmental Conditions, Treatments, and Exposures Ontology (ECTO): connecting toxicology and exposure to human health and beyond https://doi.org/10.1186/s13326-023-00283-x Resource category Ontology Documentation https://github.com/EnvironmentOntology/environmental-exposure-ontology Monarch role in the development Lead Grants involved in this standard TBD Role in Monarchs strategic vision Support Main repository https://github.com/EnvironmentOntology/environmental-exposure-ontology Responsible contact in Monarch Anne Thessen, https://orcid.org/0000-0002-2908-3327, @diatomsRcool Project boards","title":"Environmental Conditions, Treatments and Exposures Ontology"},{"location":"registry/#dead-simple-owl-design-pattern-dos-dp-exchange-format","text":"Dead simple owl design pattern (DOS-DP) exchange format PURL dead_simple_owl_design_patterns Cite Resource category Data Exchange Documentation https://incatools.github.io/dead_simple_owl_design_patterns/ Monarch role in the development Lead Grants involved in this standard Phenomics First Role in Monarchs strategic vision Support Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"Dead simple owl design pattern (DOS-DP) exchange format"},{"location":"registry/#knowledge-graph-change-language","text":"Knowledge Graph Change Language PURL kgcl Cite Resource category Ontology Curation Documentation https://incatools.github.io/kgcl/ Monarch role in the development Lead Grants involved in this standard Bosch Gift Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"Knowledge Graph Change Language"},{"location":"registry/#babelon-a-simple-standard-for-managing-ontology-translations-and-language-profiles","text":"Babelon - A simple standard for managing ontology translations and language profiles PURL babelon Cite Resource category Data Exchange Documentation https://monarch-initiative.github.io/babelon/ Monarch role in the development Lead Grants involved in this standard HPO Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/babelon Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards","title":"Babelon - A simple standard for managing ontology translations and language profiles"},{"location":"registry/#tools-and-services-developed-or-significantly-supported-by-the-monarch-initiative","text":"","title":"Tools and Services developed or significantly supported by the Monarch Initiative"},{"location":"registry/#exomiser","text":"Exomiser PURL exomiser Cite Smedley, D., Schubach, M., Jacobsen, J. O. B., K\u00f6hler, S., Zemojtel, T., Spielmann, M., J\u00e4ger, M., Hochheiser, H., Washington, N. L., McMurry, J. A., Haendel, M. A., Mungall, C. J., Lewis, S. E., Groza, T., Valentini, G., & Robinson, P. N. (2016). A whole-genome analysis framework for effective identification of pathogenic regulatory variants in Mendelian disease. The American Journal of Human Genetics, 99(3), 595\u2013606. https://doi.org/10.1016/j.ajhg.2016.07.005 Resource category Clinical Diagnosis Documentation https://exomiser.readthedocs.io Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Foundational Main repository https://github.com/exomiser/Exomiser Responsible contact in Monarch Jules Jacobsen, https://orcid.org/0000-0002-3265-1591, @julesjacobsen Project boards","title":"Exomiser"},{"location":"registry/#monarch-knowledge-graph-services","text":"Monarch Knowledge Graph & Services PURL monarch_kg_services Cite Resource category Clinical Diagnosis Documentation https://monarch-initiative.github.io/monarch-ingest/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Foundational Main repository https://github.com/monarch-initiative/monarch-app Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Monarch Knowledge Graph &amp; Services"},{"location":"registry/#monarch-app","text":"Monarch App PURL monarch_app Cite Resource category Clinical Diagnosis Documentation https://monarch-app.monarchinitiative.org/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/monarch-app Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Monarch App"},{"location":"registry/#monarch-api","text":"Monarch API PURL monarch_api Cite Resource category Clinical Diagnosis Documentation https://monarch-app.monarchinitiative.org/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/monarch-app Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Monarch API"},{"location":"registry/#ontology-development-kit","text":"Ontology Development Kit PURL odk Cite Matentzoglu, N., Goutte-Gattat, D., Tan, S. Z. K., Balhoff, J. P., Carbon, S., Caron, A. R., Duncan, W. D., Flack, J. E., Haendel, M., Harris, N. L., Hogan, W. R., Hoyt, C. T., Jackson, R. C., Kim, H., Kir, H., Larralde, M., McMurry, J. A., Overton, J. A., Peters, B., Pilgrim, C., Stefancsik, R., Robb, S. M. C., Toro, S., Vasilevsky, N. A., Walls, R., Mungall, C. J., & Osumi-Sutherland, D. (2022). Ontology Development Kit: A toolkit for building, maintaining and standardizing biomedical ontologies. Database, 2022, baac087. https://doi.org/10.1093/database/baac087 Resource category Ontology Maintenance Documentation https://incatools.github.io/ontology-development-kit Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/INCATools/ontology-development-kit Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards ODK Milestones","title":"Ontology Development Kit"},{"location":"registry/#monarch-ols","text":"Monarch OLS PURL monarch_ols Cite EBISPOT. (n.d.). OLS4 [Source code]. GitHub. https://github.com/EBISPOT/ols4 Resource category Registry Documentation https://github.com/monarch-initiative/ontotools-docker Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/ontotools-docker Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards","title":"Monarch OLS"},{"location":"registry/#ontology-access-kit","text":"Ontology Access Kit PURL oak Cite INCATools. (n.d.). ontology-access-kit [Source code]. GitHub. https://github.com/INCATools/ontology-access-kit Resource category Ontology Use Documentation https://incatools.github.io/ontology-access-kit Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/INCATools/ontology-access-kit Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards OAK Project Board","title":"Ontology Access Kit"},{"location":"registry/#sssom-toolkit","text":"SSSOM Toolkit PURL sssom_py Cite Resource category Mapping Documentation https://mapping-commons.github.io/sssom-py Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards","title":"SSSOM Toolkit"},{"location":"registry/#poet","text":"POET PURL poet Cite Resource category Data Curation Documentation TBD Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/TheJacksonLaboratory/POET Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards","title":"POET"},{"location":"registry/#likelihood-ratio-interpretation-of-clinical-abnormalities-lirical","text":"LIkelihood Ratio Interpretation of Clinical AbnormaLities (LIRICAL) PURL lirical Cite Resource category Clinical Diagnosis Documentation https://lirical.readthedocs.io/en/latest/ Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/TheJacksonLaboratory/LIRICAL Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards","title":"LIkelihood Ratio Interpretation of Clinical AbnormaLities (LIRICAL)"},{"location":"registry/#pheval","text":"PhEval PURL pheval Cite Bridges, Y., Souza, V., Cortes, K. G., Haendel, M., Harris, N. L., Korn, D. R., Marinakis, N. M., Matentzoglu, N., McLaughlin, J. A., Mungall, C. J., Odell, A., Osumi-Sutherland, D., Robinson, P. N., Smedley, D., & Jacobsen, J. O. B. (2025). Towards a standard benchmark for phenotype-driven variant and gene prioritisation algorithms: PhEval \u2013 Phenotypic inference evaluation framework. BMC Bioinformatics, 26(1), 87. https://doi.org/10.1186/s12859-025-06105-4. Resource category Benchmarking Documentation https://monarch-initiative.github.io/pheval Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval Responsible contact in Monarch Jules Jacobsen, https://orcid.org/0000-0002-3265-1591, @julesjacobsen Project boards","title":"PhEval"},{"location":"registry/#obographviz","text":"obographviz PURL obographviz Cite Resource category Ontology Use Documentation https://github.com/INCATools/obographviz#readme Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/INCATools/obographviz Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"obographviz"},{"location":"registry/#ubergraph","text":"ubergraph PURL ubergraph Cite Resource category Ontology Use Documentation TBD Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/INCATools/ubergraph Responsible contact in Monarch Jim Balhoff, https://orcid.org/0000-0002-8688-6599, @balhoff Project boards","title":"ubergraph"},{"location":"registry/#whelk","text":"whelk PURL whelk Cite Resource category Ontology Use Documentation TBD Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/balhoff/whelk Responsible contact in Monarch Jim Balhoff, https://orcid.org/0000-0002-8688-6599, @balhoff Project boards","title":"whelk"},{"location":"registry/#robot","text":"robot PURL robot Cite Resource category Ontology Use Documentation https://robot.obolibrary.org Monarch role in the development Contributor Grants involved in this standard Role in Monarchs strategic vision Community Main repository https://github.com/ontodev/robot Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards","title":"robot"},{"location":"registry/#data-harmonizer","text":"Data Harmonizer PURL data_harmonizer Cite Resource category Data Curation Documentation TBD Monarch role in the development Contributor Grants involved in this standard Role in Monarchs strategic vision Community Main repository https://github.com/cidgoh/DataHarmonizer Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"Data Harmonizer"},{"location":"registry/#ontogpt","text":"OntoGPT PURL ontogpt Cite Caufield, J. H., Hegde, H., Emonet, V., Harris, N. L., Joachimiak, M. P., Matentzoglu, N., Kim, H., Moxon, S., Reese, J. T., Haendel, M. A., Robinson, P. N., & Mungall, C. J. (2024). Structured Prompt Interrogation and Recursive Extraction of Semantics (SPIRES): A method for populating knowledge bases using zero-shot learning. Bioinformatics, 40(3). https://doi.org/10.1093/bioinformatics/btae104 Resource category Data Curation Documentation https://monarch-initiative.github.io/ontogpt Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/ontogpt Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"OntoGPT"},{"location":"registry/#aurelian","text":"Aurelian PURL aurelian Cite Resource category Data Curation Documentation https://github.com/monarch-initiative/aurelian Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/aurelian Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"Aurelian"},{"location":"registry/#knowledge-graph-registry","text":"Knowledge Graph Registry PURL kg_registry Cite Knowledge Graph Hub. (n.d.). kg-registry [Source code]. GitHub. https://github.com/Knowledge-Graph-Hub/kg-registry Resource category Registry Documentation https://github.com/Knowledge-Graph-Hub/kg-registry Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/Knowledge-Graph-Hub/kg-registry Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"Knowledge Graph Registry"},{"location":"registry/#knowledge-graph-hub","text":"Knowledge Graph Hub PURL kg_hub Cite Caufield, J. H., Putman, T., Schaper, K., Unni, D. R., Hegde, H., Callahan, T. J., Cappelletti, L., Moxon, S. A. T., Ravanmehr, V., Carbon, S., Chan, L. E., Cortes, K., Shefchek, K. A., Elsarboukh, G., Balhoff, J. P., Fontana, T., Matentzoglu, N., Bruskiewich, R. M., Thessen, A. E., Harris, N. L., Munoz-Torres, M. C., Haendel, M. A., Robinson, P. N., Joachimiak, M. P., Mungall, C. J., & Reese, J. T. (2023). KG-Hub \u2014 Building and exchanging biological knowledge graphs (arXiv:2302.10800). arXiv. https://arxiv.org/abs/2302.10800 Resource category Registry Documentation https://github.com/Knowledge-Graph-Hub/knowledge-graph-hub.github.io Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/Knowledge-Graph-Hub/knowledge-graph-hub.github.io Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"Knowledge Graph Hub"},{"location":"registry/#linkml-registry","text":"LinkML Registry PURL linkml_registry Cite LinkML. (n.d.). linkml-registry [Source code]. GitHub. https://github.com/linkml/linkml-registry Resource category Registry Documentation https://linkml.io/linkml-registry/registry Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/linkml/linkml-registry Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"LinkML Registry"},{"location":"registry/#talisman","text":"TALISMAN PURL talisman Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/talisman/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/talisman/ Responsible contact in Monarch Marcin Joachimiak, https://orcid.org/0000-0001-8175-045X, @realmarcin Project boards","title":"TALISMAN"},{"location":"registry/#curategpt","text":"CurateGPT PURL curate_gpt Cite Caufield, H., Kroll, C., O\u2019Neil, S. T., Reese, J. T., Joachimiak, M. P., Hegde, H., Harris, N. L., Krishnamurthy, M., McLaughlin, J. A., Smedley, D., Haendel, M. A., Robinson, P. N., & Mungall, C. J. (2024). CurateGPT: A flexible language-model assisted biocuration tool. arXiv [cs.CL]. http://arxiv.org/abs/2411.00046 Resource category Data Curation Documentation https://monarch-initiative.github.io/curategpt Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/curate-gpt Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"CurateGPT"},{"location":"registry/#semsimian","text":"semsimian PURL semsimian Cite Resource category Mapping Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/semsimian Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"semsimian"},{"location":"registry/#monarch-python-toolkit","text":"Monarch Python Toolkit PURL monarch_py Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/monarch-py/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/monarch-app/backend Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Monarch Python Toolkit"},{"location":"registry/#babelon-toolkit","text":"Babelon Toolkit PURL babelon Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/babelon/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/babelon Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards","title":"Babelon Toolkit"},{"location":"registry/#fenominal","text":"Fenominal PURL fenominal Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/fenominal/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/fenominal Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards","title":"Fenominal"},{"location":"registry/#koza","text":"Koza PURL koza Cite Resource category Data Curation Documentation https://koza.monarchinitiative.org/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/fenominal Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Koza"},{"location":"registry/#linked-data-modeling-language","text":"Linked Data Modeling Language PURL linkml Cite Moxon, S., Solbrig, H., Unni, D., Jiao, D., Bruskiewich, R., Balhoff, J., Vaidya, G., Duncan, W., Hegde, H., Miller, M., Brush, M., Harris, N., Haendel, M., & Mungall, C. (2021). The Linked Data Modeling Language (LinkML): A general-purpose data modeling framework grounded in machine-readable semantics. CEUR Workshop Proceedings, 3073, 148\u2013151 Resource category Data Curation Documentation https://linkml.io/linkml/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/linkml Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"Linked Data Modeling Language"},{"location":"registry/#monarch-ingest","text":"Monarch Ingest PURL monarch_ingest Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/monarch-ingest Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/monarch-ingest Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Monarch Ingest"},{"location":"registry/#monarch-mapping-registry","text":"Monarch Mapping Registry PURL monarch_mapping_registry Cite Monarch Initiative. (n.d.). monarch-mapping-commons [Source code]. GitHub. https://github.com/monarch-initiative/monarch-mapping-commons Resource category Registry Documentation https://github.com/monarch-initiative/monarch-mapping-commons Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/monarch-mapping-commons Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards","title":"Monarch Mapping Registry"},{"location":"registry/#hpo-language-translations","text":"HPO Language Translations PURL hpo_translations Cite Resource category Ontology Maintenance Documentation https://obophenotype.github.io/hpo-translations Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/obophenotype/hpo-translations Responsible contact in Monarch Nicolas Matentzoglu, https://orcid.org/0000-0002-7356-1779, @matentzn Project boards","title":"HPO Language Translations"},{"location":"registry/#phenomizer","text":"Phenomizer PURL Phenomiser Cite Resource category Clinical Diagnosis Documentation https://github.com/TheJacksonLaboratory/Phenomiser Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/TheJacksonLaboratory/Phenomiser Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards","title":"Phenomizer"},{"location":"registry/#phenogrid","text":"Phenogrid PURL phenogrid Cite Resource category Clinical Diagnosis Documentation https://github.com/monarch-initiative/phenogrid Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/phenogrid Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Phenogrid"},{"location":"registry/#monarchr","text":"monarchr PURL monarchr Cite Resource category Ontology Use Documentation https://github.com/monarch-initiative/monarchr Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/monarchr Responsible contact in Monarch Shawn O'Neil, https://orcid.org/0000-0001-6220-7080, @oneilsh Project boards","title":"monarchr"},{"location":"registry/#phenomics-assistant","text":"Phenomics Assistant PURL phenomics_assistant Cite Resource category Clinical Diagnosis Documentation https://github.com/monarch-initiative/phenomics-assistant Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/phenomics-assistant Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Phenomics Assistant"},{"location":"registry/#phevalllm","text":"pheval.llm PURL pheval.llm Cite Resource category Benchmarking Documentation https://monarch-initiative.github.io/pheval.llm Monarch role in the development Co-Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/pheval.llm Responsible contact in Monarch Leonardo Chimirri, https://orcid.org/0000-0002-6912-8518, @leokim-l Project boards","title":"pheval.llm"},{"location":"registry/#phenopacket2prompt","text":"phenopacket2prompt PURL phenopacket2prompt Cite Resource category Clinical Diagnosis Documentation https://monarch-initiative.github.io/phenopacket2prompt Monarch role in the development Co-Lead Grants involved in this standard Role in Monarchs strategic vision Support Main repository https://github.com/monarch-initiative/phenopacket2prompt Responsible contact in Monarch Leonardo Chimirri, https://orcid.org/0000-0002-6912-8518, @leokim-l Project boards","title":"phenopacket2prompt"},{"location":"registry/#automaxo","text":"AutoMAxO PURL automaxo Cite Resource category Data Curation Documentation https://monarch-initiative.github.io/automaxo Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/automaxo/ Responsible contact in Monarch Enock Niyonkuru, https://orcid.org/0000-0002-7981-8133, @enockniyonkuru Project boards","title":"AutoMAxO"},{"location":"registry/#phevalexomiser","text":"pheval.exomiser PURL pheval.exomiser Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.exomiser Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.exomiser Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards","title":"pheval.exomiser"},{"location":"registry/#phevalai_marrvel","text":"pheval.ai_marrvel PURL pheval.ai_marrvel Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.ai_marrvel Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.ai_marrvel Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards","title":"pheval.ai_marrvel"},{"location":"registry/#phevalphen2gene","text":"pheval.phen2gene PURL pheval.phen2gene Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.phen2gene Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.phen2gene Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards","title":"pheval.phen2gene"},{"location":"registry/#phevalgado","text":"pheval.gado PURL pheval.gado Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.gado Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.gado Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards","title":"pheval.gado"},{"location":"registry/#phevalsvanna","text":"pheval.svanna PURL pheval.svanna Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.svanna Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.svanna Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards","title":"pheval.svanna"},{"location":"registry/#phevallirical","text":"pheval.lirical PURL pheval.lirical Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.lirical Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.lirical Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards","title":"pheval.lirical"},{"location":"registry/#phevalphenogenius","text":"pheval.phenogenius PURL pheval.phenogenius Cite Resource category Benchmarking Documentation https://github.com/monarch-initiative/pheval.phenogenius Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/pheval.phenogenius Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards","title":"pheval.phenogenius"},{"location":"registry/#phenotype2phenopacket","text":"phenotype2phenopacket PURL phenotype2phenopacket Cite Resource category Data Curation Documentation https://github.com/monarch-initiative/phenotype2phenopacket Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository https://github.com/monarch-initiative/phenotype2phenopacket Responsible contact in Monarch Yasemin Bridges, https://orcid.org/0009-0002-1371-3782, @yaseminbridges Project boards","title":"phenotype2phenopacket"},{"location":"registry/#datasets-developed-by-the-monarch-initiative","text":"","title":"Datasets developed by the Monarch Initiative"},{"location":"registry/#hpoa-disease-annotations","text":"HPOA - Disease Annotations PURL phenotype.hpoa Cite Resource category Biomedical Data Documentation https://hpo-annotation-qc.readthedocs.io/en/latest/annotationFormat.html#phenotype-hpoa-format Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards","title":"HPOA - Disease Annotations"},{"location":"registry/#hpoa-phenotype-to-gene-associations","text":"HPOA - Phenotype to Gene Associations PURL phenotype_to_genes.txt Cite Resource category Biomedical Data Documentation https://hpo.jax.org/app/download/annotation Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards","title":"HPOA - Phenotype to Gene Associations"},{"location":"registry/#hpoa-gene-to-phenotype-associations","text":"HPOA - Gene to Phenotype Associations PURL genes_to_phenotype.txt Cite Resource category Biomedical Data Documentation https://hpo.jax.org/app/download/annotation Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Peter Robinson, https://orcid.org/0000-0002-0736-9199, @pnrobinson Project boards","title":"HPOA - Gene to Phenotype Associations"},{"location":"registry/#hpoa-knowledge-graph-ingestible","text":"HPOA Knowledge Graph Ingestible PURL hpoa Cite Resource category Knowledge Graph Ingestibles Documentation https://monarch-initiative.github.io/monarch-ingest/Sources/HPOA/ Monarch role in the development Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"HPOA Knowledge Graph Ingestible"},{"location":"registry/#alliance-knowledge-graph-ingestible","text":"Alliance Knowledge Graph Ingestible PURL alliance Cite Resource category Knowledge Graph Ingestibles Documentation https://monarch-initiative.github.io/monarch-ingest/Sources/Alliance/ Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Alliance Knowledge Graph Ingestible"},{"location":"registry/#kg-covid-19","text":"KG Covid-19 PURL kg_covid_19 Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"KG Covid-19"},{"location":"registry/#eco-kg","text":"ECO KG PURL eco_kg Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"ECO KG"},{"location":"registry/#kg-idg","text":"KG IDG PURL kg_idg Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"KG IDG"},{"location":"registry/#kg-phenio","text":"KG Phenio PURL kg_phenio Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"KG Phenio"},{"location":"registry/#kg-obo","text":"KG OBO PURL kg_obo Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"KG OBO"},{"location":"registry/#kg-microbe","text":"KG Microbe PURL kg_microbe Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"KG Microbe"},{"location":"registry/#sri-reference-kg","text":"SRI Reference KG PURL sri_reference_kg Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Community Main repository Responsible contact in Monarch Chris Mungall, https://orcid.org/0000-0002-6601-2165, @cmungall Project boards","title":"SRI Reference KG"},{"location":"registry/#monarch-kg","text":"Monarch KG PURL monarch_ingest Cite Resource category Knowledge Graph Documentation TBD Monarch role in the development Lead Grants involved in this standard Role in Monarchs strategic vision Core Main repository Responsible contact in Monarch Kevin Schaper, https://orcid.org/0000-0003-3311-7320, @kevinschaper Project boards","title":"Monarch KG"},{"location":"release-process/","text":"Monarch Release Process Overview This document describes the steps required to create a new Monarch release. These releases consist primarily of the following components: Monarch Mapping files via Monarch Mapping Commons Knowledge Graph via Monarch Ingest Data library and API via Monarch-Py Monarch website via Monarch-App Monarch Mapping Commons Monarch Mapping Commons is a repository that contains code used to generate the mapping files used in the creation of the Monarch knowledge graph. The nodes and edges in the knowledge graph come from a variety of sources, and have varying IDs and prefixes. The mapping files are used to map these IDs to IDs in Monarch's preferred namespaces. These mapping files are generated via a Jenkins job on a weekly basis, and are stored in the Monarch Data Bucket . Monarch Ingest (Knowledge Graph) Monarch's knowledge graph is built using the Monarch Ingest pipeline. The pipeline is run on a Jenkins server, and the resulting knowledge graph is uploaded to both Monarch's data bucket on Google Cloud, as well as the KG-Hub AWS S3 bucket. Changes to the Monarch Ingest pipeline are made in the Monarch Ingest repository. After the knowledge graph has been built, the QC Dashboard is used to verify the difference between the new build of the knowledge graph and the previous build. Once the knowledge graph has been verified, additional steps are required to make the new knowledge graph available to the dev, beta, and production versions of the Monarch website. Deploying the Knowledge Graph Deploying to dev While the Github Actions workflow for Monarch App will automatically update and deploy API & UI code to the dev environment, the knowledge graph must be manually deployed to the dev environment. Preparing the environment for deployment: Make sure dependancies from monarch-stack-v3/README.md are installed Ensure secrets are installed in $home/.secrets To deploy the knowledge graph to the dev environment, follow these steps: Checkout (or update) Monarch Stack V3 Source the dev environment: cd deployment && source site-envs/monarch-dev.env Run the provision script to update the dev environment: ./provision.sh After running the provision script to update the dev environment, a manual restart of the Solr container is necessary: gcloud compute ssh --zone us-central1-a monarch-v3-${TF_VAR_env}-manager -- sudo docker service update --force monarch-v3_solr From this point forward, code updates on the dev environment will be automatically deployed and additional work will happen to finish the work planned for the milestone. Ideally changes to the graph will happen early in the release cycle. Deploying to beta Once work on the milestone is complete, we need to tag the release in GitHub then we can deploy to the beta environment. To tag the release, go to the Monarch App and click on releases. Create a new release with the new version number and click generate release notes. Make any changes to the release notes that are necessary (generally none) and click publish release. You may want to set an environment variable for the release version to make it easier to copy and paste the version number in the following steps (update for your current version): RELEASE=\"2024-02-13\" First, copy the KG release from monarch-kg-dev to monarch-kg: gsutil cp -r gs://data-public-monarchinitiative/monarch-kg-dev/${RELEASE} gs://data-public-monarchinitiative/monarch-kg/${RELEASE} Then, we need to copy in the archive: gsutil cp -r gs://monarch-archive/monarch-kg-dev/${RELEASE} gs://monarch-archive/monarch-kg/${RELEASE} Within monarch-stack-v3, copy the latest release env file to a new env, for example: cp site-envs/monarch-2023-10-11.env site-envs/monarch-${RELEASE}.env The date for the environment file name should match the KG release version, rather than today's date. Edit the top two lines in new env to match the latest KG & API versions: export MONARCH_KG_VERSION=\"2023-11-16\" export MONARCH_API_VERSION=\"0.18.1\" Then source the new environment and run provision.sh to create the new VM stack, paying attention to the terrform output to make sure that it's creating VMs with a version name you expect: source site-envs/monarch-2023-11-16.env ./provision.sh Output for the provision script should look something like this: ... Changes to Outputs: + api_image_tag = \"1.0.0\" + env = \"2024-02-13\" + full_prefix = \"monarch-v3-2024-02-13-\" + neo4j_archive_url = \"https://data.monarchinitiative.org/monarch-kg-dev/latest/monarch-kg.neo4j.dump\" + phenio_archive_url = \"https://data.monarchinitiative.org/monarch-kg/2024-02-13/phenio.db.gz\" + project = \"monarch-initiative\" + semsimian_image_tag = \"latest\" + solr_archive_url = \"https://data.monarchinitiative.org/monarch-kg/2024-02-13/solr.tar.gz\" + sqlite_archive_url = \"https://data.monarchinitiative.org/monarch-kg/2024-02-13/monarch-kg.db.gz\" + stack = \"monarch-v3\" + ui_image_tag = \"latest\" + vm_svc_acct_email = \"terraform@monarch-initiative.iam.gserviceaccount.com\" Do you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve. At the end of the run you should see a message like this: PLAY RECAP *************************************************************************************************** monarch-v3-2024-02-13-api : ok=11 changed=3 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0 monarch-v3-2024-02-13-manager : ok=12 changed=3 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0 monarch-v3-2024-02-13-neo4j : ok=11 changed=3 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0 monarch-v3-2024-02-13-solr : ok=11 changed=3 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0 Connecting beta to the load balancer Once this completes, open the GCP load balancer configuration . Click on the edit link at the top of the page. Click on Backend Configuration Open the Backend services & backend buckets pull down on the right side and check monarch-v3-{release}-api-backend & monarch-v3-{release}-nginx-backend , leave the other boxes checked, and click ok. Open the Host and path rules section to point beta.monarchinitiative.org to the nginx backend, api-beta.monarchinitiative.org to the api backend, and neo4j-beta.monarchinitiative.org to the neo4j backend. Then for each of these endpoints add /* to the path matcher, and click update. If you get a pop-up window error, you may have forgotten to delete one of the old routes when pointing to the new backend. You will need to redo the configuration if this happens. The load balancer will automatically restart with the new configuration. Then we'll need to confirm that the site is up and running. Get yourself a cup of hot chocolate / ice cold lemonade (season dependent) and settle in to go through the issues in the milestone. Make sure that each issue appears to actually be fixed, and close them with a note that they're confirmed to be working on beta.monarchinitiative.org. (with some additional explanation for externally submitted issues about when the change is expected to be visible on the production site) Deploying to production Edit the load balancer 1. Remove the nginx and api backends from the last release 2. Point api-beta.monarchinitiative.org , api-v3.monarchinitiative.org , and api-next.monarchinitiative.org to monarch-v3-{release}-api-backend 3. Point next.monarchinitiative.org and monarchinitiative.org to monarch-v3-{release}-nginx-backend 4. At the top of the host and path rules seciton, change the default backend (\"Backend 1\") to point to monarch-v3-{release}-nginx-backend as well Then turn off the former production VMs (but keep them around for disaster recovery) by going to the GCP console VM listings and just clicking stop on each VM. Source the former former env in v3 stack to delete it (say yes to deleting, and no to creating in the terraform dialogs) source site-envs/monarch-2023-10-17.env ./provision.sh -d Troubleshooting Here are some known issues that we have seen before: In ./provision.sh you may see an error like this: fatal: [monarch-v3-2024-02-13-api]: UNREACHABLE! => changed=false msg: |- Data could not be sent to remote host \"monarch-v3-2024-02-13-api\". Make sure this host can be reached over ssh: Pseudo-terminal will not be allocated because stdin is not a terminal. sa_116692422516913491665@34.42.108.156: Permission denied (publickey). Recommendation: To check for possible causes of SSH connectivity issues and get recommendations, rerun the ssh command with the --troubleshoot option. gcloud compute ssh monarch-v3-2024-02-13-api --project=monarch-initiative --zone=us-central1-a --troubleshoot Or, to investigate an IAP tunneling issue: gcloud compute ssh monarch-v3-2024-02-13-api --project=monarch-initiative --zone=us-central1-a --troubleshoot --tunnel-through-iap ERROR: (gcloud.compute.ssh) [/usr/bin/ssh] exited with return code [255]. unreachable: true If so you may want to run the stated command (update to your version): gcloud compute ssh monarch-v3-2024-02-13-api --project=monarch-initiative --zone=us-central1-a --troubleshoot","title":"Monarch Release Process"},{"location":"release-process/#monarch-release-process","text":"","title":"Monarch Release Process"},{"location":"release-process/#overview","text":"This document describes the steps required to create a new Monarch release. These releases consist primarily of the following components: Monarch Mapping files via Monarch Mapping Commons Knowledge Graph via Monarch Ingest Data library and API via Monarch-Py Monarch website via Monarch-App","title":"Overview"},{"location":"release-process/#monarch-mapping-commons","text":"Monarch Mapping Commons is a repository that contains code used to generate the mapping files used in the creation of the Monarch knowledge graph. The nodes and edges in the knowledge graph come from a variety of sources, and have varying IDs and prefixes. The mapping files are used to map these IDs to IDs in Monarch's preferred namespaces. These mapping files are generated via a Jenkins job on a weekly basis, and are stored in the Monarch Data Bucket .","title":"Monarch Mapping Commons"},{"location":"release-process/#monarch-ingest-knowledge-graph","text":"Monarch's knowledge graph is built using the Monarch Ingest pipeline. The pipeline is run on a Jenkins server, and the resulting knowledge graph is uploaded to both Monarch's data bucket on Google Cloud, as well as the KG-Hub AWS S3 bucket. Changes to the Monarch Ingest pipeline are made in the Monarch Ingest repository. After the knowledge graph has been built, the QC Dashboard is used to verify the difference between the new build of the knowledge graph and the previous build. Once the knowledge graph has been verified, additional steps are required to make the new knowledge graph available to the dev, beta, and production versions of the Monarch website.","title":"Monarch Ingest (Knowledge Graph)"},{"location":"release-process/#deploying-the-knowledge-graph","text":"","title":"Deploying the Knowledge Graph"},{"location":"release-process/#deploying-to-dev","text":"While the Github Actions workflow for Monarch App will automatically update and deploy API & UI code to the dev environment, the knowledge graph must be manually deployed to the dev environment. Preparing the environment for deployment: Make sure dependancies from monarch-stack-v3/README.md are installed Ensure secrets are installed in $home/.secrets To deploy the knowledge graph to the dev environment, follow these steps: Checkout (or update) Monarch Stack V3 Source the dev environment: cd deployment && source site-envs/monarch-dev.env Run the provision script to update the dev environment: ./provision.sh After running the provision script to update the dev environment, a manual restart of the Solr container is necessary: gcloud compute ssh --zone us-central1-a monarch-v3-${TF_VAR_env}-manager -- sudo docker service update --force monarch-v3_solr From this point forward, code updates on the dev environment will be automatically deployed and additional work will happen to finish the work planned for the milestone. Ideally changes to the graph will happen early in the release cycle.","title":"Deploying to dev"},{"location":"release-process/#deploying-to-beta","text":"Once work on the milestone is complete, we need to tag the release in GitHub then we can deploy to the beta environment. To tag the release, go to the Monarch App and click on releases. Create a new release with the new version number and click generate release notes. Make any changes to the release notes that are necessary (generally none) and click publish release. You may want to set an environment variable for the release version to make it easier to copy and paste the version number in the following steps (update for your current version): RELEASE=\"2024-02-13\" First, copy the KG release from monarch-kg-dev to monarch-kg: gsutil cp -r gs://data-public-monarchinitiative/monarch-kg-dev/${RELEASE} gs://data-public-monarchinitiative/monarch-kg/${RELEASE} Then, we need to copy in the archive: gsutil cp -r gs://monarch-archive/monarch-kg-dev/${RELEASE} gs://monarch-archive/monarch-kg/${RELEASE} Within monarch-stack-v3, copy the latest release env file to a new env, for example: cp site-envs/monarch-2023-10-11.env site-envs/monarch-${RELEASE}.env The date for the environment file name should match the KG release version, rather than today's date. Edit the top two lines in new env to match the latest KG & API versions: export MONARCH_KG_VERSION=\"2023-11-16\" export MONARCH_API_VERSION=\"0.18.1\" Then source the new environment and run provision.sh to create the new VM stack, paying attention to the terrform output to make sure that it's creating VMs with a version name you expect: source site-envs/monarch-2023-11-16.env ./provision.sh Output for the provision script should look something like this: ... Changes to Outputs: + api_image_tag = \"1.0.0\" + env = \"2024-02-13\" + full_prefix = \"monarch-v3-2024-02-13-\" + neo4j_archive_url = \"https://data.monarchinitiative.org/monarch-kg-dev/latest/monarch-kg.neo4j.dump\" + phenio_archive_url = \"https://data.monarchinitiative.org/monarch-kg/2024-02-13/phenio.db.gz\" + project = \"monarch-initiative\" + semsimian_image_tag = \"latest\" + solr_archive_url = \"https://data.monarchinitiative.org/monarch-kg/2024-02-13/solr.tar.gz\" + sqlite_archive_url = \"https://data.monarchinitiative.org/monarch-kg/2024-02-13/monarch-kg.db.gz\" + stack = \"monarch-v3\" + ui_image_tag = \"latest\" + vm_svc_acct_email = \"terraform@monarch-initiative.iam.gserviceaccount.com\" Do you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve. At the end of the run you should see a message like this: PLAY RECAP *************************************************************************************************** monarch-v3-2024-02-13-api : ok=11 changed=3 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0 monarch-v3-2024-02-13-manager : ok=12 changed=3 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0 monarch-v3-2024-02-13-neo4j : ok=11 changed=3 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0 monarch-v3-2024-02-13-solr : ok=11 changed=3 unreachable=0 failed=0 skipped=2 rescued=0 ignored=0","title":"Deploying to beta"},{"location":"release-process/#connecting-beta-to-the-load-balancer","text":"Once this completes, open the GCP load balancer configuration . Click on the edit link at the top of the page. Click on Backend Configuration Open the Backend services & backend buckets pull down on the right side and check monarch-v3-{release}-api-backend & monarch-v3-{release}-nginx-backend , leave the other boxes checked, and click ok. Open the Host and path rules section to point beta.monarchinitiative.org to the nginx backend, api-beta.monarchinitiative.org to the api backend, and neo4j-beta.monarchinitiative.org to the neo4j backend. Then for each of these endpoints add /* to the path matcher, and click update. If you get a pop-up window error, you may have forgotten to delete one of the old routes when pointing to the new backend. You will need to redo the configuration if this happens. The load balancer will automatically restart with the new configuration. Then we'll need to confirm that the site is up and running. Get yourself a cup of hot chocolate / ice cold lemonade (season dependent) and settle in to go through the issues in the milestone. Make sure that each issue appears to actually be fixed, and close them with a note that they're confirmed to be working on beta.monarchinitiative.org. (with some additional explanation for externally submitted issues about when the change is expected to be visible on the production site)","title":"Connecting beta to the load balancer"},{"location":"release-process/#deploying-to-production","text":"Edit the load balancer 1. Remove the nginx and api backends from the last release 2. Point api-beta.monarchinitiative.org , api-v3.monarchinitiative.org , and api-next.monarchinitiative.org to monarch-v3-{release}-api-backend 3. Point next.monarchinitiative.org and monarchinitiative.org to monarch-v3-{release}-nginx-backend 4. At the top of the host and path rules seciton, change the default backend (\"Backend 1\") to point to monarch-v3-{release}-nginx-backend as well Then turn off the former production VMs (but keep them around for disaster recovery) by going to the GCP console VM listings and just clicking stop on each VM. Source the former former env in v3 stack to delete it (say yes to deleting, and no to creating in the terraform dialogs) source site-envs/monarch-2023-10-17.env ./provision.sh -d","title":"Deploying to production"},{"location":"release-process/#troubleshooting","text":"Here are some known issues that we have seen before: In ./provision.sh you may see an error like this: fatal: [monarch-v3-2024-02-13-api]: UNREACHABLE! => changed=false msg: |- Data could not be sent to remote host \"monarch-v3-2024-02-13-api\". Make sure this host can be reached over ssh: Pseudo-terminal will not be allocated because stdin is not a terminal. sa_116692422516913491665@34.42.108.156: Permission denied (publickey). Recommendation: To check for possible causes of SSH connectivity issues and get recommendations, rerun the ssh command with the --troubleshoot option. gcloud compute ssh monarch-v3-2024-02-13-api --project=monarch-initiative --zone=us-central1-a --troubleshoot Or, to investigate an IAP tunneling issue: gcloud compute ssh monarch-v3-2024-02-13-api --project=monarch-initiative --zone=us-central1-a --troubleshoot --tunnel-through-iap ERROR: (gcloud.compute.ssh) [/usr/bin/ssh] exited with return code [255]. unreachable: true If so you may want to run the stated command (update to your version): gcloud compute ssh monarch-v3-2024-02-13-api --project=monarch-initiative --zone=us-central1-a --troubleshoot","title":"Troubleshooting"},{"location":"seminars/","text":"Monarch Seminar Series The Monarch Seminar Series is a monthly forum for exploring topics central to the Monarch Initiative, including its foundational products. Below, you'll find the schedule along with links to presentation slides, where available. Recordings of the series are uploaded to our YouTube channel and linked here for easy access. To join the Monarch Seminar Series, please email info@monarchinitiative.org with the subject line: \"Join the Monarch Seminar Series.\" Organizers Nico Matentzoglu , Monarch Leadership & Ontologist Sarah Gehrke , Monarch Project Manager Schedule Date Topic Presenter(s) Slides Recording July to September 2025 No Meeting - Enjoy Summer Break! June 10, 2025 Write your own PhEval runner Yasemin Bridges -- Here May 13, 2025 Introduction to Variant Prioritisation using Exomiser Letizia Vestito -- Here April 15, 2025 Introduction to PhEval & How to run a simple benchmark Yasemin Bridges -- Here March 18, 2025 Publication highlight: An ontology-based rare disease common data model harmonising international registries, FHIR, and Phenopackets Adam Graefe -- here January to February 2025 No Meeting - Enjoy Winter Break! Dec 10, 2024 Rare Diseases and Ontology Use in Consumer Health Content Eric Sid (NIH/NCATS) -- Here Nov 26, 2024 An Introduction to the Mondo Disease Ontology Sabrina Toro & Chris Mungall Link Here Oct 29, 2024 An Introduction to the Monarch Knowledge Graph & Services Kevin Schaper & Moni Munoz Torres Link Here August to September 2024 No Meeting - Enjoy Summer Break! Jul 9, 2024 An Introduction to Phenopackets Peter Robinson & Jules Jacobsen Link Here May 14, 2024 An Introduction to the Uberon Anatomy Ontology Chris Mungall & Damien Goutte-Gattat Link1 Link2 Here","title":"Seminars"},{"location":"seminars/#monarch-seminar-series","text":"The Monarch Seminar Series is a monthly forum for exploring topics central to the Monarch Initiative, including its foundational products. Below, you'll find the schedule along with links to presentation slides, where available. Recordings of the series are uploaded to our YouTube channel and linked here for easy access. To join the Monarch Seminar Series, please email info@monarchinitiative.org with the subject line: \"Join the Monarch Seminar Series.\"","title":"Monarch Seminar Series"},{"location":"seminars/#organizers","text":"Nico Matentzoglu , Monarch Leadership & Ontologist Sarah Gehrke , Monarch Project Manager","title":"Organizers"},{"location":"seminars/#schedule","text":"Date Topic Presenter(s) Slides Recording July to September 2025 No Meeting - Enjoy Summer Break! June 10, 2025 Write your own PhEval runner Yasemin Bridges -- Here May 13, 2025 Introduction to Variant Prioritisation using Exomiser Letizia Vestito -- Here April 15, 2025 Introduction to PhEval & How to run a simple benchmark Yasemin Bridges -- Here March 18, 2025 Publication highlight: An ontology-based rare disease common data model harmonising international registries, FHIR, and Phenopackets Adam Graefe -- here January to February 2025 No Meeting - Enjoy Winter Break! Dec 10, 2024 Rare Diseases and Ontology Use in Consumer Health Content Eric Sid (NIH/NCATS) -- Here Nov 26, 2024 An Introduction to the Mondo Disease Ontology Sabrina Toro & Chris Mungall Link Here Oct 29, 2024 An Introduction to the Monarch Knowledge Graph & Services Kevin Schaper & Moni Munoz Torres Link Here August to September 2024 No Meeting - Enjoy Summer Break! Jul 9, 2024 An Introduction to Phenopackets Peter Robinson & Jules Jacobsen Link Here May 14, 2024 An Introduction to the Uberon Anatomy Ontology Chris Mungall & Damien Goutte-Gattat Link1 Link2 Here","title":"Schedule"},{"location":"Documentation-Schema/","text":"monarch-documentation-schema Technical documentation for all Monarch applications, packages, services and related projects. URI: https://w3id.org/monarch-initiative/monarch-documentation Name: monarch-documentation-schema Classes Class Description Contact The person responsible for a resources. Download A downloadable asset, i.e. a data file, an software component, etc. Resource A generic grouping for any identifiable entity DataAsset A data asset is a resource that contains data, either manually curated, or generated by a computational (ETL) process. Data are raw facts (associations) generated by observations. Documentation A resource that contains documentation, like a wiki, a webpage with training materials, etc. ProjectBoard A reference to a project board, like a kanban board. Repository A reference to a version control repository. ResourceRegistry A registry of different types of data assets Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, consistency, and compatibility in various fields and practices. They are like the common languages or rulebooks that different parties use to ensure they understand each other and can work together efficiently. Standards include both exchange standards, like KGX or SSSOM, and ontologies, like HPO or Mondo. Tool A software tool is a computer program designed to help users perform specific tasks or functions, typically making complex or time-consuming processes more efficient and user-friendly. These tasks can range from simple data manipulation to sophisticated design and analysis. Slots Slot Description category Monarch asset category citation A citation for the resource contact The person responsible for a resources data depends_on A list of packages a resource depends on description A human-readable description for a resource documentation A URL to the documentation about this asset documentations download The web location this asset can be obtained from email The email of the contact file_format The format of the file github The GitHub handle of the contact grants The grant used to finance the production of an asset icon An icon representing the asset icons_url A URL to an icon or set of icon representing the asset id A unique identifier for a resource license A URL to the license monarch_contribution The role the Monarch Initiative plays in the maintainence of this asset monarch_role The strategic role the asset has for the Monarch core mission name A human-readable name for a resource orcid The ORCID of the contact organization project_boards The project board associated with this resource release_status The maturity of the asset, e repo_url (str) URL to repositories repository The repository associated with this resource see_also A list of related resources short_name A short name for a resource standards tagline A short tagline for the resource tools url A web location visual_explainer A visual abstract for the resource website_include Flag if this resource should be shown on the website Enumerations Enumeration Description DataAssetEnum DocumentationAssetEnum FileFormatEnum GrantEnum LicenseEnum MonarchContributionEnum MonarchRoleEnum ReleaseStatusEnum StandardEnum ToolAssetEnum Types Type Description Boolean A binary (true or false) value Curie a compact URI Date a date (year, month and day) in an idealized calendar DateOrDatetime Either a date or a datetime Datetime The combination of a date and time Decimal A real number with arbitrary precision that conforms to the xsd:decimal speci... Double A real number that conforms to the xsd:double specification Float A real number that conforms to the xsd:float specification Integer An integer Jsonpath A string encoding a JSON Path Jsonpointer A string encoding a JSON Pointer Ncname Prefix part of CURIE Nodeidentifier A URI, CURIE or BNODE that represents a node in a model Objectidentifier A URI or CURIE that represents an object in the model Sparqlpath A string encoding a SPARQL Property Path String A character string Time A time object represents a (local) time of day, independent of any particular... Uri a complete URI Uriorcurie a URI or a CURIE Subsets Subset Description","title":"monarch-documentation-schema"},{"location":"Documentation-Schema/#monarch-documentation-schema","text":"Technical documentation for all Monarch applications, packages, services and related projects. URI: https://w3id.org/monarch-initiative/monarch-documentation Name: monarch-documentation-schema","title":"monarch-documentation-schema"},{"location":"Documentation-Schema/#classes","text":"Class Description Contact The person responsible for a resources. Download A downloadable asset, i.e. a data file, an software component, etc. Resource A generic grouping for any identifiable entity DataAsset A data asset is a resource that contains data, either manually curated, or generated by a computational (ETL) process. Data are raw facts (associations) generated by observations. Documentation A resource that contains documentation, like a wiki, a webpage with training materials, etc. ProjectBoard A reference to a project board, like a kanban board. Repository A reference to a version control repository. ResourceRegistry A registry of different types of data assets Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, consistency, and compatibility in various fields and practices. They are like the common languages or rulebooks that different parties use to ensure they understand each other and can work together efficiently. Standards include both exchange standards, like KGX or SSSOM, and ontologies, like HPO or Mondo. Tool A software tool is a computer program designed to help users perform specific tasks or functions, typically making complex or time-consuming processes more efficient and user-friendly. These tasks can range from simple data manipulation to sophisticated design and analysis.","title":"Classes"},{"location":"Documentation-Schema/#slots","text":"Slot Description category Monarch asset category citation A citation for the resource contact The person responsible for a resources data depends_on A list of packages a resource depends on description A human-readable description for a resource documentation A URL to the documentation about this asset documentations download The web location this asset can be obtained from email The email of the contact file_format The format of the file github The GitHub handle of the contact grants The grant used to finance the production of an asset icon An icon representing the asset icons_url A URL to an icon or set of icon representing the asset id A unique identifier for a resource license A URL to the license monarch_contribution The role the Monarch Initiative plays in the maintainence of this asset monarch_role The strategic role the asset has for the Monarch core mission name A human-readable name for a resource orcid The ORCID of the contact organization project_boards The project board associated with this resource release_status The maturity of the asset, e repo_url (str) URL to repositories repository The repository associated with this resource see_also A list of related resources short_name A short name for a resource standards tagline A short tagline for the resource tools url A web location visual_explainer A visual abstract for the resource website_include Flag if this resource should be shown on the website","title":"Slots"},{"location":"Documentation-Schema/#enumerations","text":"Enumeration Description DataAssetEnum DocumentationAssetEnum FileFormatEnum GrantEnum LicenseEnum MonarchContributionEnum MonarchRoleEnum ReleaseStatusEnum StandardEnum ToolAssetEnum","title":"Enumerations"},{"location":"Documentation-Schema/#types","text":"Type Description Boolean A binary (true or false) value Curie a compact URI Date a date (year, month and day) in an idealized calendar DateOrDatetime Either a date or a datetime Datetime The combination of a date and time Decimal A real number with arbitrary precision that conforms to the xsd:decimal speci... Double A real number that conforms to the xsd:double specification Float A real number that conforms to the xsd:float specification Integer An integer Jsonpath A string encoding a JSON Path Jsonpointer A string encoding a JSON Pointer Ncname Prefix part of CURIE Nodeidentifier A URI, CURIE or BNODE that represents a node in a model Objectidentifier A URI or CURIE that represents an object in the model Sparqlpath A string encoding a SPARQL Property Path String A character string Time A time object represents a (local) time of day, independent of any particular... Uri a complete URI Uriorcurie a URI or a CURIE","title":"Types"},{"location":"Documentation-Schema/#subsets","text":"Subset Description","title":"Subsets"},{"location":"Documentation-Schema/Boolean/","text":"Type: Boolean A binary (true or false) value URI: xsd:boolean base : Bool uri : xsd:boolean repr : bool Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Boolean"},{"location":"Documentation-Schema/Boolean/#type-boolean","text":"A binary (true or false) value URI: xsd:boolean base : Bool uri : xsd:boolean repr : bool","title":"Type: Boolean"},{"location":"Documentation-Schema/Boolean/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Boolean/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Contact/","text":"Class: Contact The person responsible for a resources. URI: mtd:Contact classDiagram class Contact Contact : email Contact : github Contact : name Contact : orcid Slots Name Cardinality and Range Description Inheritance name 0..1 String A human-readable name for a resource direct orcid 0..1 Uriorcurie The ORCID of the contact direct github 0..1 String The GitHub handle of the contact direct email 0..1 String The email of the contact direct Usages used by used in type used Resource contact range Contact DataAsset contact range Contact Standard contact range Contact Tool contact range Contact Documentation contact range Contact ProjectBoard contact range Contact Repository contact range Contact ResourceRegistry contact range Contact Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation Mappings Mapping Type Mapped Value self mtd:Contact native mtd:Contact LinkML Source Direct name : Contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation slots : - name - orcid - github - email Induced name : Contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation attributes : name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Contact domain_of : - Resource - ResourceRegistry - Contact range : string orcid : name : orcid description : The ORCID of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : orcid owner : Contact domain_of : - Contact range : uriorcurie github : name : github description : The GitHub handle of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : github owner : Contact domain_of : - Contact range : string email : name : email description : The email of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : email owner : Contact domain_of : - Contact range : string","title":"Class: Contact"},{"location":"Documentation-Schema/Contact/#class-contact","text":"The person responsible for a resources. URI: mtd:Contact classDiagram class Contact Contact : email Contact : github Contact : name Contact : orcid","title":"Class: Contact"},{"location":"Documentation-Schema/Contact/#slots","text":"Name Cardinality and Range Description Inheritance name 0..1 String A human-readable name for a resource direct orcid 0..1 Uriorcurie The ORCID of the contact direct github 0..1 String The GitHub handle of the contact direct email 0..1 String The email of the contact direct","title":"Slots"},{"location":"Documentation-Schema/Contact/#usages","text":"used by used in type used Resource contact range Contact DataAsset contact range Contact Standard contact range Contact Tool contact range Contact Documentation contact range Contact ProjectBoard contact range Contact Repository contact range Contact ResourceRegistry contact range Contact","title":"Usages"},{"location":"Documentation-Schema/Contact/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Contact/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Contact/#mappings","text":"Mapping Type Mapped Value self mtd:Contact native mtd:Contact","title":"Mappings"},{"location":"Documentation-Schema/Contact/#linkml-source","text":"","title":"LinkML Source"},{"location":"Documentation-Schema/Contact/#direct","text":"name : Contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation slots : - name - orcid - github - email","title":"Direct"},{"location":"Documentation-Schema/Contact/#induced","text":"name : Contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation attributes : name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Contact domain_of : - Resource - ResourceRegistry - Contact range : string orcid : name : orcid description : The ORCID of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : orcid owner : Contact domain_of : - Contact range : uriorcurie github : name : github description : The GitHub handle of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : github owner : Contact domain_of : - Contact range : string email : name : email description : The email of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : email owner : Contact domain_of : - Contact range : string","title":"Induced"},{"location":"Documentation-Schema/Curie/","text":"Type: Curie a compact URI URI: xsd:string base : Curie uri : xsd:string repr : str Comments in RDF serializations this MUST be expanded to a URI in non-RDF serializations MAY be serialized as the compact representation Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Curie"},{"location":"Documentation-Schema/Curie/#type-curie","text":"a compact URI URI: xsd:string base : Curie uri : xsd:string repr : str","title":"Type: Curie"},{"location":"Documentation-Schema/Curie/#comments","text":"in RDF serializations this MUST be expanded to a URI in non-RDF serializations MAY be serialized as the compact representation","title":"Comments"},{"location":"Documentation-Schema/Curie/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Curie/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/DataAsset/","text":"Class: DataAsset A data asset is a resource that contains data, either manually curated, or generated by a computational (ETL) process. Data are raw facts (associations) generated by observations. URI: mtd:DataAsset classDiagram class DataAsset Resource <|-- DataAsset DataAsset : category DataAsset --> data_asset_enum : category DataAsset : citation DataAsset : contact DataAsset --> Contact : contact DataAsset : description DataAsset : documentation DataAsset : download DataAsset --> Download : download DataAsset : grants DataAsset --> grant_enum : grants DataAsset : icon DataAsset : icons_url DataAsset : id DataAsset : license DataAsset --> license_enum : license DataAsset : monarch_contribution DataAsset --> monarch_contribution_enum : monarch_contribution DataAsset : monarch_role DataAsset --> monarch_role_enum : monarch_role DataAsset : name DataAsset : project_boards DataAsset --> ProjectBoard : project_boards DataAsset : repository DataAsset : see_also DataAsset : short_name DataAsset : tagline DataAsset : url DataAsset : visual_explainer DataAsset : website_include Inheritance Resource DataAsset Slots Name Cardinality and Range Description Inheritance download 0..* Download The web location this asset can be obtained from direct category 1..1 DataAssetEnum Monarch asset category direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource Usages used by used in type used ResourceRegistry data range DataAsset Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation Mappings Mapping Type Mapped Value self mtd:DataAsset native mtd:DataAsset LinkML Source Direct name : DataAsset description : A data asset is a resource that contains data, either manually curated, or generated by a computational (ETL) process. Data are raw facts (associations) generated by observations. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - download - category slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : data_asset_enum Induced name : DataAsset description : A data asset is a resource that contains data, either manually curated, or generated by a computational (ETL) process. Data are raw facts (associations) generated by observations. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : data_asset_enum attributes : download : name : download description : The web location this asset can be obtained from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : download owner : DataAsset domain_of : - DataAsset range : Download category : name : category description : Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : category owner : DataAsset domain_of : - DataAsset - Standard - Tool - Documentation range : data_asset_enum required : true id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : DataAsset domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : DataAsset domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : DataAsset domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : DataAsset domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : DataAsset domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : DataAsset domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : DataAsset domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : DataAsset domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : DataAsset domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : DataAsset domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : DataAsset domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : DataAsset domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : DataAsset domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : DataAsset domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : DataAsset domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : DataAsset domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : DataAsset domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : DataAsset domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : DataAsset domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : DataAsset domain_of : - Resource range : license_enum","title":"Class: DataAsset"},{"location":"Documentation-Schema/DataAsset/#class-dataasset","text":"A data asset is a resource that contains data, either manually curated, or generated by a computational (ETL) process. Data are raw facts (associations) generated by observations. URI: mtd:DataAsset classDiagram class DataAsset Resource <|-- DataAsset DataAsset : category DataAsset --> data_asset_enum : category DataAsset : citation DataAsset : contact DataAsset --> Contact : contact DataAsset : description DataAsset : documentation DataAsset : download DataAsset --> Download : download DataAsset : grants DataAsset --> grant_enum : grants DataAsset : icon DataAsset : icons_url DataAsset : id DataAsset : license DataAsset --> license_enum : license DataAsset : monarch_contribution DataAsset --> monarch_contribution_enum : monarch_contribution DataAsset : monarch_role DataAsset --> monarch_role_enum : monarch_role DataAsset : name DataAsset : project_boards DataAsset --> ProjectBoard : project_boards DataAsset : repository DataAsset : see_also DataAsset : short_name DataAsset : tagline DataAsset : url DataAsset : visual_explainer DataAsset : website_include","title":"Class: DataAsset"},{"location":"Documentation-Schema/DataAsset/#inheritance","text":"Resource DataAsset","title":"Inheritance"},{"location":"Documentation-Schema/DataAsset/#slots","text":"Name Cardinality and Range Description Inheritance download 0..* Download The web location this asset can be obtained from direct category 1..1 DataAssetEnum Monarch asset category direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource","title":"Slots"},{"location":"Documentation-Schema/DataAsset/#usages","text":"used by used in type used ResourceRegistry data range DataAsset","title":"Usages"},{"location":"Documentation-Schema/DataAsset/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/DataAsset/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/DataAsset/#mappings","text":"Mapping Type Mapped Value self mtd:DataAsset native mtd:DataAsset","title":"Mappings"},{"location":"Documentation-Schema/DataAsset/#linkml-source","text":"","title":"LinkML Source"},{"location":"Documentation-Schema/DataAsset/#direct","text":"name : DataAsset description : A data asset is a resource that contains data, either manually curated, or generated by a computational (ETL) process. Data are raw facts (associations) generated by observations. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - download - category slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : data_asset_enum","title":"Direct"},{"location":"Documentation-Schema/DataAsset/#induced","text":"name : DataAsset description : A data asset is a resource that contains data, either manually curated, or generated by a computational (ETL) process. Data are raw facts (associations) generated by observations. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : data_asset_enum attributes : download : name : download description : The web location this asset can be obtained from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : download owner : DataAsset domain_of : - DataAsset range : Download category : name : category description : Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : category owner : DataAsset domain_of : - DataAsset - Standard - Tool - Documentation range : data_asset_enum required : true id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : DataAsset domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : DataAsset domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : DataAsset domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : DataAsset domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : DataAsset domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : DataAsset domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : DataAsset domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : DataAsset domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : DataAsset domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : DataAsset domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : DataAsset domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : DataAsset domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : DataAsset domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : DataAsset domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : DataAsset domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : DataAsset domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : DataAsset domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : DataAsset domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : DataAsset domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : DataAsset domain_of : - Resource range : license_enum","title":"Induced"},{"location":"Documentation-Schema/DataAssetEnum/","text":"Enum: DataAssetEnum URI: DataAssetEnum Permissible Values Value Meaning Description Biomedical Data None Knowledge Graph Ingestibles None Knowledge Graph None Slots Name Description category Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : data_asset_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Biomedical Data : text : Biomedical Data Knowledge Graph Ingestibles : text : Knowledge Graph Ingestibles Knowledge Graph : text : Knowledge Graph","title":"Enum: DataAssetEnum"},{"location":"Documentation-Schema/DataAssetEnum/#enum-dataassetenum","text":"URI: DataAssetEnum","title":"Enum: DataAssetEnum"},{"location":"Documentation-Schema/DataAssetEnum/#permissible-values","text":"Value Meaning Description Biomedical Data None Knowledge Graph Ingestibles None Knowledge Graph None","title":"Permissible Values"},{"location":"Documentation-Schema/DataAssetEnum/#slots","text":"Name Description category","title":"Slots"},{"location":"Documentation-Schema/DataAssetEnum/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/DataAssetEnum/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/DataAssetEnum/#linkml-source","text":"name : data_asset_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Biomedical Data : text : Biomedical Data Knowledge Graph Ingestibles : text : Knowledge Graph Ingestibles Knowledge Graph : text : Knowledge Graph","title":"LinkML Source"},{"location":"Documentation-Schema/Date/","text":"Type: Date a date (year, month and day) in an idealized calendar URI: xsd:date base : XSDDate uri : xsd:date repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Date"},{"location":"Documentation-Schema/Date/#type-date","text":"a date (year, month and day) in an idealized calendar URI: xsd:date base : XSDDate uri : xsd:date repr : str","title":"Type: Date"},{"location":"Documentation-Schema/Date/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Date/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/DateOrDatetime/","text":"Type: DateOrDatetime Either a date or a datetime URI: linkml:DateOrDatetime base : str uri : linkml:DateOrDatetime repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: DateOrDatetime"},{"location":"Documentation-Schema/DateOrDatetime/#type-dateordatetime","text":"Either a date or a datetime URI: linkml:DateOrDatetime base : str uri : linkml:DateOrDatetime repr : str","title":"Type: DateOrDatetime"},{"location":"Documentation-Schema/DateOrDatetime/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/DateOrDatetime/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Datetime/","text":"Type: Datetime The combination of a date and time URI: xsd:dateTime base : XSDDateTime uri : xsd:dateTime repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Datetime"},{"location":"Documentation-Schema/Datetime/#type-datetime","text":"The combination of a date and time URI: xsd:dateTime base : XSDDateTime uri : xsd:dateTime repr : str","title":"Type: Datetime"},{"location":"Documentation-Schema/Datetime/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Datetime/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Decimal/","text":"Type: Decimal A real number with arbitrary precision that conforms to the xsd:decimal specification URI: xsd:decimal base : Decimal uri : xsd:decimal Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Decimal"},{"location":"Documentation-Schema/Decimal/#type-decimal","text":"A real number with arbitrary precision that conforms to the xsd:decimal specification URI: xsd:decimal base : Decimal uri : xsd:decimal","title":"Type: Decimal"},{"location":"Documentation-Schema/Decimal/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Decimal/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Documentation/","text":"Class: Documentation A resource that contains documentation, like a wiki, a webpage with training materials, etc. URI: mtd:Documentation classDiagram class Documentation Resource <|-- Documentation Documentation : category Documentation --> documentation_asset_enum : category Documentation : citation Documentation : contact Documentation --> Contact : contact Documentation : description Documentation : documentation Documentation : grants Documentation --> grant_enum : grants Documentation : icon Documentation : icons_url Documentation : id Documentation : license Documentation --> license_enum : license Documentation : monarch_contribution Documentation --> monarch_contribution_enum : monarch_contribution Documentation : monarch_role Documentation --> monarch_role_enum : monarch_role Documentation : name Documentation : project_boards Documentation --> ProjectBoard : project_boards Documentation : repository Documentation : see_also Documentation : short_name Documentation : tagline Documentation : url Documentation : visual_explainer Documentation : website_include Inheritance Resource Documentation Slots Name Cardinality and Range Description Inheritance category 1..1 DocumentationAssetEnum Monarch asset category direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource Usages used by used in type used ResourceRegistry documentations range Documentation Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation Mappings Mapping Type Mapped Value self mtd:Documentation native mtd:Documentation LinkML Source Direct name : Documentation description : A resource that contains documentation, like a wiki, a webpage with training materials, etc. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - category slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : documentation_asset_enum Induced name : Documentation description : A resource that contains documentation, like a wiki, a webpage with training materials, etc. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : documentation_asset_enum attributes : category : name : category description : Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : category owner : Documentation domain_of : - DataAsset - Standard - Tool - Documentation range : documentation_asset_enum required : true id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : Documentation domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Documentation domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : Documentation domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : Documentation domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : Documentation domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : Documentation domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : Documentation domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : Documentation domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : Documentation domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : Documentation domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : Documentation domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : Documentation domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : Documentation domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : Documentation domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : Documentation domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : Documentation domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Documentation domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : Documentation domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : Documentation domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : Documentation domain_of : - Resource range : license_enum","title":"Class: Documentation"},{"location":"Documentation-Schema/Documentation/#class-documentation","text":"A resource that contains documentation, like a wiki, a webpage with training materials, etc. URI: mtd:Documentation classDiagram class Documentation Resource <|-- Documentation Documentation : category Documentation --> documentation_asset_enum : category Documentation : citation Documentation : contact Documentation --> Contact : contact Documentation : description Documentation : documentation Documentation : grants Documentation --> grant_enum : grants Documentation : icon Documentation : icons_url Documentation : id Documentation : license Documentation --> license_enum : license Documentation : monarch_contribution Documentation --> monarch_contribution_enum : monarch_contribution Documentation : monarch_role Documentation --> monarch_role_enum : monarch_role Documentation : name Documentation : project_boards Documentation --> ProjectBoard : project_boards Documentation : repository Documentation : see_also Documentation : short_name Documentation : tagline Documentation : url Documentation : visual_explainer Documentation : website_include","title":"Class: Documentation"},{"location":"Documentation-Schema/Documentation/#inheritance","text":"Resource Documentation","title":"Inheritance"},{"location":"Documentation-Schema/Documentation/#slots","text":"Name Cardinality and Range Description Inheritance category 1..1 DocumentationAssetEnum Monarch asset category direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource","title":"Slots"},{"location":"Documentation-Schema/Documentation/#usages","text":"used by used in type used ResourceRegistry documentations range Documentation","title":"Usages"},{"location":"Documentation-Schema/Documentation/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Documentation/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Documentation/#mappings","text":"Mapping Type Mapped Value self mtd:Documentation native mtd:Documentation","title":"Mappings"},{"location":"Documentation-Schema/Documentation/#linkml-source","text":"","title":"LinkML Source"},{"location":"Documentation-Schema/Documentation/#direct","text":"name : Documentation description : A resource that contains documentation, like a wiki, a webpage with training materials, etc. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - category slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : documentation_asset_enum","title":"Direct"},{"location":"Documentation-Schema/Documentation/#induced","text":"name : Documentation description : A resource that contains documentation, like a wiki, a webpage with training materials, etc. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : documentation_asset_enum attributes : category : name : category description : Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : category owner : Documentation domain_of : - DataAsset - Standard - Tool - Documentation range : documentation_asset_enum required : true id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : Documentation domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Documentation domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : Documentation domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : Documentation domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : Documentation domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : Documentation domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : Documentation domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : Documentation domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : Documentation domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : Documentation domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : Documentation domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : Documentation domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : Documentation domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : Documentation domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : Documentation domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : Documentation domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Documentation domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : Documentation domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : Documentation domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : Documentation domain_of : - Resource range : license_enum","title":"Induced"},{"location":"Documentation-Schema/DocumentationAssetEnum/","text":"Enum: DocumentationAssetEnum URI: DocumentationAssetEnum Permissible Values Value Meaning Description Technical Documentation None Training Materials None Slots Name Description category Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : documentation_asset_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Technical Documentation : text : Technical Documentation Training Materials : text : Training Materials","title":"Enum: DocumentationAssetEnum"},{"location":"Documentation-Schema/DocumentationAssetEnum/#enum-documentationassetenum","text":"URI: DocumentationAssetEnum","title":"Enum: DocumentationAssetEnum"},{"location":"Documentation-Schema/DocumentationAssetEnum/#permissible-values","text":"Value Meaning Description Technical Documentation None Training Materials None","title":"Permissible Values"},{"location":"Documentation-Schema/DocumentationAssetEnum/#slots","text":"Name Description category","title":"Slots"},{"location":"Documentation-Schema/DocumentationAssetEnum/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/DocumentationAssetEnum/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/DocumentationAssetEnum/#linkml-source","text":"name : documentation_asset_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Technical Documentation : text : Technical Documentation Training Materials : text : Training Materials","title":"LinkML Source"},{"location":"Documentation-Schema/Double/","text":"Type: Double A real number that conforms to the xsd:double specification URI: xsd:double base : float uri : xsd:double Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Double"},{"location":"Documentation-Schema/Double/#type-double","text":"A real number that conforms to the xsd:double specification URI: xsd:double base : float uri : xsd:double","title":"Type: Double"},{"location":"Documentation-Schema/Double/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Double/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Download/","text":"Class: Download A downloadable asset, i.e. a data file, an software component, etc. URI: mtd:Download classDiagram class Download Download : file_format Download --> file_format_enum : file_format Download : release_status Download --> release_status_enum : release_status Download : url Slots Name Cardinality and Range Description Inheritance url 0..1 Uriorcurie A web location direct release_status 0..1 ReleaseStatusEnum The maturity of the asset, e direct file_format 0..1 FileFormatEnum The format of the file direct Usages used by used in type used DataAsset download range Download Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation Mappings Mapping Type Mapped Value self mtd:Download native mtd:Download LinkML Source Direct name : Download description : A downloadable asset, i.e. a data file, an software component, etc. from_schema : https://w3id.org/monarch-initiative/monarch-documentation slots : - url - release_status - file_format Induced name : Download description : A downloadable asset, i.e. a data file, an software component, etc. from_schema : https://w3id.org/monarch-initiative/monarch-documentation attributes : url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Download domain_of : - Resource - ProjectBoard - Download range : uriorcurie release_status : name : release_status description : The maturity of the asset, e.g. whether it is under development, or public. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : release_status owner : Download domain_of : - Download range : release_status_enum file_format : name : file_format description : The format of the file. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : file_format owner : Download domain_of : - Download range : file_format_enum","title":"Class: Download"},{"location":"Documentation-Schema/Download/#class-download","text":"A downloadable asset, i.e. a data file, an software component, etc. URI: mtd:Download classDiagram class Download Download : file_format Download --> file_format_enum : file_format Download : release_status Download --> release_status_enum : release_status Download : url","title":"Class: Download"},{"location":"Documentation-Schema/Download/#slots","text":"Name Cardinality and Range Description Inheritance url 0..1 Uriorcurie A web location direct release_status 0..1 ReleaseStatusEnum The maturity of the asset, e direct file_format 0..1 FileFormatEnum The format of the file direct","title":"Slots"},{"location":"Documentation-Schema/Download/#usages","text":"used by used in type used DataAsset download range Download","title":"Usages"},{"location":"Documentation-Schema/Download/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Download/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Download/#mappings","text":"Mapping Type Mapped Value self mtd:Download native mtd:Download","title":"Mappings"},{"location":"Documentation-Schema/Download/#linkml-source","text":"","title":"LinkML Source"},{"location":"Documentation-Schema/Download/#direct","text":"name : Download description : A downloadable asset, i.e. a data file, an software component, etc. from_schema : https://w3id.org/monarch-initiative/monarch-documentation slots : - url - release_status - file_format","title":"Direct"},{"location":"Documentation-Schema/Download/#induced","text":"name : Download description : A downloadable asset, i.e. a data file, an software component, etc. from_schema : https://w3id.org/monarch-initiative/monarch-documentation attributes : url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Download domain_of : - Resource - ProjectBoard - Download range : uriorcurie release_status : name : release_status description : The maturity of the asset, e.g. whether it is under development, or public. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : release_status owner : Download domain_of : - Download range : release_status_enum file_format : name : file_format description : The format of the file. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : file_format owner : Download domain_of : - Download range : file_format_enum","title":"Induced"},{"location":"Documentation-Schema/FileFormatEnum/","text":"Enum: FileFormatEnum URI: FileFormatEnum Permissible Values Value Meaning Description tsv None csv None ttl None json None rdfxml None nt.gz None Slots Name Description file_format The format of the file Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : file_format_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : tsv : text : tsv csv : text : csv ttl : text : ttl json : text : json rdfxml : text : rdfxml nt.gz : text : nt.gz","title":"Enum: FileFormatEnum"},{"location":"Documentation-Schema/FileFormatEnum/#enum-fileformatenum","text":"URI: FileFormatEnum","title":"Enum: FileFormatEnum"},{"location":"Documentation-Schema/FileFormatEnum/#permissible-values","text":"Value Meaning Description tsv None csv None ttl None json None rdfxml None nt.gz None","title":"Permissible Values"},{"location":"Documentation-Schema/FileFormatEnum/#slots","text":"Name Description file_format The format of the file","title":"Slots"},{"location":"Documentation-Schema/FileFormatEnum/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/FileFormatEnum/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/FileFormatEnum/#linkml-source","text":"name : file_format_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : tsv : text : tsv csv : text : csv ttl : text : ttl json : text : json rdfxml : text : rdfxml nt.gz : text : nt.gz","title":"LinkML Source"},{"location":"Documentation-Schema/Float/","text":"Type: Float A real number that conforms to the xsd:float specification URI: xsd:float base : float uri : xsd:float Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Float"},{"location":"Documentation-Schema/Float/#type-float","text":"A real number that conforms to the xsd:float specification URI: xsd:float base : float uri : xsd:float","title":"Type: Float"},{"location":"Documentation-Schema/Float/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Float/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/GrantEnum/","text":"Enum: GrantEnum URI: GrantEnum Permissible Values Value Meaning Description Phenomics First None The Phenomics First Grant Monarch R24 None HPO None Exomiser None Bosch Gift None TBD None Slots Name Description grants The grant used to finance the production of an asset Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : grant_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Phenomics First : text : Phenomics First description : The Phenomics First Grant Monarch R24 : text : Monarch R24 HPO : text : HPO Exomiser : text : Exomiser Bosch Gift : text : Bosch Gift TBD : text : TBD","title":"Enum: GrantEnum"},{"location":"Documentation-Schema/GrantEnum/#enum-grantenum","text":"URI: GrantEnum","title":"Enum: GrantEnum"},{"location":"Documentation-Schema/GrantEnum/#permissible-values","text":"Value Meaning Description Phenomics First None The Phenomics First Grant Monarch R24 None HPO None Exomiser None Bosch Gift None TBD None","title":"Permissible Values"},{"location":"Documentation-Schema/GrantEnum/#slots","text":"Name Description grants The grant used to finance the production of an asset","title":"Slots"},{"location":"Documentation-Schema/GrantEnum/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/GrantEnum/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/GrantEnum/#linkml-source","text":"name : grant_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Phenomics First : text : Phenomics First description : The Phenomics First Grant Monarch R24 : text : Monarch R24 HPO : text : HPO Exomiser : text : Exomiser Bosch Gift : text : Bosch Gift TBD : text : TBD","title":"LinkML Source"},{"location":"Documentation-Schema/Integer/","text":"Type: Integer An integer URI: xsd:integer base : int uri : xsd:integer Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Integer"},{"location":"Documentation-Schema/Integer/#type-integer","text":"An integer URI: xsd:integer base : int uri : xsd:integer","title":"Type: Integer"},{"location":"Documentation-Schema/Integer/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Integer/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Jsonpath/","text":"Type: Jsonpath A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form. URI: xsd:string base : str uri : xsd:string repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Jsonpath"},{"location":"Documentation-Schema/Jsonpath/#type-jsonpath","text":"A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form. URI: xsd:string base : str uri : xsd:string repr : str","title":"Type: Jsonpath"},{"location":"Documentation-Schema/Jsonpath/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Jsonpath/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Jsonpointer/","text":"Type: Jsonpointer A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form. URI: xsd:string base : str uri : xsd:string repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Jsonpointer"},{"location":"Documentation-Schema/Jsonpointer/#type-jsonpointer","text":"A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form. URI: xsd:string base : str uri : xsd:string repr : str","title":"Type: Jsonpointer"},{"location":"Documentation-Schema/Jsonpointer/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Jsonpointer/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/LicenseEnum/","text":"Enum: LicenseEnum URI: LicenseEnum Permissible Values Value Meaning Description CC0 None Creative Commons Zero v1 CC-BY-3.0 None Creative Commons Attribution 3 CC-BY-4.0 None Creative Commons Attribution 4 CC-BY-NC-4.0 None Creative Commons Attribution-NonCommercial 4 CC-BY-SA-4.0 None Creative Commons Attribution-ShareAlike 4 CC-BY-NC-SA-4.0 None Creative Commons Attribution-NonCommercial-ShareAlike 4 GPLv3 None GNU General Public License v3 BSD-3-Clause None BSD 3-Clause License Apache-2.0 None Apache License 2 AGPL-3.0 None GNU Affero General Public License v3 MIT None MIT License JAX-CUSTOM None JAX Custom License (https://hpo Slots Name Description license A URL to the license Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : license_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : CC0 : text : CC0 description : Creative Commons Zero v1.0 Universal CC-BY-3.0 : text : CC-BY-3.0 description : Creative Commons Attribution 3.0 Unported CC-BY-4.0 : text : CC-BY-4.0 description : Creative Commons Attribution 4.0 International CC-BY-NC-4.0 : text : CC-BY-NC-4.0 description : Creative Commons Attribution-NonCommercial 4.0 International CC-BY-SA-4.0 : text : CC-BY-SA-4.0 description : Creative Commons Attribution-ShareAlike 4.0 International CC-BY-NC-SA-4.0 : text : CC-BY-NC-SA-4.0 description : Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International GPLv3 : text : GPLv3 description : GNU General Public License v3.0 BSD-3-Clause : text : BSD-3-Clause description : BSD 3-Clause License Apache-2.0 : text : Apache-2.0 description : Apache License 2.0 AGPL-3.0 : text : AGPL-3.0 description : GNU Affero General Public License v3.0 MIT : text : MIT description : MIT License JAX-CUSTOM : text : JAX-CUSTOM description : JAX Custom License (https://hpo.jax.org/license)","title":"Enum: LicenseEnum"},{"location":"Documentation-Schema/LicenseEnum/#enum-licenseenum","text":"URI: LicenseEnum","title":"Enum: LicenseEnum"},{"location":"Documentation-Schema/LicenseEnum/#permissible-values","text":"Value Meaning Description CC0 None Creative Commons Zero v1 CC-BY-3.0 None Creative Commons Attribution 3 CC-BY-4.0 None Creative Commons Attribution 4 CC-BY-NC-4.0 None Creative Commons Attribution-NonCommercial 4 CC-BY-SA-4.0 None Creative Commons Attribution-ShareAlike 4 CC-BY-NC-SA-4.0 None Creative Commons Attribution-NonCommercial-ShareAlike 4 GPLv3 None GNU General Public License v3 BSD-3-Clause None BSD 3-Clause License Apache-2.0 None Apache License 2 AGPL-3.0 None GNU Affero General Public License v3 MIT None MIT License JAX-CUSTOM None JAX Custom License (https://hpo","title":"Permissible Values"},{"location":"Documentation-Schema/LicenseEnum/#slots","text":"Name Description license A URL to the license","title":"Slots"},{"location":"Documentation-Schema/LicenseEnum/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/LicenseEnum/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/LicenseEnum/#linkml-source","text":"name : license_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : CC0 : text : CC0 description : Creative Commons Zero v1.0 Universal CC-BY-3.0 : text : CC-BY-3.0 description : Creative Commons Attribution 3.0 Unported CC-BY-4.0 : text : CC-BY-4.0 description : Creative Commons Attribution 4.0 International CC-BY-NC-4.0 : text : CC-BY-NC-4.0 description : Creative Commons Attribution-NonCommercial 4.0 International CC-BY-SA-4.0 : text : CC-BY-SA-4.0 description : Creative Commons Attribution-ShareAlike 4.0 International CC-BY-NC-SA-4.0 : text : CC-BY-NC-SA-4.0 description : Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International GPLv3 : text : GPLv3 description : GNU General Public License v3.0 BSD-3-Clause : text : BSD-3-Clause description : BSD 3-Clause License Apache-2.0 : text : Apache-2.0 description : Apache License 2.0 AGPL-3.0 : text : AGPL-3.0 description : GNU Affero General Public License v3.0 MIT : text : MIT description : MIT License JAX-CUSTOM : text : JAX-CUSTOM description : JAX Custom License (https://hpo.jax.org/license)","title":"LinkML Source"},{"location":"Documentation-Schema/MonarchContributionEnum/","text":"Enum: MonarchContributionEnum URI: MonarchContributionEnum Permissible Values Value Meaning Description Lead None Co-Lead None Contributor None Slots Name Description monarch_contribution The role the Monarch Initiative plays in the maintainence of this asset Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : monarch_contribution_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Lead : text : Lead Co-Lead : text : Co-Lead Contributor : text : Contributor","title":"Enum: MonarchContributionEnum"},{"location":"Documentation-Schema/MonarchContributionEnum/#enum-monarchcontributionenum","text":"URI: MonarchContributionEnum","title":"Enum: MonarchContributionEnum"},{"location":"Documentation-Schema/MonarchContributionEnum/#permissible-values","text":"Value Meaning Description Lead None Co-Lead None Contributor None","title":"Permissible Values"},{"location":"Documentation-Schema/MonarchContributionEnum/#slots","text":"Name Description monarch_contribution The role the Monarch Initiative plays in the maintainence of this asset","title":"Slots"},{"location":"Documentation-Schema/MonarchContributionEnum/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/MonarchContributionEnum/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/MonarchContributionEnum/#linkml-source","text":"name : monarch_contribution_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Lead : text : Lead Co-Lead : text : Co-Lead Contributor : text : Contributor","title":"LinkML Source"},{"location":"Documentation-Schema/MonarchRoleEnum/","text":"Enum: MonarchRoleEnum URI: MonarchRoleEnum Permissible Values Value Meaning Description Foundational None A foundational product is a product that fulfills a strategic role for the Mo... Core None A core product is a product that contributes to the Monarch mission, but is n... Support None A support product is a product that only indirectly contributes to the Monarc... Research None A research product is a product that supports our own research efforts Community None A community product is a product that does not directly support the Monarch m... Slots Name Description monarch_role The strategic role the asset has for the Monarch core mission Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : monarch_role_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Foundational : text : Foundational description : A foundational product is a product that fulfills a strategic role for the Monarch Initiative. In particular it (1) *directly* supports the Monarch mission (excluding products of general utility) (2) has stakeholders outside of the Monarch Initiative (3) has stakeholders among most major member organisations of the Monarch Initiative An important corrolary of (3) is that all major member organisations of the Monarch Initiative should feel a sense of commitment to contributing to the success of the foundational product. Core : text : Core description : A core product is a product that contributes to the Monarch mission, but is not a foundational product. In particular it (1) may support the Monarch mission in an indirect manner, such as core infrastructure for ontology lifecycle management or querying (2) has stakeholders outside of the Monarch Initiative (3) has stakeholders among at least one major member organisation of the Monarch Initiative An important corrolary of (3) is that at least one major member organisation of the Monarch Initiative should feel a sense of commitment to contributing to the success of the core product. Support : text : Support description : A support product is a product that only indirectly contributes to the Monarch mission, usually by supporting the development of a foundational or core product. A support product (1) does not directly support the Monarch mission, but is essential for the development of a foundational or core product (2) has few stakeholders outside of the Monarch Initiative Research : text : Research description : A research product is a product that supports our own research efforts. The research outcome may or may not be used in a foundational product, core or support product. A research product (1) does not directly support the Monarch mission, but leads to insights that support our mission (2) has no stakeholders outside of the Monarch Initiative (the research itself may!) Community : text : Community description : A community product is a product that does not directly support the Monarch mission, but supports community efforts towards the mission. A community product (1) is usually a community resource, such as training materials, a community website, a standard specification, etc. (2) is usually more *general-purpose* (3) is community-driven, rather than mission-driven","title":"Enum: MonarchRoleEnum"},{"location":"Documentation-Schema/MonarchRoleEnum/#enum-monarchroleenum","text":"URI: MonarchRoleEnum","title":"Enum: MonarchRoleEnum"},{"location":"Documentation-Schema/MonarchRoleEnum/#permissible-values","text":"Value Meaning Description Foundational None A foundational product is a product that fulfills a strategic role for the Mo... Core None A core product is a product that contributes to the Monarch mission, but is n... Support None A support product is a product that only indirectly contributes to the Monarc... Research None A research product is a product that supports our own research efforts Community None A community product is a product that does not directly support the Monarch m...","title":"Permissible Values"},{"location":"Documentation-Schema/MonarchRoleEnum/#slots","text":"Name Description monarch_role The strategic role the asset has for the Monarch core mission","title":"Slots"},{"location":"Documentation-Schema/MonarchRoleEnum/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/MonarchRoleEnum/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/MonarchRoleEnum/#linkml-source","text":"name : monarch_role_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Foundational : text : Foundational description : A foundational product is a product that fulfills a strategic role for the Monarch Initiative. In particular it (1) *directly* supports the Monarch mission (excluding products of general utility) (2) has stakeholders outside of the Monarch Initiative (3) has stakeholders among most major member organisations of the Monarch Initiative An important corrolary of (3) is that all major member organisations of the Monarch Initiative should feel a sense of commitment to contributing to the success of the foundational product. Core : text : Core description : A core product is a product that contributes to the Monarch mission, but is not a foundational product. In particular it (1) may support the Monarch mission in an indirect manner, such as core infrastructure for ontology lifecycle management or querying (2) has stakeholders outside of the Monarch Initiative (3) has stakeholders among at least one major member organisation of the Monarch Initiative An important corrolary of (3) is that at least one major member organisation of the Monarch Initiative should feel a sense of commitment to contributing to the success of the core product. Support : text : Support description : A support product is a product that only indirectly contributes to the Monarch mission, usually by supporting the development of a foundational or core product. A support product (1) does not directly support the Monarch mission, but is essential for the development of a foundational or core product (2) has few stakeholders outside of the Monarch Initiative Research : text : Research description : A research product is a product that supports our own research efforts. The research outcome may or may not be used in a foundational product, core or support product. A research product (1) does not directly support the Monarch mission, but leads to insights that support our mission (2) has no stakeholders outside of the Monarch Initiative (the research itself may!) Community : text : Community description : A community product is a product that does not directly support the Monarch mission, but supports community efforts towards the mission. A community product (1) is usually a community resource, such as training materials, a community website, a standard specification, etc. (2) is usually more *general-purpose* (3) is community-driven, rather than mission-driven","title":"LinkML Source"},{"location":"Documentation-Schema/Ncname/","text":"Type: Ncname Prefix part of CURIE URI: xsd:string base : NCName uri : xsd:string repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Ncname"},{"location":"Documentation-Schema/Ncname/#type-ncname","text":"Prefix part of CURIE URI: xsd:string base : NCName uri : xsd:string repr : str","title":"Type: Ncname"},{"location":"Documentation-Schema/Ncname/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Ncname/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Nodeidentifier/","text":"Type: Nodeidentifier A URI, CURIE or BNODE that represents a node in a model. URI: shex:nonLiteral base : NodeIdentifier uri : shex:nonLiteral repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Nodeidentifier"},{"location":"Documentation-Schema/Nodeidentifier/#type-nodeidentifier","text":"A URI, CURIE or BNODE that represents a node in a model. URI: shex:nonLiteral base : NodeIdentifier uri : shex:nonLiteral repr : str","title":"Type: Nodeidentifier"},{"location":"Documentation-Schema/Nodeidentifier/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Nodeidentifier/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Objectidentifier/","text":"Type: Objectidentifier A URI or CURIE that represents an object in the model. URI: shex:iri base : ElementIdentifier uri : shex:iri repr : str Comments Used for inheritance and type checking Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Objectidentifier"},{"location":"Documentation-Schema/Objectidentifier/#type-objectidentifier","text":"A URI or CURIE that represents an object in the model. URI: shex:iri base : ElementIdentifier uri : shex:iri repr : str","title":"Type: Objectidentifier"},{"location":"Documentation-Schema/Objectidentifier/#comments","text":"Used for inheritance and type checking","title":"Comments"},{"location":"Documentation-Schema/Objectidentifier/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Objectidentifier/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/ProjectBoard/","text":"Class: ProjectBoard A reference to a project board, like a kanban board. URI: mtd:ProjectBoard classDiagram class ProjectBoard Resource <|-- ProjectBoard ProjectBoard : citation ProjectBoard : contact ProjectBoard --> Contact : contact ProjectBoard : description ProjectBoard : documentation ProjectBoard : grants ProjectBoard --> grant_enum : grants ProjectBoard : icon ProjectBoard : icons_url ProjectBoard : id ProjectBoard : license ProjectBoard --> license_enum : license ProjectBoard : monarch_contribution ProjectBoard --> monarch_contribution_enum : monarch_contribution ProjectBoard : monarch_role ProjectBoard --> monarch_role_enum : monarch_role ProjectBoard : name ProjectBoard : project_boards ProjectBoard --> ProjectBoard : project_boards ProjectBoard : repository ProjectBoard : see_also ProjectBoard : short_name ProjectBoard : tagline ProjectBoard : url ProjectBoard : visual_explainer ProjectBoard : website_include Inheritance Resource ProjectBoard Slots Name Cardinality and Range Description Inheritance url 0..1 Uriorcurie A web location direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource Usages used by used in type used Resource project_boards range ProjectBoard DataAsset project_boards range ProjectBoard Standard project_boards range ProjectBoard Tool project_boards range ProjectBoard Documentation project_boards range ProjectBoard ProjectBoard project_boards range ProjectBoard Repository project_boards range ProjectBoard ResourceRegistry project_boards range ProjectBoard Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation Mappings Mapping Type Mapped Value self mtd:ProjectBoard native mtd:ProjectBoard LinkML Source Direct name : ProjectBoard description : A reference to a project board, like a kanban board. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - url Induced name : ProjectBoard description : A reference to a project board, like a kanban board. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource attributes : url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : ProjectBoard domain_of : - Resource - ProjectBoard - Download range : uriorcurie id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : ProjectBoard domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : ProjectBoard domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : ProjectBoard domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : ProjectBoard domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : ProjectBoard domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : ProjectBoard domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : ProjectBoard domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : ProjectBoard domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : ProjectBoard domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : ProjectBoard domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : ProjectBoard domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : ProjectBoard domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : ProjectBoard domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : ProjectBoard domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : ProjectBoard domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : ProjectBoard domain_of : - Resource range : string website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : ProjectBoard domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : ProjectBoard domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : ProjectBoard domain_of : - Resource range : license_enum","title":"Class: ProjectBoard"},{"location":"Documentation-Schema/ProjectBoard/#class-projectboard","text":"A reference to a project board, like a kanban board. URI: mtd:ProjectBoard classDiagram class ProjectBoard Resource <|-- ProjectBoard ProjectBoard : citation ProjectBoard : contact ProjectBoard --> Contact : contact ProjectBoard : description ProjectBoard : documentation ProjectBoard : grants ProjectBoard --> grant_enum : grants ProjectBoard : icon ProjectBoard : icons_url ProjectBoard : id ProjectBoard : license ProjectBoard --> license_enum : license ProjectBoard : monarch_contribution ProjectBoard --> monarch_contribution_enum : monarch_contribution ProjectBoard : monarch_role ProjectBoard --> monarch_role_enum : monarch_role ProjectBoard : name ProjectBoard : project_boards ProjectBoard --> ProjectBoard : project_boards ProjectBoard : repository ProjectBoard : see_also ProjectBoard : short_name ProjectBoard : tagline ProjectBoard : url ProjectBoard : visual_explainer ProjectBoard : website_include","title":"Class: ProjectBoard"},{"location":"Documentation-Schema/ProjectBoard/#inheritance","text":"Resource ProjectBoard","title":"Inheritance"},{"location":"Documentation-Schema/ProjectBoard/#slots","text":"Name Cardinality and Range Description Inheritance url 0..1 Uriorcurie A web location direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource","title":"Slots"},{"location":"Documentation-Schema/ProjectBoard/#usages","text":"used by used in type used Resource project_boards range ProjectBoard DataAsset project_boards range ProjectBoard Standard project_boards range ProjectBoard Tool project_boards range ProjectBoard Documentation project_boards range ProjectBoard ProjectBoard project_boards range ProjectBoard Repository project_boards range ProjectBoard ResourceRegistry project_boards range ProjectBoard","title":"Usages"},{"location":"Documentation-Schema/ProjectBoard/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/ProjectBoard/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/ProjectBoard/#mappings","text":"Mapping Type Mapped Value self mtd:ProjectBoard native mtd:ProjectBoard","title":"Mappings"},{"location":"Documentation-Schema/ProjectBoard/#linkml-source","text":"","title":"LinkML Source"},{"location":"Documentation-Schema/ProjectBoard/#direct","text":"name : ProjectBoard description : A reference to a project board, like a kanban board. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - url","title":"Direct"},{"location":"Documentation-Schema/ProjectBoard/#induced","text":"name : ProjectBoard description : A reference to a project board, like a kanban board. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource attributes : url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : ProjectBoard domain_of : - Resource - ProjectBoard - Download range : uriorcurie id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : ProjectBoard domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : ProjectBoard domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : ProjectBoard domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : ProjectBoard domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : ProjectBoard domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : ProjectBoard domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : ProjectBoard domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : ProjectBoard domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : ProjectBoard domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : ProjectBoard domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : ProjectBoard domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : ProjectBoard domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : ProjectBoard domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : ProjectBoard domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : ProjectBoard domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : ProjectBoard domain_of : - Resource range : string website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : ProjectBoard domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : ProjectBoard domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : ProjectBoard domain_of : - Resource range : license_enum","title":"Induced"},{"location":"Documentation-Schema/ReleaseStatusEnum/","text":"Enum: ReleaseStatusEnum URI: ReleaseStatusEnum Permissible Values Value Meaning Description public None development snapshot None Slots Name Description release_status The maturity of the asset, e Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : release_status_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : public : text : public development snapshot : text : development snapshot","title":"Enum: ReleaseStatusEnum"},{"location":"Documentation-Schema/ReleaseStatusEnum/#enum-releasestatusenum","text":"URI: ReleaseStatusEnum","title":"Enum: ReleaseStatusEnum"},{"location":"Documentation-Schema/ReleaseStatusEnum/#permissible-values","text":"Value Meaning Description public None development snapshot None","title":"Permissible Values"},{"location":"Documentation-Schema/ReleaseStatusEnum/#slots","text":"Name Description release_status The maturity of the asset, e","title":"Slots"},{"location":"Documentation-Schema/ReleaseStatusEnum/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/ReleaseStatusEnum/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/ReleaseStatusEnum/#linkml-source","text":"name : release_status_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : public : text : public development snapshot : text : development snapshot","title":"LinkML Source"},{"location":"Documentation-Schema/Repository/","text":"Class: Repository A reference to a version control repository. URI: mtd:Repository classDiagram class Repository Resource <|-- Repository Repository : citation Repository : contact Repository --> Contact : contact Repository : depends_on Repository --> Repository : depends_on Repository : description Repository : documentation Repository : grants Repository --> grant_enum : grants Repository : icon Repository : icons_url Repository : id Repository : license Repository --> license_enum : license Repository : monarch_contribution Repository --> monarch_contribution_enum : monarch_contribution Repository : monarch_role Repository --> monarch_role_enum : monarch_role Repository : name Repository : organization Repository : project_boards Repository --> ProjectBoard : project_boards Repository : repo_url Repository : repository Repository : see_also Repository : short_name Repository : tagline Repository : url Repository : visual_explainer Repository : website_include Inheritance Resource Repository Slots Name Cardinality and Range Description Inheritance depends_on 0..1 Repository A list of packages a resource depends on direct repo_url 0..1 String (str) URL to direct organization 0..1 String direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource Usages used by used in type used Repository depends_on domain Repository Repository depends_on range Repository Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation Mappings Mapping Type Mapped Value self mtd:Repository native mtd:Repository LinkML Source Direct name : Repository description : A reference to a version control repository. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - depends_on - repo_url - organization Induced name : Repository description : A reference to a version control repository. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource attributes : depends_on : name : depends_on description : A list of packages a resource depends on from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 domain : Repository slot_uri : mtd:depends_on alias : depends_on owner : Repository domain_of : - Repository range : Repository repo_url : name : repo_url description : (str) URL to from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : mtd:repo_url alias : repo_url owner : Repository domain_of : - Repository range : string organization : name : organization from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : mtd:organization alias : organization owner : Repository domain_of : - Repository range : string id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : Repository domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Repository domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : Repository domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : Repository domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : Repository domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : Repository domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : Repository domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : Repository domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : Repository domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : Repository domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : Repository domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : Repository domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : Repository domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : Repository domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : Repository domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : Repository domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Repository domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : Repository domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : Repository domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : Repository domain_of : - Resource range : license_enum","title":"Class: Repository"},{"location":"Documentation-Schema/Repository/#class-repository","text":"A reference to a version control repository. URI: mtd:Repository classDiagram class Repository Resource <|-- Repository Repository : citation Repository : contact Repository --> Contact : contact Repository : depends_on Repository --> Repository : depends_on Repository : description Repository : documentation Repository : grants Repository --> grant_enum : grants Repository : icon Repository : icons_url Repository : id Repository : license Repository --> license_enum : license Repository : monarch_contribution Repository --> monarch_contribution_enum : monarch_contribution Repository : monarch_role Repository --> monarch_role_enum : monarch_role Repository : name Repository : organization Repository : project_boards Repository --> ProjectBoard : project_boards Repository : repo_url Repository : repository Repository : see_also Repository : short_name Repository : tagline Repository : url Repository : visual_explainer Repository : website_include","title":"Class: Repository"},{"location":"Documentation-Schema/Repository/#inheritance","text":"Resource Repository","title":"Inheritance"},{"location":"Documentation-Schema/Repository/#slots","text":"Name Cardinality and Range Description Inheritance depends_on 0..1 Repository A list of packages a resource depends on direct repo_url 0..1 String (str) URL to direct organization 0..1 String direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource","title":"Slots"},{"location":"Documentation-Schema/Repository/#usages","text":"used by used in type used Repository depends_on domain Repository Repository depends_on range Repository","title":"Usages"},{"location":"Documentation-Schema/Repository/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Repository/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Repository/#mappings","text":"Mapping Type Mapped Value self mtd:Repository native mtd:Repository","title":"Mappings"},{"location":"Documentation-Schema/Repository/#linkml-source","text":"","title":"LinkML Source"},{"location":"Documentation-Schema/Repository/#direct","text":"name : Repository description : A reference to a version control repository. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - depends_on - repo_url - organization","title":"Direct"},{"location":"Documentation-Schema/Repository/#induced","text":"name : Repository description : A reference to a version control repository. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource attributes : depends_on : name : depends_on description : A list of packages a resource depends on from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 domain : Repository slot_uri : mtd:depends_on alias : depends_on owner : Repository domain_of : - Repository range : Repository repo_url : name : repo_url description : (str) URL to from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : mtd:repo_url alias : repo_url owner : Repository domain_of : - Repository range : string organization : name : organization from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : mtd:organization alias : organization owner : Repository domain_of : - Repository range : string id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : Repository domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Repository domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : Repository domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : Repository domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : Repository domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : Repository domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : Repository domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : Repository domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : Repository domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : Repository domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : Repository domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : Repository domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : Repository domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : Repository domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : Repository domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : Repository domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Repository domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : Repository domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : Repository domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : Repository domain_of : - Resource range : license_enum","title":"Induced"},{"location":"Documentation-Schema/Resource/","text":"Class: Resource A generic grouping for any identifiable entity URI: schema:Thing classDiagram class Resource Resource <|-- DataAsset Resource <|-- Standard Resource <|-- Tool Resource <|-- Documentation Resource <|-- ProjectBoard Resource <|-- Repository Resource <|-- ResourceRegistry Resource : citation Resource : contact Resource --> Contact : contact Resource : description Resource : documentation Resource : grants Resource --> grant_enum : grants Resource : icon Resource : icons_url Resource : id Resource : license Resource --> license_enum : license Resource : monarch_contribution Resource --> monarch_contribution_enum : monarch_contribution Resource : monarch_role Resource --> monarch_role_enum : monarch_role Resource : name Resource : project_boards Resource --> ProjectBoard : project_boards Resource : repository Resource : see_also Resource : short_name Resource : tagline Resource : url Resource : visual_explainer Resource : website_include Inheritance Resource DataAsset Standard Tool Documentation ProjectBoard Repository ResourceRegistry Slots Name Cardinality and Range Description Inheritance id 1..1 Uriorcurie A unique identifier for a resource direct name 0..1 String A human-readable name for a resource direct short_name 0..1 String A short name for a resource direct description 0..1 String A human-readable description for a resource direct grants 0..* GrantEnum The grant used to finance the production of an asset direct documentation 0..1 Uriorcurie A URL to the documentation about this asset direct monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset direct repository 0..1 Uriorcurie The repository associated with this resource direct monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission direct citation 0..1 String A citation for the resource direct contact 0..1 Contact The person responsible for a resources direct project_boards 0..* ProjectBoard The project board associated with this resource direct icon 0..1 String An icon representing the asset direct icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset direct tagline 0..1 String A short tagline for the resource direct visual_explainer 0..1 String A visual abstract for the resource direct url 0..1 Uriorcurie A web location direct website_include 0..1 Boolean Flag if this resource should be shown on the website direct see_also 0..* Uriorcurie A list of related resources direct license 0..1 LicenseEnum A URL to the license direct Usages used by used in type used ResourceRegistry repositories range Resource Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation Mappings Mapping Type Mapped Value self schema:Thing native mtd:Resource LinkML Source Direct name : Resource description : A generic grouping for any identifiable entity from_schema : https://w3id.org/monarch-initiative/monarch-documentation slots : - id - name - short_name - description - grants - documentation - monarch_contribution - repository - monarch_role - citation - contact - project_boards - icon - icons_url - tagline - visual_explainer - url - website_include - see_also - license class_uri : schema:Thing Induced name : Resource description : A generic grouping for any identifiable entity from_schema : https://w3id.org/monarch-initiative/monarch-documentation attributes : id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : Resource domain_of : - Resource range : uriorcurie name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Resource domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : Resource domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : Resource domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : Resource domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : Resource domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : Resource domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : Resource domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : Resource domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : Resource domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : Resource domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : Resource domain_of : - Resource range : ProjectBoard inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : Resource domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : Resource domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : Resource domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : Resource domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Resource domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : Resource domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : Resource domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : Resource domain_of : - Resource range : license_enum class_uri : schema:Thing","title":"Class: Resource"},{"location":"Documentation-Schema/Resource/#class-resource","text":"A generic grouping for any identifiable entity URI: schema:Thing classDiagram class Resource Resource <|-- DataAsset Resource <|-- Standard Resource <|-- Tool Resource <|-- Documentation Resource <|-- ProjectBoard Resource <|-- Repository Resource <|-- ResourceRegistry Resource : citation Resource : contact Resource --> Contact : contact Resource : description Resource : documentation Resource : grants Resource --> grant_enum : grants Resource : icon Resource : icons_url Resource : id Resource : license Resource --> license_enum : license Resource : monarch_contribution Resource --> monarch_contribution_enum : monarch_contribution Resource : monarch_role Resource --> monarch_role_enum : monarch_role Resource : name Resource : project_boards Resource --> ProjectBoard : project_boards Resource : repository Resource : see_also Resource : short_name Resource : tagline Resource : url Resource : visual_explainer Resource : website_include","title":"Class: Resource"},{"location":"Documentation-Schema/Resource/#inheritance","text":"Resource DataAsset Standard Tool Documentation ProjectBoard Repository ResourceRegistry","title":"Inheritance"},{"location":"Documentation-Schema/Resource/#slots","text":"Name Cardinality and Range Description Inheritance id 1..1 Uriorcurie A unique identifier for a resource direct name 0..1 String A human-readable name for a resource direct short_name 0..1 String A short name for a resource direct description 0..1 String A human-readable description for a resource direct grants 0..* GrantEnum The grant used to finance the production of an asset direct documentation 0..1 Uriorcurie A URL to the documentation about this asset direct monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset direct repository 0..1 Uriorcurie The repository associated with this resource direct monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission direct citation 0..1 String A citation for the resource direct contact 0..1 Contact The person responsible for a resources direct project_boards 0..* ProjectBoard The project board associated with this resource direct icon 0..1 String An icon representing the asset direct icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset direct tagline 0..1 String A short tagline for the resource direct visual_explainer 0..1 String A visual abstract for the resource direct url 0..1 Uriorcurie A web location direct website_include 0..1 Boolean Flag if this resource should be shown on the website direct see_also 0..* Uriorcurie A list of related resources direct license 0..1 LicenseEnum A URL to the license direct","title":"Slots"},{"location":"Documentation-Schema/Resource/#usages","text":"used by used in type used ResourceRegistry repositories range Resource","title":"Usages"},{"location":"Documentation-Schema/Resource/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Resource/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Resource/#mappings","text":"Mapping Type Mapped Value self schema:Thing native mtd:Resource","title":"Mappings"},{"location":"Documentation-Schema/Resource/#linkml-source","text":"","title":"LinkML Source"},{"location":"Documentation-Schema/Resource/#direct","text":"name : Resource description : A generic grouping for any identifiable entity from_schema : https://w3id.org/monarch-initiative/monarch-documentation slots : - id - name - short_name - description - grants - documentation - monarch_contribution - repository - monarch_role - citation - contact - project_boards - icon - icons_url - tagline - visual_explainer - url - website_include - see_also - license class_uri : schema:Thing","title":"Direct"},{"location":"Documentation-Schema/Resource/#induced","text":"name : Resource description : A generic grouping for any identifiable entity from_schema : https://w3id.org/monarch-initiative/monarch-documentation attributes : id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : Resource domain_of : - Resource range : uriorcurie name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Resource domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : Resource domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : Resource domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : Resource domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : Resource domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : Resource domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : Resource domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : Resource domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : Resource domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : Resource domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : Resource domain_of : - Resource range : ProjectBoard inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : Resource domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : Resource domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : Resource domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : Resource domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Resource domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : Resource domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : Resource domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : Resource domain_of : - Resource range : license_enum class_uri : schema:Thing","title":"Induced"},{"location":"Documentation-Schema/ResourceRegistry/","text":"Class: ResourceRegistry A registry of different types of data assets URI: mtd:ResourceRegistry classDiagram class ResourceRegistry Resource <|-- ResourceRegistry ResourceRegistry : citation ResourceRegistry : contact ResourceRegistry --> Contact : contact ResourceRegistry : data ResourceRegistry --> DataAsset : data ResourceRegistry : description ResourceRegistry : documentation ResourceRegistry : documentations ResourceRegistry --> Documentation : documentations ResourceRegistry : grants ResourceRegistry --> grant_enum : grants ResourceRegistry : icon ResourceRegistry : icons_url ResourceRegistry : id ResourceRegistry : license ResourceRegistry --> license_enum : license ResourceRegistry : monarch_contribution ResourceRegistry --> monarch_contribution_enum : monarch_contribution ResourceRegistry : monarch_role ResourceRegistry --> monarch_role_enum : monarch_role ResourceRegistry : name ResourceRegistry : project_boards ResourceRegistry --> ProjectBoard : project_boards ResourceRegistry : repositories ResourceRegistry --> Resource : repositories ResourceRegistry : repository ResourceRegistry : see_also ResourceRegistry : short_name ResourceRegistry : standards ResourceRegistry --> Standard : standards ResourceRegistry : tagline ResourceRegistry : tools ResourceRegistry --> Tool : tools ResourceRegistry : url ResourceRegistry : visual_explainer ResourceRegistry : website_include Inheritance Resource ResourceRegistry Slots Name Cardinality and Range Description Inheritance name 0..1 String A human-readable name for a resource direct data 0..* DataAsset direct standards 0..* Standard direct tools 0..* Tool direct documentations 0..* Documentation direct repositories 0..* Resource direct id 1..1 Uriorcurie A unique identifier for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation Mappings Mapping Type Mapped Value self mtd:ResourceRegistry native mtd:ResourceRegistry LinkML Source Direct name : ResourceRegistry description : A registry of different types of data assets from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - name - data - standards - tools - documentations - repositories Induced name : ResourceRegistry description : A registry of different types of data assets from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource attributes : name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : ResourceRegistry domain_of : - Resource - ResourceRegistry - Contact range : string data : name : data from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : data owner : ResourceRegistry domain_of : - ResourceRegistry range : DataAsset inlined : true inlined_as_list : true standards : name : standards from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : standards owner : ResourceRegistry domain_of : - ResourceRegistry range : Standard inlined : true inlined_as_list : true tools : name : tools from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : tools owner : ResourceRegistry domain_of : - ResourceRegistry range : Tool inlined : true inlined_as_list : true documentations : name : documentations from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : documentations owner : ResourceRegistry domain_of : - ResourceRegistry range : Documentation inlined : true inlined_as_list : true repositories : name : repositories from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : repositories owner : ResourceRegistry domain_of : - ResourceRegistry range : Resource inlined : true inlined_as_list : true id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : ResourceRegistry domain_of : - Resource range : uriorcurie required : true short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : ResourceRegistry domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : ResourceRegistry domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : ResourceRegistry domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : ResourceRegistry domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : ResourceRegistry domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : ResourceRegistry domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : ResourceRegistry domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : ResourceRegistry domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : ResourceRegistry domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : ResourceRegistry domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : ResourceRegistry domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : ResourceRegistry domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : ResourceRegistry domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : ResourceRegistry domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : ResourceRegistry domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : ResourceRegistry domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : ResourceRegistry domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : ResourceRegistry domain_of : - Resource range : license_enum","title":"Class: ResourceRegistry"},{"location":"Documentation-Schema/ResourceRegistry/#class-resourceregistry","text":"A registry of different types of data assets URI: mtd:ResourceRegistry classDiagram class ResourceRegistry Resource <|-- ResourceRegistry ResourceRegistry : citation ResourceRegistry : contact ResourceRegistry --> Contact : contact ResourceRegistry : data ResourceRegistry --> DataAsset : data ResourceRegistry : description ResourceRegistry : documentation ResourceRegistry : documentations ResourceRegistry --> Documentation : documentations ResourceRegistry : grants ResourceRegistry --> grant_enum : grants ResourceRegistry : icon ResourceRegistry : icons_url ResourceRegistry : id ResourceRegistry : license ResourceRegistry --> license_enum : license ResourceRegistry : monarch_contribution ResourceRegistry --> monarch_contribution_enum : monarch_contribution ResourceRegistry : monarch_role ResourceRegistry --> monarch_role_enum : monarch_role ResourceRegistry : name ResourceRegistry : project_boards ResourceRegistry --> ProjectBoard : project_boards ResourceRegistry : repositories ResourceRegistry --> Resource : repositories ResourceRegistry : repository ResourceRegistry : see_also ResourceRegistry : short_name ResourceRegistry : standards ResourceRegistry --> Standard : standards ResourceRegistry : tagline ResourceRegistry : tools ResourceRegistry --> Tool : tools ResourceRegistry : url ResourceRegistry : visual_explainer ResourceRegistry : website_include","title":"Class: ResourceRegistry"},{"location":"Documentation-Schema/ResourceRegistry/#inheritance","text":"Resource ResourceRegistry","title":"Inheritance"},{"location":"Documentation-Schema/ResourceRegistry/#slots","text":"Name Cardinality and Range Description Inheritance name 0..1 String A human-readable name for a resource direct data 0..* DataAsset direct standards 0..* Standard direct tools 0..* Tool direct documentations 0..* Documentation direct repositories 0..* Resource direct id 1..1 Uriorcurie A unique identifier for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource","title":"Slots"},{"location":"Documentation-Schema/ResourceRegistry/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/ResourceRegistry/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/ResourceRegistry/#mappings","text":"Mapping Type Mapped Value self mtd:ResourceRegistry native mtd:ResourceRegistry","title":"Mappings"},{"location":"Documentation-Schema/ResourceRegistry/#linkml-source","text":"","title":"LinkML Source"},{"location":"Documentation-Schema/ResourceRegistry/#direct","text":"name : ResourceRegistry description : A registry of different types of data assets from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - name - data - standards - tools - documentations - repositories","title":"Direct"},{"location":"Documentation-Schema/ResourceRegistry/#induced","text":"name : ResourceRegistry description : A registry of different types of data assets from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource attributes : name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : ResourceRegistry domain_of : - Resource - ResourceRegistry - Contact range : string data : name : data from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : data owner : ResourceRegistry domain_of : - ResourceRegistry range : DataAsset inlined : true inlined_as_list : true standards : name : standards from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : standards owner : ResourceRegistry domain_of : - ResourceRegistry range : Standard inlined : true inlined_as_list : true tools : name : tools from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : tools owner : ResourceRegistry domain_of : - ResourceRegistry range : Tool inlined : true inlined_as_list : true documentations : name : documentations from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : documentations owner : ResourceRegistry domain_of : - ResourceRegistry range : Documentation inlined : true inlined_as_list : true repositories : name : repositories from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : repositories owner : ResourceRegistry domain_of : - ResourceRegistry range : Resource inlined : true inlined_as_list : true id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : ResourceRegistry domain_of : - Resource range : uriorcurie required : true short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : ResourceRegistry domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : ResourceRegistry domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : ResourceRegistry domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : ResourceRegistry domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : ResourceRegistry domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : ResourceRegistry domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : ResourceRegistry domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : ResourceRegistry domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : ResourceRegistry domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : ResourceRegistry domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : ResourceRegistry domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : ResourceRegistry domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : ResourceRegistry domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : ResourceRegistry domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : ResourceRegistry domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : ResourceRegistry domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : ResourceRegistry domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : ResourceRegistry domain_of : - Resource range : license_enum","title":"Induced"},{"location":"Documentation-Schema/Sparqlpath/","text":"Type: Sparqlpath A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF. URI: xsd:string base : str uri : xsd:string repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Sparqlpath"},{"location":"Documentation-Schema/Sparqlpath/#type-sparqlpath","text":"A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF. URI: xsd:string base : str uri : xsd:string repr : str","title":"Type: Sparqlpath"},{"location":"Documentation-Schema/Sparqlpath/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Sparqlpath/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Standard/","text":"Class: Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, consistency, and compatibility in various fields and practices. They are like the common languages or rulebooks that different parties use to ensure they understand each other and can work together efficiently. Standards include both exchange standards, like KGX or SSSOM, and ontologies, like HPO or Mondo. URI: mtd:Standard classDiagram class Standard Resource <|-- Standard Standard : category Standard --> standard_enum : category Standard : citation Standard : contact Standard --> Contact : contact Standard : description Standard : documentation Standard : grants Standard --> grant_enum : grants Standard : icon Standard : icons_url Standard : id Standard : license Standard --> license_enum : license Standard : monarch_contribution Standard --> monarch_contribution_enum : monarch_contribution Standard : monarch_role Standard --> monarch_role_enum : monarch_role Standard : name Standard : project_boards Standard --> ProjectBoard : project_boards Standard : repository Standard : see_also Standard : short_name Standard : tagline Standard : url Standard : visual_explainer Standard : website_include Inheritance Resource Standard Slots Name Cardinality and Range Description Inheritance category 1..1 StandardEnum Monarch asset category direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource Usages used by used in type used ResourceRegistry standards range Standard Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation Mappings Mapping Type Mapped Value self mtd:Standard native mtd:Standard LinkML Source Direct name : Standard description : Standards are agreed-upon conventions or guidelines that ensure uniformity, consistency, and compatibility in various fields and practices. They are like the common languages or rulebooks that different parties use to ensure they understand each other and can work together efficiently. Standards include both exchange standards, like KGX or SSSOM, and ontologies, like HPO or Mondo. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - category slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : standard_enum Induced name : Standard description : Standards are agreed-upon conventions or guidelines that ensure uniformity, consistency, and compatibility in various fields and practices. They are like the common languages or rulebooks that different parties use to ensure they understand each other and can work together efficiently. Standards include both exchange standards, like KGX or SSSOM, and ontologies, like HPO or Mondo. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : standard_enum attributes : category : name : category description : Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : category owner : Standard domain_of : - DataAsset - Standard - Tool - Documentation range : standard_enum required : true id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : Standard domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Standard domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : Standard domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : Standard domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : Standard domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : Standard domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : Standard domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : Standard domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : Standard domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : Standard domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : Standard domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : Standard domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : Standard domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : Standard domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : Standard domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : Standard domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Standard domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : Standard domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : Standard domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : Standard domain_of : - Resource range : license_enum","title":"Class: Standard"},{"location":"Documentation-Schema/Standard/#class-standard","text":"Standards are agreed-upon conventions or guidelines that ensure uniformity, consistency, and compatibility in various fields and practices. They are like the common languages or rulebooks that different parties use to ensure they understand each other and can work together efficiently. Standards include both exchange standards, like KGX or SSSOM, and ontologies, like HPO or Mondo. URI: mtd:Standard classDiagram class Standard Resource <|-- Standard Standard : category Standard --> standard_enum : category Standard : citation Standard : contact Standard --> Contact : contact Standard : description Standard : documentation Standard : grants Standard --> grant_enum : grants Standard : icon Standard : icons_url Standard : id Standard : license Standard --> license_enum : license Standard : monarch_contribution Standard --> monarch_contribution_enum : monarch_contribution Standard : monarch_role Standard --> monarch_role_enum : monarch_role Standard : name Standard : project_boards Standard --> ProjectBoard : project_boards Standard : repository Standard : see_also Standard : short_name Standard : tagline Standard : url Standard : visual_explainer Standard : website_include","title":"Class: Standard"},{"location":"Documentation-Schema/Standard/#inheritance","text":"Resource Standard","title":"Inheritance"},{"location":"Documentation-Schema/Standard/#slots","text":"Name Cardinality and Range Description Inheritance category 1..1 StandardEnum Monarch asset category direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource","title":"Slots"},{"location":"Documentation-Schema/Standard/#usages","text":"used by used in type used ResourceRegistry standards range Standard","title":"Usages"},{"location":"Documentation-Schema/Standard/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Standard/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Standard/#mappings","text":"Mapping Type Mapped Value self mtd:Standard native mtd:Standard","title":"Mappings"},{"location":"Documentation-Schema/Standard/#linkml-source","text":"","title":"LinkML Source"},{"location":"Documentation-Schema/Standard/#direct","text":"name : Standard description : Standards are agreed-upon conventions or guidelines that ensure uniformity, consistency, and compatibility in various fields and practices. They are like the common languages or rulebooks that different parties use to ensure they understand each other and can work together efficiently. Standards include both exchange standards, like KGX or SSSOM, and ontologies, like HPO or Mondo. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - category slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : standard_enum","title":"Direct"},{"location":"Documentation-Schema/Standard/#induced","text":"name : Standard description : Standards are agreed-upon conventions or guidelines that ensure uniformity, consistency, and compatibility in various fields and practices. They are like the common languages or rulebooks that different parties use to ensure they understand each other and can work together efficiently. Standards include both exchange standards, like KGX or SSSOM, and ontologies, like HPO or Mondo. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : standard_enum attributes : category : name : category description : Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : category owner : Standard domain_of : - DataAsset - Standard - Tool - Documentation range : standard_enum required : true id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : Standard domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Standard domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : Standard domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : Standard domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : Standard domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : Standard domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : Standard domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : Standard domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : Standard domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : Standard domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : Standard domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : Standard domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : Standard domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : Standard domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : Standard domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : Standard domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Standard domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : Standard domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : Standard domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : Standard domain_of : - Resource range : license_enum","title":"Induced"},{"location":"Documentation-Schema/StandardEnum/","text":"Enum: StandardEnum URI: StandardEnum Permissible Values Value Meaning Description Ontology None Data Standard None Data Exchange None Ontology Curation None Slots Name Description category Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : standard_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Ontology : text : Ontology Data Standard : text : Data Standard Data Exchange : text : Data Exchange Ontology Curation : text : Ontology Curation","title":"Enum: StandardEnum"},{"location":"Documentation-Schema/StandardEnum/#enum-standardenum","text":"URI: StandardEnum","title":"Enum: StandardEnum"},{"location":"Documentation-Schema/StandardEnum/#permissible-values","text":"Value Meaning Description Ontology None Data Standard None Data Exchange None Ontology Curation None","title":"Permissible Values"},{"location":"Documentation-Schema/StandardEnum/#slots","text":"Name Description category","title":"Slots"},{"location":"Documentation-Schema/StandardEnum/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/StandardEnum/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/StandardEnum/#linkml-source","text":"name : standard_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Ontology : text : Ontology Data Standard : text : Data Standard Data Exchange : text : Data Exchange Ontology Curation : text : Ontology Curation","title":"LinkML Source"},{"location":"Documentation-Schema/String/","text":"Type: String A character string URI: xsd:string base : str uri : xsd:string Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: String"},{"location":"Documentation-Schema/String/#type-string","text":"A character string URI: xsd:string base : str uri : xsd:string","title":"Type: String"},{"location":"Documentation-Schema/String/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/String/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Time/","text":"Type: Time A time object represents a (local) time of day, independent of any particular day URI: xsd:time base : XSDTime uri : xsd:time repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Time"},{"location":"Documentation-Schema/Time/#type-time","text":"A time object represents a (local) time of day, independent of any particular day URI: xsd:time base : XSDTime uri : xsd:time repr : str","title":"Type: Time"},{"location":"Documentation-Schema/Time/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Time/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Tool/","text":"Class: Tool A software tool is a computer program designed to help users perform specific tasks or functions, typically making complex or time-consuming processes more efficient and user-friendly. These tasks can range from simple data manipulation to sophisticated design and analysis. URI: mtd:Tool classDiagram class Tool Resource <|-- Tool Tool : category Tool --> tool_asset_enum : category Tool : citation Tool : contact Tool --> Contact : contact Tool : description Tool : documentation Tool : grants Tool --> grant_enum : grants Tool : icon Tool : icons_url Tool : id Tool : license Tool --> license_enum : license Tool : monarch_contribution Tool --> monarch_contribution_enum : monarch_contribution Tool : monarch_role Tool --> monarch_role_enum : monarch_role Tool : name Tool : project_boards Tool --> ProjectBoard : project_boards Tool : repository Tool : see_also Tool : short_name Tool : tagline Tool : url Tool : visual_explainer Tool : website_include Inheritance Resource Tool Slots Name Cardinality and Range Description Inheritance category 1..1 ToolAssetEnum Monarch asset category direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource Usages used by used in type used ResourceRegistry tools range Tool Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation Mappings Mapping Type Mapped Value self mtd:Tool native mtd:Tool LinkML Source Direct name : Tool description : A software tool is a computer program designed to help users perform specific tasks or functions, typically making complex or time-consuming processes more efficient and user-friendly. These tasks can range from simple data manipulation to sophisticated design and analysis. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - category slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : tool_asset_enum Induced name : Tool description : A software tool is a computer program designed to help users perform specific tasks or functions, typically making complex or time-consuming processes more efficient and user-friendly. These tasks can range from simple data manipulation to sophisticated design and analysis. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : tool_asset_enum attributes : category : name : category description : Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : category owner : Tool domain_of : - DataAsset - Standard - Tool - Documentation range : tool_asset_enum required : true id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : Tool domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Tool domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : Tool domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : Tool domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : Tool domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : Tool domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : Tool domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : Tool domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : Tool domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : Tool domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : Tool domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : Tool domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : Tool domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : Tool domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : Tool domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : Tool domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Tool domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : Tool domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : Tool domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : Tool domain_of : - Resource range : license_enum","title":"Class: Tool"},{"location":"Documentation-Schema/Tool/#class-tool","text":"A software tool is a computer program designed to help users perform specific tasks or functions, typically making complex or time-consuming processes more efficient and user-friendly. These tasks can range from simple data manipulation to sophisticated design and analysis. URI: mtd:Tool classDiagram class Tool Resource <|-- Tool Tool : category Tool --> tool_asset_enum : category Tool : citation Tool : contact Tool --> Contact : contact Tool : description Tool : documentation Tool : grants Tool --> grant_enum : grants Tool : icon Tool : icons_url Tool : id Tool : license Tool --> license_enum : license Tool : monarch_contribution Tool --> monarch_contribution_enum : monarch_contribution Tool : monarch_role Tool --> monarch_role_enum : monarch_role Tool : name Tool : project_boards Tool --> ProjectBoard : project_boards Tool : repository Tool : see_also Tool : short_name Tool : tagline Tool : url Tool : visual_explainer Tool : website_include","title":"Class: Tool"},{"location":"Documentation-Schema/Tool/#inheritance","text":"Resource Tool","title":"Inheritance"},{"location":"Documentation-Schema/Tool/#slots","text":"Name Cardinality and Range Description Inheritance category 1..1 ToolAssetEnum Monarch asset category direct id 1..1 Uriorcurie A unique identifier for a resource Resource name 0..1 String A human-readable name for a resource Resource short_name 0..1 String A short name for a resource Resource description 0..1 String A human-readable description for a resource Resource grants 0..* GrantEnum The grant used to finance the production of an asset Resource documentation 0..1 Uriorcurie A URL to the documentation about this asset Resource monarch_contribution 0..1 MonarchContributionEnum The role the Monarch Initiative plays in the maintainence of this asset Resource repository 0..1 Uriorcurie The repository associated with this resource Resource monarch_role 0..1 MonarchRoleEnum The strategic role the asset has for the Monarch core mission Resource citation 0..1 String A citation for the resource Resource contact 0..1 Contact The person responsible for a resources Resource project_boards 0..* ProjectBoard The project board associated with this resource Resource icon 0..1 String An icon representing the asset Resource icons_url 0..1 Uriorcurie A URL to an icon or set of icon representing the asset Resource tagline 0..1 String A short tagline for the resource Resource visual_explainer 0..1 String A visual abstract for the resource Resource url 0..1 Uriorcurie A web location Resource website_include 0..1 Boolean Flag if this resource should be shown on the website Resource see_also 0..* Uriorcurie A list of related resources Resource license 0..1 LicenseEnum A URL to the license Resource","title":"Slots"},{"location":"Documentation-Schema/Tool/#usages","text":"used by used in type used ResourceRegistry tools range Tool","title":"Usages"},{"location":"Documentation-Schema/Tool/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Tool/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Tool/#mappings","text":"Mapping Type Mapped Value self mtd:Tool native mtd:Tool","title":"Mappings"},{"location":"Documentation-Schema/Tool/#linkml-source","text":"","title":"LinkML Source"},{"location":"Documentation-Schema/Tool/#direct","text":"name : Tool description : A software tool is a computer program designed to help users perform specific tasks or functions, typically making complex or time-consuming processes more efficient and user-friendly. These tasks can range from simple data manipulation to sophisticated design and analysis. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slots : - category slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : tool_asset_enum","title":"Direct"},{"location":"Documentation-Schema/Tool/#induced","text":"name : Tool description : A software tool is a computer program designed to help users perform specific tasks or functions, typically making complex or time-consuming processes more efficient and user-friendly. These tasks can range from simple data manipulation to sophisticated design and analysis. from_schema : https://w3id.org/monarch-initiative/monarch-documentation is_a : Resource slot_usage : category : name : category domain_of : - DataAsset - Standard - Tool - Documentation range : tool_asset_enum attributes : category : name : category description : Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : category owner : Tool domain_of : - DataAsset - Standard - Tool - Documentation range : tool_asset_enum required : true id : name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id owner : Tool domain_of : - Resource range : uriorcurie required : true name : name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name owner : Tool domain_of : - Resource - ResourceRegistry - Contact range : string short_name : name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name owner : Tool domain_of : - Resource range : string description : name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description owner : Tool domain_of : - Resource range : string grants : name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants owner : Tool domain_of : - Resource range : grant_enum documentation : name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation owner : Tool domain_of : - Resource range : uriorcurie monarch_contribution : name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution owner : Tool domain_of : - Resource range : monarch_contribution_enum repository : name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository owner : Tool domain_of : - Resource range : uriorcurie monarch_role : name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role owner : Tool domain_of : - Resource range : monarch_role_enum citation : name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation owner : Tool domain_of : - Resource range : string contact : name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact owner : Tool domain_of : - Resource range : Contact project_boards : name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards owner : Tool domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true icon : name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon owner : Tool domain_of : - Resource range : string icons_url : name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url owner : Tool domain_of : - Resource range : uriorcurie tagline : name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline owner : Tool domain_of : - Resource range : string visual_explainer : name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer owner : Tool domain_of : - Resource range : string url : name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url owner : Tool domain_of : - Resource - ProjectBoard - Download range : uriorcurie website_include : name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include owner : Tool domain_of : - Resource range : boolean see_also : name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also owner : Tool domain_of : - Resource range : uriorcurie license : name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license owner : Tool domain_of : - Resource range : license_enum","title":"Induced"},{"location":"Documentation-Schema/ToolAssetEnum/","text":"Enum: ToolAssetEnum URI: ToolAssetEnum Permissible Values Value Meaning Description Clinical Diagnosis None Ontology Maintenance None Ontology Use None Mapping None Data Curation None Benchmarking None Registry None Slots Name Description category Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : tool_asset_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Clinical Diagnosis : text : Clinical Diagnosis Ontology Maintenance : text : Ontology Maintenance Ontology Use : text : Ontology Use Mapping : text : Mapping Data Curation : text : Data Curation Benchmarking : text : Benchmarking Registry : text : Registry","title":"Enum: ToolAssetEnum"},{"location":"Documentation-Schema/ToolAssetEnum/#enum-toolassetenum","text":"URI: ToolAssetEnum","title":"Enum: ToolAssetEnum"},{"location":"Documentation-Schema/ToolAssetEnum/#permissible-values","text":"Value Meaning Description Clinical Diagnosis None Ontology Maintenance None Ontology Use None Mapping None Data Curation None Benchmarking None Registry None","title":"Permissible Values"},{"location":"Documentation-Schema/ToolAssetEnum/#slots","text":"Name Description category","title":"Slots"},{"location":"Documentation-Schema/ToolAssetEnum/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/ToolAssetEnum/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/ToolAssetEnum/#linkml-source","text":"name : tool_asset_enum from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 permissible_values : Clinical Diagnosis : text : Clinical Diagnosis Ontology Maintenance : text : Ontology Maintenance Ontology Use : text : Ontology Use Mapping : text : Mapping Data Curation : text : Data Curation Benchmarking : text : Benchmarking Registry : text : Registry","title":"LinkML Source"},{"location":"Documentation-Schema/Uri/","text":"Type: Uri a complete URI URI: xsd:anyURI base : URI uri : xsd:anyURI repr : str Comments in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Uri"},{"location":"Documentation-Schema/Uri/#type-uri","text":"a complete URI URI: xsd:anyURI base : URI uri : xsd:anyURI repr : str","title":"Type: Uri"},{"location":"Documentation-Schema/Uri/#comments","text":"in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node","title":"Comments"},{"location":"Documentation-Schema/Uri/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Uri/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/Uriorcurie/","text":"Type: Uriorcurie a URI or a CURIE URI: xsd:anyURI base : URIorCURIE uri : xsd:anyURI repr : str Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Type: Uriorcurie"},{"location":"Documentation-Schema/Uriorcurie/#type-uriorcurie","text":"a URI or a CURIE URI: xsd:anyURI base : URIorCURIE uri : xsd:anyURI repr : str","title":"Type: Uriorcurie"},{"location":"Documentation-Schema/Uriorcurie/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/Uriorcurie/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/category/","text":"Slot: category Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. URI: mtd:category Applicable Classes Name Description Modifies Slot DataAsset A data asset is a resource that contains data, either manually curated, or ge... yes Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... yes Tool A software tool is a computer program designed to help users perform specific... yes Documentation A resource that contains documentation, like a wiki, a webpage with training ... yes Properties Range: String Required: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : category description : Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : category domain_of : - DataAsset - Standard - Tool - Documentation range : string required : true","title":"Slot: category"},{"location":"Documentation-Schema/category/#slot-category","text":"Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. URI: mtd:category","title":"Slot: category"},{"location":"Documentation-Schema/category/#applicable-classes","text":"Name Description Modifies Slot DataAsset A data asset is a resource that contains data, either manually curated, or ge... yes Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... yes Tool A software tool is a computer program designed to help users perform specific... yes Documentation A resource that contains documentation, like a wiki, a webpage with training ... yes","title":"Applicable Classes"},{"location":"Documentation-Schema/category/#properties","text":"Range: String Required: True","title":"Properties"},{"location":"Documentation-Schema/category/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/category/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/category/#linkml-source","text":"name : category description : Monarch asset category. This allows grouping related assets (like data assets) together in sensible categories. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : category domain_of : - DataAsset - Standard - Tool - Documentation range : string required : true","title":"LinkML Source"},{"location":"Documentation-Schema/citation/","text":"Slot: citation A citation for the resource URI: mtd:citation Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation domain_of : - Resource range : string","title":"Slot: citation"},{"location":"Documentation-Schema/citation/#slot-citation","text":"A citation for the resource URI: mtd:citation","title":"Slot: citation"},{"location":"Documentation-Schema/citation/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/citation/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/citation/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/citation/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/citation/#linkml-source","text":"name : citation description : A citation for the resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : citation domain_of : - Resource range : string","title":"LinkML Source"},{"location":"Documentation-Schema/contact/","text":"Slot: contact The person responsible for a resources. URI: mtd:contact Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: Contact Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact domain_of : - Resource range : Contact","title":"Slot: contact"},{"location":"Documentation-Schema/contact/#slot-contact","text":"The person responsible for a resources. URI: mtd:contact","title":"Slot: contact"},{"location":"Documentation-Schema/contact/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/contact/#properties","text":"Range: Contact","title":"Properties"},{"location":"Documentation-Schema/contact/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/contact/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/contact/#linkml-source","text":"name : contact description : The person responsible for a resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : contact domain_of : - Resource range : Contact","title":"LinkML Source"},{"location":"Documentation-Schema/data/","text":"Slot: data URI: mtd:data Applicable Classes Name Description Modifies Slot ResourceRegistry A registry of different types of data assets no Properties Range: DataAsset Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : data from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : data domain_of : - ResourceRegistry range : DataAsset inlined : true inlined_as_list : true","title":"Slot: data"},{"location":"Documentation-Schema/data/#slot-data","text":"URI: mtd:data","title":"Slot: data"},{"location":"Documentation-Schema/data/#applicable-classes","text":"Name Description Modifies Slot ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/data/#properties","text":"Range: DataAsset Multivalued: True","title":"Properties"},{"location":"Documentation-Schema/data/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/data/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/data/#linkml-source","text":"name : data from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : data domain_of : - ResourceRegistry range : DataAsset inlined : true inlined_as_list : true","title":"LinkML Source"},{"location":"Documentation-Schema/depends_on/","text":"Slot: depends_on A list of packages a resource depends on URI: mtd:depends_on Applicable Classes Name Description Modifies Slot Repository A reference to a version control repository no Properties Range: Repository Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : depends_on description : A list of packages a resource depends on from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 domain : Repository slot_uri : mtd:depends_on alias : depends_on domain_of : - Repository range : Repository","title":"Slot: depends_on"},{"location":"Documentation-Schema/depends_on/#slot-depends_on","text":"A list of packages a resource depends on URI: mtd:depends_on","title":"Slot: depends_on"},{"location":"Documentation-Schema/depends_on/#applicable-classes","text":"Name Description Modifies Slot Repository A reference to a version control repository no","title":"Applicable Classes"},{"location":"Documentation-Schema/depends_on/#properties","text":"Range: Repository","title":"Properties"},{"location":"Documentation-Schema/depends_on/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/depends_on/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/depends_on/#linkml-source","text":"name : depends_on description : A list of packages a resource depends on from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 domain : Repository slot_uri : mtd:depends_on alias : depends_on domain_of : - Repository range : Repository","title":"LinkML Source"},{"location":"Documentation-Schema/description/","text":"Slot: description A human-readable description for a resource URI: schema:description Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description domain_of : - Resource range : string","title":"Slot: description"},{"location":"Documentation-Schema/description/#slot-description","text":"A human-readable description for a resource URI: schema:description","title":"Slot: description"},{"location":"Documentation-Schema/description/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/description/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/description/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/description/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/description/#linkml-source","text":"name : description description : A human-readable description for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:description alias : description domain_of : - Resource range : string","title":"LinkML Source"},{"location":"Documentation-Schema/documentation/","text":"Slot: documentation A URL to the documentation about this asset. URI: mtd:documentation Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: Uriorcurie Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation domain_of : - Resource range : uriorcurie","title":"Slot: documentation"},{"location":"Documentation-Schema/documentation/#slot-documentation","text":"A URL to the documentation about this asset. URI: mtd:documentation","title":"Slot: documentation"},{"location":"Documentation-Schema/documentation/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/documentation/#properties","text":"Range: Uriorcurie","title":"Properties"},{"location":"Documentation-Schema/documentation/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/documentation/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/documentation/#linkml-source","text":"name : documentation description : A URL to the documentation about this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : documentation domain_of : - Resource range : uriorcurie","title":"LinkML Source"},{"location":"Documentation-Schema/documentations/","text":"Slot: documentations URI: mtd:documentations Applicable Classes Name Description Modifies Slot ResourceRegistry A registry of different types of data assets no Properties Range: Documentation Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : documentations from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : documentations domain_of : - ResourceRegistry range : Documentation inlined : true inlined_as_list : true","title":"Slot: documentations"},{"location":"Documentation-Schema/documentations/#slot-documentations","text":"URI: mtd:documentations","title":"Slot: documentations"},{"location":"Documentation-Schema/documentations/#applicable-classes","text":"Name Description Modifies Slot ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/documentations/#properties","text":"Range: Documentation Multivalued: True","title":"Properties"},{"location":"Documentation-Schema/documentations/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/documentations/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/documentations/#linkml-source","text":"name : documentations from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : documentations domain_of : - ResourceRegistry range : Documentation inlined : true inlined_as_list : true","title":"LinkML Source"},{"location":"Documentation-Schema/download/","text":"Slot: download The web location this asset can be obtained from. URI: mtd:download Applicable Classes Name Description Modifies Slot DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Properties Range: Download Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : download description : The web location this asset can be obtained from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : download domain_of : - DataAsset range : Download","title":"Slot: download"},{"location":"Documentation-Schema/download/#slot-download","text":"The web location this asset can be obtained from. URI: mtd:download","title":"Slot: download"},{"location":"Documentation-Schema/download/#applicable-classes","text":"Name Description Modifies Slot DataAsset A data asset is a resource that contains data, either manually curated, or ge... no","title":"Applicable Classes"},{"location":"Documentation-Schema/download/#properties","text":"Range: Download Multivalued: True","title":"Properties"},{"location":"Documentation-Schema/download/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/download/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/download/#linkml-source","text":"name : download description : The web location this asset can be obtained from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : download domain_of : - DataAsset range : Download","title":"LinkML Source"},{"location":"Documentation-Schema/email/","text":"Slot: email The email of the contact. URI: mtd:email Applicable Classes Name Description Modifies Slot Contact The person responsible for a resources no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : email description : The email of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : email domain_of : - Contact range : string","title":"Slot: email"},{"location":"Documentation-Schema/email/#slot-email","text":"The email of the contact. URI: mtd:email","title":"Slot: email"},{"location":"Documentation-Schema/email/#applicable-classes","text":"Name Description Modifies Slot Contact The person responsible for a resources no","title":"Applicable Classes"},{"location":"Documentation-Schema/email/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/email/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/email/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/email/#linkml-source","text":"name : email description : The email of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : email domain_of : - Contact range : string","title":"LinkML Source"},{"location":"Documentation-Schema/file_format/","text":"Slot: file_format The format of the file. URI: mtd:file_format Applicable Classes Name Description Modifies Slot Download A downloadable asset, i no Properties Range: FileFormatEnum Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : file_format description : The format of the file. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : file_format domain_of : - Download range : file_format_enum","title":"Slot: file_format"},{"location":"Documentation-Schema/file_format/#slot-file_format","text":"The format of the file. URI: mtd:file_format","title":"Slot: file_format"},{"location":"Documentation-Schema/file_format/#applicable-classes","text":"Name Description Modifies Slot Download A downloadable asset, i no","title":"Applicable Classes"},{"location":"Documentation-Schema/file_format/#properties","text":"Range: FileFormatEnum","title":"Properties"},{"location":"Documentation-Schema/file_format/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/file_format/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/file_format/#linkml-source","text":"name : file_format description : The format of the file. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : file_format domain_of : - Download range : file_format_enum","title":"LinkML Source"},{"location":"Documentation-Schema/github/","text":"Slot: github The GitHub handle of the contact. URI: mtd:github Applicable Classes Name Description Modifies Slot Contact The person responsible for a resources no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : github description : The GitHub handle of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : github domain_of : - Contact range : string","title":"Slot: github"},{"location":"Documentation-Schema/github/#slot-github","text":"The GitHub handle of the contact. URI: mtd:github","title":"Slot: github"},{"location":"Documentation-Schema/github/#applicable-classes","text":"Name Description Modifies Slot Contact The person responsible for a resources no","title":"Applicable Classes"},{"location":"Documentation-Schema/github/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/github/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/github/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/github/#linkml-source","text":"name : github description : The GitHub handle of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : github domain_of : - Contact range : string","title":"LinkML Source"},{"location":"Documentation-Schema/grants/","text":"Slot: grants The grant used to finance the production of an asset. URI: mtd:grants Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: GrantEnum Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants domain_of : - Resource range : grant_enum","title":"Slot: grants"},{"location":"Documentation-Schema/grants/#slot-grants","text":"The grant used to finance the production of an asset. URI: mtd:grants","title":"Slot: grants"},{"location":"Documentation-Schema/grants/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/grants/#properties","text":"Range: GrantEnum Multivalued: True","title":"Properties"},{"location":"Documentation-Schema/grants/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/grants/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/grants/#linkml-source","text":"name : grants description : The grant used to finance the production of an asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : grants domain_of : - Resource range : grant_enum","title":"LinkML Source"},{"location":"Documentation-Schema/icon/","text":"Slot: icon An icon representing the asset. URI: mtd:icon Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon domain_of : - Resource range : string","title":"Slot: icon"},{"location":"Documentation-Schema/icon/#slot-icon","text":"An icon representing the asset. URI: mtd:icon","title":"Slot: icon"},{"location":"Documentation-Schema/icon/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/icon/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/icon/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/icon/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/icon/#linkml-source","text":"name : icon description : An icon representing the asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icon domain_of : - Resource range : string","title":"LinkML Source"},{"location":"Documentation-Schema/icons_url/","text":"Slot: icons_url A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. URI: mtd:icons_url Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: Uriorcurie Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url domain_of : - Resource range : uriorcurie","title":"Slot: icons_url"},{"location":"Documentation-Schema/icons_url/#slot-icons_url","text":"A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. URI: mtd:icons_url","title":"Slot: icons_url"},{"location":"Documentation-Schema/icons_url/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/icons_url/#properties","text":"Range: Uriorcurie","title":"Properties"},{"location":"Documentation-Schema/icons_url/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/icons_url/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/icons_url/#linkml-source","text":"name : icons_url description : A URL to an icon or set of icon representing the asset. We dont expect this to resolve to a specific icon, more to the place where to get the icons from. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : icons_url domain_of : - Resource range : uriorcurie","title":"LinkML Source"},{"location":"Documentation-Schema/id/","text":"Slot: id A unique identifier for a resource URI: schema:identifier Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: Uriorcurie Required: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id domain_of : - Resource range : uriorcurie required : true","title":"Slot: id"},{"location":"Documentation-Schema/id/#slot-id","text":"A unique identifier for a resource URI: schema:identifier","title":"Slot: id"},{"location":"Documentation-Schema/id/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/id/#properties","text":"Range: Uriorcurie Required: True","title":"Properties"},{"location":"Documentation-Schema/id/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/id/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/id/#linkml-source","text":"name : id description : A unique identifier for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:identifier identifier : true alias : id domain_of : - Resource range : uriorcurie required : true","title":"LinkML Source"},{"location":"Documentation-Schema/license/","text":"Slot: license A URL to the license. URI: mtd:license Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: LicenseEnum Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license domain_of : - Resource range : license_enum","title":"Slot: license"},{"location":"Documentation-Schema/license/#slot-license","text":"A URL to the license. URI: mtd:license","title":"Slot: license"},{"location":"Documentation-Schema/license/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/license/#properties","text":"Range: LicenseEnum","title":"Properties"},{"location":"Documentation-Schema/license/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/license/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/license/#linkml-source","text":"name : license description : A URL to the license. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : license domain_of : - Resource range : license_enum","title":"LinkML Source"},{"location":"Documentation-Schema/monarch-documentation-schema/","text":"monarch-documentation-schema Technical documentation for all Monarch applications, packages, services and related projects. URI: https://w3id.org/monarch-initiative/monarch-documentation","title":"monarch-documentation-schema"},{"location":"Documentation-Schema/monarch-documentation-schema/#monarch-documentation-schema","text":"Technical documentation for all Monarch applications, packages, services and related projects. URI: https://w3id.org/monarch-initiative/monarch-documentation","title":"monarch-documentation-schema"},{"location":"Documentation-Schema/monarch_contribution/","text":"Slot: monarch_contribution The role the Monarch Initiative plays in the maintainence of this asset. URI: mtd:monarch_contribution Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: MonarchContributionEnum Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution domain_of : - Resource range : monarch_contribution_enum","title":"Slot: monarch_contribution"},{"location":"Documentation-Schema/monarch_contribution/#slot-monarch_contribution","text":"The role the Monarch Initiative plays in the maintainence of this asset. URI: mtd:monarch_contribution","title":"Slot: monarch_contribution"},{"location":"Documentation-Schema/monarch_contribution/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/monarch_contribution/#properties","text":"Range: MonarchContributionEnum","title":"Properties"},{"location":"Documentation-Schema/monarch_contribution/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/monarch_contribution/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/monarch_contribution/#linkml-source","text":"name : monarch_contribution description : The role the Monarch Initiative plays in the maintainence of this asset. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_contribution domain_of : - Resource range : monarch_contribution_enum","title":"LinkML Source"},{"location":"Documentation-Schema/monarch_role/","text":"Slot: monarch_role The strategic role the asset has for the Monarch core mission. URI: mtd:monarch_role Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: MonarchRoleEnum Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role domain_of : - Resource range : monarch_role_enum","title":"Slot: monarch_role"},{"location":"Documentation-Schema/monarch_role/#slot-monarch_role","text":"The strategic role the asset has for the Monarch core mission. URI: mtd:monarch_role","title":"Slot: monarch_role"},{"location":"Documentation-Schema/monarch_role/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/monarch_role/#properties","text":"Range: MonarchRoleEnum","title":"Properties"},{"location":"Documentation-Schema/monarch_role/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/monarch_role/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/monarch_role/#linkml-source","text":"name : monarch_role description : The strategic role the asset has for the Monarch core mission. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : monarch_role domain_of : - Resource range : monarch_role_enum","title":"LinkML Source"},{"location":"Documentation-Schema/name/","text":"Slot: name A human-readable name for a resource URI: schema:name Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no ResourceRegistry A registry of different types of data assets no Contact The person responsible for a resources no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name domain_of : - Resource - ResourceRegistry - Contact range : string","title":"Slot: name"},{"location":"Documentation-Schema/name/#slot-name","text":"A human-readable name for a resource URI: schema:name","title":"Slot: name"},{"location":"Documentation-Schema/name/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no ResourceRegistry A registry of different types of data assets no Contact The person responsible for a resources no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no","title":"Applicable Classes"},{"location":"Documentation-Schema/name/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/name/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/name/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/name/#linkml-source","text":"name : name description : A human-readable name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : schema:name alias : name domain_of : - Resource - ResourceRegistry - Contact range : string","title":"LinkML Source"},{"location":"Documentation-Schema/orcid/","text":"Slot: orcid The ORCID of the contact. URI: mtd:orcid Applicable Classes Name Description Modifies Slot Contact The person responsible for a resources no Properties Range: Uriorcurie Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : orcid description : The ORCID of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : orcid domain_of : - Contact range : uriorcurie","title":"Slot: orcid"},{"location":"Documentation-Schema/orcid/#slot-orcid","text":"The ORCID of the contact. URI: mtd:orcid","title":"Slot: orcid"},{"location":"Documentation-Schema/orcid/#applicable-classes","text":"Name Description Modifies Slot Contact The person responsible for a resources no","title":"Applicable Classes"},{"location":"Documentation-Schema/orcid/#properties","text":"Range: Uriorcurie","title":"Properties"},{"location":"Documentation-Schema/orcid/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/orcid/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/orcid/#linkml-source","text":"name : orcid description : The ORCID of the contact. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : orcid domain_of : - Contact range : uriorcurie","title":"LinkML Source"},{"location":"Documentation-Schema/organization/","text":"Slot: organization URI: mtd:organization Applicable Classes Name Description Modifies Slot Repository A reference to a version control repository no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : organization from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : mtd:organization alias : organization domain_of : - Repository range : string","title":"Slot: organization"},{"location":"Documentation-Schema/organization/#slot-organization","text":"URI: mtd:organization","title":"Slot: organization"},{"location":"Documentation-Schema/organization/#applicable-classes","text":"Name Description Modifies Slot Repository A reference to a version control repository no","title":"Applicable Classes"},{"location":"Documentation-Schema/organization/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/organization/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/organization/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/organization/#linkml-source","text":"name : organization from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : mtd:organization alias : organization domain_of : - Repository range : string","title":"LinkML Source"},{"location":"Documentation-Schema/project_boards/","text":"Slot: project_boards The project board associated with this resource URI: mtd:project_boards Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: ProjectBoard Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true","title":"Slot: project_boards"},{"location":"Documentation-Schema/project_boards/#slot-project_boards","text":"The project board associated with this resource URI: mtd:project_boards","title":"Slot: project_boards"},{"location":"Documentation-Schema/project_boards/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/project_boards/#properties","text":"Range: ProjectBoard Multivalued: True","title":"Properties"},{"location":"Documentation-Schema/project_boards/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/project_boards/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/project_boards/#linkml-source","text":"name : project_boards description : The project board associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : project_boards domain_of : - Resource range : ProjectBoard inlined : true inlined_as_list : true","title":"LinkML Source"},{"location":"Documentation-Schema/release_status/","text":"Slot: release_status The maturity of the asset, e.g. whether it is under development, or public. URI: mtd:release_status Applicable Classes Name Description Modifies Slot Download A downloadable asset, i no Properties Range: ReleaseStatusEnum Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : release_status description : The maturity of the asset, e.g. whether it is under development, or public. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : release_status domain_of : - Download range : release_status_enum","title":"Slot: release_status"},{"location":"Documentation-Schema/release_status/#slot-release_status","text":"The maturity of the asset, e.g. whether it is under development, or public. URI: mtd:release_status","title":"Slot: release_status"},{"location":"Documentation-Schema/release_status/#applicable-classes","text":"Name Description Modifies Slot Download A downloadable asset, i no","title":"Applicable Classes"},{"location":"Documentation-Schema/release_status/#properties","text":"Range: ReleaseStatusEnum","title":"Properties"},{"location":"Documentation-Schema/release_status/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/release_status/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/release_status/#linkml-source","text":"name : release_status description : The maturity of the asset, e.g. whether it is under development, or public. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : release_status domain_of : - Download range : release_status_enum","title":"LinkML Source"},{"location":"Documentation-Schema/repo_url/","text":"Slot: repo_url (str) URL to URI: mtd:repo_url Applicable Classes Name Description Modifies Slot Repository A reference to a version control repository no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : repo_url description : (str) URL to from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : mtd:repo_url alias : repo_url domain_of : - Repository range : string","title":"Slot: repo_url"},{"location":"Documentation-Schema/repo_url/#slot-repo_url","text":"(str) URL to URI: mtd:repo_url","title":"Slot: repo_url"},{"location":"Documentation-Schema/repo_url/#applicable-classes","text":"Name Description Modifies Slot Repository A reference to a version control repository no","title":"Applicable Classes"},{"location":"Documentation-Schema/repo_url/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/repo_url/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/repo_url/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/repo_url/#linkml-source","text":"name : repo_url description : (str) URL to from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 slot_uri : mtd:repo_url alias : repo_url domain_of : - Repository range : string","title":"LinkML Source"},{"location":"Documentation-Schema/repositories/","text":"Slot: repositories URI: mtd:repositories Applicable Classes Name Description Modifies Slot ResourceRegistry A registry of different types of data assets no Properties Range: Resource Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : repositories from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : repositories domain_of : - ResourceRegistry range : Resource inlined : true inlined_as_list : true","title":"Slot: repositories"},{"location":"Documentation-Schema/repositories/#slot-repositories","text":"URI: mtd:repositories","title":"Slot: repositories"},{"location":"Documentation-Schema/repositories/#applicable-classes","text":"Name Description Modifies Slot ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/repositories/#properties","text":"Range: Resource Multivalued: True","title":"Properties"},{"location":"Documentation-Schema/repositories/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/repositories/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/repositories/#linkml-source","text":"name : repositories from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : repositories domain_of : - ResourceRegistry range : Resource inlined : true inlined_as_list : true","title":"LinkML Source"},{"location":"Documentation-Schema/repository/","text":"Slot: repository The repository associated with this resource URI: mtd:repository Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: Uriorcurie Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository domain_of : - Resource range : uriorcurie","title":"Slot: repository"},{"location":"Documentation-Schema/repository/#slot-repository","text":"The repository associated with this resource URI: mtd:repository","title":"Slot: repository"},{"location":"Documentation-Schema/repository/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/repository/#properties","text":"Range: Uriorcurie","title":"Properties"},{"location":"Documentation-Schema/repository/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/repository/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/repository/#linkml-source","text":"name : repository description : The repository associated with this resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : repository domain_of : - Resource range : uriorcurie","title":"LinkML Source"},{"location":"Documentation-Schema/see_also/","text":"Slot: see_also A list of related resources. URI: mtd:see_also Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: Uriorcurie Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also domain_of : - Resource range : uriorcurie","title":"Slot: see_also"},{"location":"Documentation-Schema/see_also/#slot-see_also","text":"A list of related resources. URI: mtd:see_also","title":"Slot: see_also"},{"location":"Documentation-Schema/see_also/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/see_also/#properties","text":"Range: Uriorcurie Multivalued: True","title":"Properties"},{"location":"Documentation-Schema/see_also/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/see_also/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/see_also/#linkml-source","text":"name : see_also description : A list of related resources. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : see_also domain_of : - Resource range : uriorcurie","title":"LinkML Source"},{"location":"Documentation-Schema/short_name/","text":"Slot: short_name A short name for a resource URI: mtd:short_name Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name domain_of : - Resource range : string","title":"Slot: short_name"},{"location":"Documentation-Schema/short_name/#slot-short_name","text":"A short name for a resource URI: mtd:short_name","title":"Slot: short_name"},{"location":"Documentation-Schema/short_name/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/short_name/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/short_name/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/short_name/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/short_name/#linkml-source","text":"name : short_name description : A short name for a resource from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : short_name domain_of : - Resource range : string","title":"LinkML Source"},{"location":"Documentation-Schema/standards/","text":"Slot: standards URI: mtd:standards Applicable Classes Name Description Modifies Slot ResourceRegistry A registry of different types of data assets no Properties Range: Standard Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : standards from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : standards domain_of : - ResourceRegistry range : Standard inlined : true inlined_as_list : true","title":"Slot: standards"},{"location":"Documentation-Schema/standards/#slot-standards","text":"URI: mtd:standards","title":"Slot: standards"},{"location":"Documentation-Schema/standards/#applicable-classes","text":"Name Description Modifies Slot ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/standards/#properties","text":"Range: Standard Multivalued: True","title":"Properties"},{"location":"Documentation-Schema/standards/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/standards/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/standards/#linkml-source","text":"name : standards from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : standards domain_of : - ResourceRegistry range : Standard inlined : true inlined_as_list : true","title":"LinkML Source"},{"location":"Documentation-Schema/tagline/","text":"Slot: tagline A short tagline for the resource. URI: mtd:tagline Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline domain_of : - Resource range : string","title":"Slot: tagline"},{"location":"Documentation-Schema/tagline/#slot-tagline","text":"A short tagline for the resource. URI: mtd:tagline","title":"Slot: tagline"},{"location":"Documentation-Schema/tagline/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/tagline/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/tagline/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/tagline/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/tagline/#linkml-source","text":"name : tagline description : A short tagline for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : tagline domain_of : - Resource range : string","title":"LinkML Source"},{"location":"Documentation-Schema/tools/","text":"Slot: tools URI: mtd:tools Applicable Classes Name Description Modifies Slot ResourceRegistry A registry of different types of data assets no Properties Range: Tool Multivalued: True Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : tools from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : tools domain_of : - ResourceRegistry range : Tool inlined : true inlined_as_list : true","title":"Slot: tools"},{"location":"Documentation-Schema/tools/#slot-tools","text":"URI: mtd:tools","title":"Slot: tools"},{"location":"Documentation-Schema/tools/#applicable-classes","text":"Name Description Modifies Slot ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/tools/#properties","text":"Range: Tool Multivalued: True","title":"Properties"},{"location":"Documentation-Schema/tools/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/tools/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/tools/#linkml-source","text":"name : tools from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 multivalued : true alias : tools domain_of : - ResourceRegistry range : Tool inlined : true inlined_as_list : true","title":"LinkML Source"},{"location":"Documentation-Schema/url/","text":"Slot: url A web location URI: mtd:url Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no ProjectBoard A reference to a project board, like a kanban board no Download A downloadable asset, i no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: Uriorcurie Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url domain_of : - Resource - ProjectBoard - Download range : uriorcurie","title":"Slot: url"},{"location":"Documentation-Schema/url/#slot-url","text":"A web location URI: mtd:url","title":"Slot: url"},{"location":"Documentation-Schema/url/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no ProjectBoard A reference to a project board, like a kanban board no Download A downloadable asset, i no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/url/#properties","text":"Range: Uriorcurie","title":"Properties"},{"location":"Documentation-Schema/url/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/url/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/url/#linkml-source","text":"name : url description : A web location from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : url domain_of : - Resource - ProjectBoard - Download range : uriorcurie","title":"LinkML Source"},{"location":"Documentation-Schema/visual_explainer/","text":"Slot: visual_explainer A visual abstract for the resource. URI: mtd:visual_explainer Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: String Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer domain_of : - Resource range : string","title":"Slot: visual_explainer"},{"location":"Documentation-Schema/visual_explainer/#slot-visual_explainer","text":"A visual abstract for the resource. URI: mtd:visual_explainer","title":"Slot: visual_explainer"},{"location":"Documentation-Schema/visual_explainer/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/visual_explainer/#properties","text":"Range: String","title":"Properties"},{"location":"Documentation-Schema/visual_explainer/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/visual_explainer/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/visual_explainer/#linkml-source","text":"name : visual_explainer description : A visual abstract for the resource. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : visual_explainer domain_of : - Resource range : string","title":"LinkML Source"},{"location":"Documentation-Schema/website_include/","text":"Slot: website_include Flag if this resource should be shown on the website. URI: mtd:website_include Applicable Classes Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no Properties Range: Boolean Identifier and Mapping Information Schema Source from schema: https://w3id.org/monarch-initiative/monarch-documentation LinkML Source name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include domain_of : - Resource range : boolean","title":"Slot: website_include"},{"location":"Documentation-Schema/website_include/#slot-website_include","text":"Flag if this resource should be shown on the website. URI: mtd:website_include","title":"Slot: website_include"},{"location":"Documentation-Schema/website_include/#applicable-classes","text":"Name Description Modifies Slot Resource A generic grouping for any identifiable entity no DataAsset A data asset is a resource that contains data, either manually curated, or ge... no Standard Standards are agreed-upon conventions or guidelines that ensure uniformity, c... no Tool A software tool is a computer program designed to help users perform specific... no Documentation A resource that contains documentation, like a wiki, a webpage with training ... no ProjectBoard A reference to a project board, like a kanban board no Repository A reference to a version control repository no ResourceRegistry A registry of different types of data assets no","title":"Applicable Classes"},{"location":"Documentation-Schema/website_include/#properties","text":"Range: Boolean","title":"Properties"},{"location":"Documentation-Schema/website_include/#identifier-and-mapping-information","text":"","title":"Identifier and Mapping Information"},{"location":"Documentation-Schema/website_include/#schema-source","text":"from schema: https://w3id.org/monarch-initiative/monarch-documentation","title":"Schema Source"},{"location":"Documentation-Schema/website_include/#linkml-source","text":"name : website_include description : Flag if this resource should be shown on the website. from_schema : https://w3id.org/monarch-initiative/monarch-documentation rank : 1000 alias : website_include domain_of : - Resource range : boolean","title":"LinkML Source"},{"location":"Ingest%20Principles/","text":"Ingest Principles Overview The Monarch Knowledge Graph (KG) is built from a variety of data sources in the biomedical domain. These data sources are \"ingested\" into the KG using a variety of tools and packages created by the Monarch Initiative team and our collaborators. This page describes the principles that guide the ingestion process. For details on the ingestion process, see this page . A list of all data sources ingested into the KG can be found here . General Principles All ingests should have a stringent (defensive) filtering strategy. Utilize Biolink profiles to inform the filtering of incoming ingests (ex. Phenio) Use yaml to implement this All nodes should have a category attached.","title":"Ingest Principles"},{"location":"Ingest%20Principles/#ingest-principles","text":"","title":"Ingest Principles"},{"location":"Ingest%20Principles/#overview","text":"The Monarch Knowledge Graph (KG) is built from a variety of data sources in the biomedical domain. These data sources are \"ingested\" into the KG using a variety of tools and packages created by the Monarch Initiative team and our collaborators. This page describes the principles that guide the ingestion process. For details on the ingestion process, see this page . A list of all data sources ingested into the KG can be found here .","title":"Overview"},{"location":"Ingest%20Principles/#general-principles","text":"All ingests should have a stringent (defensive) filtering strategy. Utilize Biolink profiles to inform the filtering of incoming ingests (ex. Phenio) Use yaml to implement this All nodes should have a category attached.","title":"General Principles"},{"location":"Ingest%20Principles/modeling-principles/","text":"Modeling Principles Conforms to Schema The Monarch Biolink Specification is an implementation of the Biolink Model. The KG must be conformant with The Monarch Biolink Specification. Node Normalization The final KG must have Nodes normalized to the canonical prefix for any given node type. The canonical prefix should be determined by The Monarch Biolink Model Specification. Authoratative Source Providers of Associations are not the authoratative sources for the Nodes in general. Nodes should be ingested from their own authoratative source, seperate from edge ingests. Genes and Proteins Genes and reference Proteins shall be treated as equivalent. When collapsing nodes give the Gene Id the priority, original_subject = UniProt Id. If in future there is a need to represent Isoforms, then UniProt Isoform Ids should be used. Variants Variant to Disease/Phenotype Associations may be rolled up to the Gene level. If they are rolled up, then a subject_modifier = Variant Id. Gene to Disease Associations Gene to Disease Associations should come from high quality sources that have been vetted by domain experts within Monarch. Gene to Disease Associations must not confuse single Gene causal Mendelian Associations with otherwise associated Genes. (e.g. contributing or associated Genes)","title":"Modeling Principles"},{"location":"Ingest%20Principles/modeling-principles/#modeling-principles","text":"","title":"Modeling Principles"},{"location":"Ingest%20Principles/modeling-principles/#conforms-to-schema","text":"The Monarch Biolink Specification is an implementation of the Biolink Model. The KG must be conformant with The Monarch Biolink Specification.","title":"Conforms to Schema"},{"location":"Ingest%20Principles/modeling-principles/#node-normalization","text":"The final KG must have Nodes normalized to the canonical prefix for any given node type. The canonical prefix should be determined by The Monarch Biolink Model Specification.","title":"Node Normalization"},{"location":"Ingest%20Principles/modeling-principles/#authoratative-source","text":"Providers of Associations are not the authoratative sources for the Nodes in general. Nodes should be ingested from their own authoratative source, seperate from edge ingests.","title":"Authoratative Source"},{"location":"Ingest%20Principles/modeling-principles/#genes-and-proteins","text":"Genes and reference Proteins shall be treated as equivalent. When collapsing nodes give the Gene Id the priority, original_subject = UniProt Id. If in future there is a need to represent Isoforms, then UniProt Isoform Ids should be used.","title":"Genes and Proteins"},{"location":"Ingest%20Principles/modeling-principles/#variants","text":"Variant to Disease/Phenotype Associations may be rolled up to the Gene level. If they are rolled up, then a subject_modifier = Variant Id.","title":"Variants"},{"location":"Ingest%20Principles/modeling-principles/#gene-to-disease-associations","text":"Gene to Disease Associations should come from high quality sources that have been vetted by domain experts within Monarch. Gene to Disease Associations must not confuse single Gene causal Mendelian Associations with otherwise associated Genes. (e.g. contributing or associated Genes)","title":"Gene to Disease Associations"},{"location":"Repositories/Exomiser/","text":"Exomiser Details GitHub exomiser/Exomiser Language Java Description A Tool to Annotate and Prioritize Exome Variants Documentation The Exomiser - A Tool to Annotate and Prioritize Exome Variants Overview: The Exomiser is a Java program that finds potential disease-causing variants from whole-exome or whole-genome sequencing data. Starting from a VCF file and a set of phenotypes encoded using the Human Phenotype Ontology (HPO) it will annotate, filter and prioritise likely causative variants. The program does this based on user-defined criteria such as a variant's predicted pathogenicity, frequency of occurrence in a population and also how closely the given phenotype matches the known phenotype of diseased genes from human and model organism data. The functional annotation of variants is handled by Jannovar and uses any of UCSC , RefSeq or Ensembl KnownGene transcript definitions and hg19 or hg38 genomic coordinates. Variants are prioritised according to user-defined criteria on variant frequency, pathogenicity, quality, inheritance pattern, and model organism phenotype data. Predicted pathogenicity data is extracted from the dbNSFP resource. Variant frequency data is taken from the 1000 Genomes , ESP , TOPMed , UK10K , ExAC and gnomAD datasets. Subsets of these frequency and pathogenicity data can be defined to further tune the analysis. Cross-species phenotype comparisons come from our PhenoDigm tool powered by the OWLTools OWLSim algorithm. The Exomiser was developed by the Computational Biology and Bioinformatics group at the Institute for Medical Genetics and Human Genetics of the Charit\u00e9 - Universit\u00e4tsmedizin Berlin, the Mouse Informatics Group at the Sanger Institute and other members of the Monarch initiative . Download and Installation The prebuilt Exomiser binaries can be obtained from the releases page and supporting data files can be downloaded from the Exomiser FTP site . It is possible to use the same data sources for multiple versions, in order to avoid having to download the data files for each software point release. We recommend maintaining a dedicated exomiser data directory where you can extract versions of the hg19, hg38 and phenotype data. To do this, edit the exomiser.data-directory field in the application.properties file to point to the dedicated data directory. The version for the data releases should also be specified in the application.properties file: For example, if you have an exomiser installation located at /opt/exomiser-cli-11.0.0 and you have extracted the data files to the directory /opt/exomiser-data . When there is a new data release, you can change the data versions by specifying the version in the /opt/exomiser-cli-11.0.0/application.properties from # root path where data is to be downloaded and worked on # it is assumed that all the files required by exomiser listed in this properties file # will be found in the data directory unless specifically overridden here. exomiser.data-directory = data # old data versions exomiser.hg19.data-version = 1802 ... exomiser.hg38.data-version = 1802 ... exomiser.phenotype.data-version = 1802 to # overridden data-directory containing multiple data versions exomiser.data-directory = /opt/exomiser-data # updated data versions exomiser.hg19.data-version = 1805 ... exomiser.hg38.data-version = 1805 ... exomiser.phenotype.data-version = 1807 We strongly recommend using the latest versions of both the application and the data for optimum results. For further instructions on installing and running please refer to the README.md file. Running it Please refer to the manual for details on how to configure and run the Exomiser. Demo site There is a limited demo version of the exomiser hosted by the Monarch Initiative . This instance is for teaching purposes only and is limited to small exome analysis. Using The Exomiser in your code The exomiser can also be used as a library in Spring Java applications. Add the exomiser-spring-boot-starter library to your pom/gradle build script. In your configuration class add the @EnableExomiser annotation ```java @EnableExomiser public class MainConfig { } Or if using Spring boot for your application, the exomiser will be autoconfigured if it is on your classpath. ```java @SpringBootApplication public class Application { public static void main(String[] args) { SpringApplication.run(Application.class, args); } } In your application use the AnalysisBuilder obtained from the Exomiser instance to configure your analysis. Then run the Analysis using the Exomiser class. Creation of the Exomiser is a complicated process so defer this to Spring and the exomiser-spring-boot-starter. Calling the add prefixed methods will add that analysis step to the analysis in the order that they have been defined in your code. Example usage: @Autowired private final Exomiser exomiser; ... Analysis analysis = exomiser.getAnalysisBuilder() .genomeAssembly(GenomeAssembly.HG19) .vcfPath(vcfPath) .pedPath(pedPath) .probandSampleName(probandSampleId) .hpoIds(phenotypes) .analysisMode(AnalysisMode.PASS_ONLY) .modeOfInheritance(EnumSet.of(ModeOfInheritance.AUTOSOMAL_DOMINANT, ModeOfInheritance.AUTOSOMAL_RECESSIVE)) .frequencySources(FrequencySource.ALL_EXTERNAL_FREQ_SOURCES) .pathogenicitySources(EnumSet.of(PathogenicitySource.POLYPHEN, PathogenicitySource.MUTATION_TASTER, PathogenicitySource.SIFT)) .addPhivePrioritiser() .addPriorityScoreFilter(PriorityType.PHIVE_PRIORITY, 0.501f) .addQualityFilter(500.0) .addRegulatoryFeatureFilter() .addFrequencyFilter(0.01f) .addPathogenicityFilter(true) .addInheritanceFilter() .addOmimPrioritiser() .build(); AnalysisResults analysisResults = exomiser.run(analysis); Memory usage Analysing whole genomes using the AnalysisMode.FULL will use a lot of RAM (~16GB for 4.5 million variants without any extra variant data being loaded) the standard Java GC will fail to cope well with these. Using the G1GC should solve this issue. e.g. add -XX:+UseG1GC to your java -jar -Xmx... incantation. Caching Since 9.0.0 caching uses the standard Spring mechanisms. To enable and configure caching in your Spring application, use the @EnableCaching annotation on a @Configuration class, include the required cache implementation jar and add the specific properties to the application.properties . For example, to use Caffeine just add the dependency to your pom: <dependency> <groupId> com.github.ben-manes.caffeine </groupId> <artifactId> caffeine </artifactId> </dependency> and these lines to the application.properties : spring.cache.type = caffeine spring.cache.caffeine.spec = maximumSize=300000 Recognition The Exomiser is proud to be recognised by the International Rare Diseases Research Consortium ( IRDiRC ) as an IRDiRC Recognized Resource . This is 'a quality indicator, based on a specific set of criteria, that was created to highlight key resources which, if used more broadly, would accelerate the pace of translating discoveries into clinical applications.' These resources 'must be of fundamental importance to the international rare diseases research and development community' .","title":"Exomiser"},{"location":"Repositories/Exomiser/#exomiser","text":"","title":"Exomiser"},{"location":"Repositories/Exomiser/#details","text":"GitHub exomiser/Exomiser Language Java Description A Tool to Annotate and Prioritize Exome Variants","title":"Details"},{"location":"Repositories/Exomiser/#documentation","text":"","title":"Documentation"},{"location":"Repositories/Exomiser/#the-exomiser-a-tool-to-annotate-and-prioritize-exome-variants","text":"","title":"The Exomiser - A Tool to Annotate and Prioritize Exome Variants"},{"location":"Repositories/Exomiser/#overview","text":"The Exomiser is a Java program that finds potential disease-causing variants from whole-exome or whole-genome sequencing data. Starting from a VCF file and a set of phenotypes encoded using the Human Phenotype Ontology (HPO) it will annotate, filter and prioritise likely causative variants. The program does this based on user-defined criteria such as a variant's predicted pathogenicity, frequency of occurrence in a population and also how closely the given phenotype matches the known phenotype of diseased genes from human and model organism data. The functional annotation of variants is handled by Jannovar and uses any of UCSC , RefSeq or Ensembl KnownGene transcript definitions and hg19 or hg38 genomic coordinates. Variants are prioritised according to user-defined criteria on variant frequency, pathogenicity, quality, inheritance pattern, and model organism phenotype data. Predicted pathogenicity data is extracted from the dbNSFP resource. Variant frequency data is taken from the 1000 Genomes , ESP , TOPMed , UK10K , ExAC and gnomAD datasets. Subsets of these frequency and pathogenicity data can be defined to further tune the analysis. Cross-species phenotype comparisons come from our PhenoDigm tool powered by the OWLTools OWLSim algorithm. The Exomiser was developed by the Computational Biology and Bioinformatics group at the Institute for Medical Genetics and Human Genetics of the Charit\u00e9 - Universit\u00e4tsmedizin Berlin, the Mouse Informatics Group at the Sanger Institute and other members of the Monarch initiative .","title":"Overview:"},{"location":"Repositories/Exomiser/#download-and-installation","text":"The prebuilt Exomiser binaries can be obtained from the releases page and supporting data files can be downloaded from the Exomiser FTP site . It is possible to use the same data sources for multiple versions, in order to avoid having to download the data files for each software point release. We recommend maintaining a dedicated exomiser data directory where you can extract versions of the hg19, hg38 and phenotype data. To do this, edit the exomiser.data-directory field in the application.properties file to point to the dedicated data directory. The version for the data releases should also be specified in the application.properties file: For example, if you have an exomiser installation located at /opt/exomiser-cli-11.0.0 and you have extracted the data files to the directory /opt/exomiser-data . When there is a new data release, you can change the data versions by specifying the version in the /opt/exomiser-cli-11.0.0/application.properties from # root path where data is to be downloaded and worked on # it is assumed that all the files required by exomiser listed in this properties file # will be found in the data directory unless specifically overridden here. exomiser.data-directory = data # old data versions exomiser.hg19.data-version = 1802 ... exomiser.hg38.data-version = 1802 ... exomiser.phenotype.data-version = 1802 to # overridden data-directory containing multiple data versions exomiser.data-directory = /opt/exomiser-data # updated data versions exomiser.hg19.data-version = 1805 ... exomiser.hg38.data-version = 1805 ... exomiser.phenotype.data-version = 1807 We strongly recommend using the latest versions of both the application and the data for optimum results. For further instructions on installing and running please refer to the README.md file.","title":"Download and Installation"},{"location":"Repositories/Exomiser/#running-it","text":"Please refer to the manual for details on how to configure and run the Exomiser.","title":"Running it"},{"location":"Repositories/Exomiser/#demo-site","text":"There is a limited demo version of the exomiser hosted by the Monarch Initiative . This instance is for teaching purposes only and is limited to small exome analysis.","title":"Demo site"},{"location":"Repositories/Exomiser/#using-the-exomiser-in-your-code","text":"The exomiser can also be used as a library in Spring Java applications. Add the exomiser-spring-boot-starter library to your pom/gradle build script. In your configuration class add the @EnableExomiser annotation ```java @EnableExomiser public class MainConfig { } Or if using Spring boot for your application, the exomiser will be autoconfigured if it is on your classpath. ```java @SpringBootApplication public class Application { public static void main(String[] args) { SpringApplication.run(Application.class, args); } } In your application use the AnalysisBuilder obtained from the Exomiser instance to configure your analysis. Then run the Analysis using the Exomiser class. Creation of the Exomiser is a complicated process so defer this to Spring and the exomiser-spring-boot-starter. Calling the add prefixed methods will add that analysis step to the analysis in the order that they have been defined in your code. Example usage: @Autowired private final Exomiser exomiser; ... Analysis analysis = exomiser.getAnalysisBuilder() .genomeAssembly(GenomeAssembly.HG19) .vcfPath(vcfPath) .pedPath(pedPath) .probandSampleName(probandSampleId) .hpoIds(phenotypes) .analysisMode(AnalysisMode.PASS_ONLY) .modeOfInheritance(EnumSet.of(ModeOfInheritance.AUTOSOMAL_DOMINANT, ModeOfInheritance.AUTOSOMAL_RECESSIVE)) .frequencySources(FrequencySource.ALL_EXTERNAL_FREQ_SOURCES) .pathogenicitySources(EnumSet.of(PathogenicitySource.POLYPHEN, PathogenicitySource.MUTATION_TASTER, PathogenicitySource.SIFT)) .addPhivePrioritiser() .addPriorityScoreFilter(PriorityType.PHIVE_PRIORITY, 0.501f) .addQualityFilter(500.0) .addRegulatoryFeatureFilter() .addFrequencyFilter(0.01f) .addPathogenicityFilter(true) .addInheritanceFilter() .addOmimPrioritiser() .build(); AnalysisResults analysisResults = exomiser.run(analysis);","title":"Using The Exomiser in your code"},{"location":"Repositories/Exomiser/#memory-usage","text":"Analysing whole genomes using the AnalysisMode.FULL will use a lot of RAM (~16GB for 4.5 million variants without any extra variant data being loaded) the standard Java GC will fail to cope well with these. Using the G1GC should solve this issue. e.g. add -XX:+UseG1GC to your java -jar -Xmx... incantation.","title":"Memory usage"},{"location":"Repositories/Exomiser/#caching","text":"Since 9.0.0 caching uses the standard Spring mechanisms. To enable and configure caching in your Spring application, use the @EnableCaching annotation on a @Configuration class, include the required cache implementation jar and add the specific properties to the application.properties . For example, to use Caffeine just add the dependency to your pom: <dependency> <groupId> com.github.ben-manes.caffeine </groupId> <artifactId> caffeine </artifactId> </dependency> and these lines to the application.properties : spring.cache.type = caffeine spring.cache.caffeine.spec = maximumSize=300000","title":"Caching"},{"location":"Repositories/Exomiser/#recognition","text":"The Exomiser is proud to be recognised by the International Rare Diseases Research Consortium ( IRDiRC ) as an IRDiRC Recognized Resource . This is 'a quality indicator, based on a specific set of criteria, that was created to highlight key resources which, if used more broadly, would accelerate the pace of translating discoveries into clinical applications.' These resources 'must be of fundamental importance to the international rare diseases research and development community' .","title":"Recognition"},{"location":"Repositories/LIRICAL/","text":"LIRICAL Details GitHub TheJacksonLaboratory/LIRICAL Language Java Description LIkelihood Ratio Interpretation of Clinical AbnormaLities Documentation LIRICAL LIRICAL (LIkelihood Ratio Interpretation of Clinical AbnormaLities) is designed to provide clinically interpretable computational analysis of phenotypic abnormalities (encoded using the Human Phenotype Ontology ), optionally combined with an analysis of variants and genotypes if a VCF file is provided with the results of diagnostic gene panel, exome, or genome sequencing. The prioritized diseases are reported in human-friendly HTML report. The report summarizes the most likely differential diagnoses: and breaks down the contributions of the HPO terms and deleterious variants in the associated genes for each diagnosis: The report is also available in JSON/TSV formats suitable for programmatic post-processing. Availability Most users should download the latest distribution ZIP file from the Releases page . Learn more Read more about the LIRICAL algorithm in the manuscript available at the American Journal of Human Genetics . Consult the documentation for installation instructions and a tutorial : - Stable documentation - Edge release documentation Developers can access API reference at: - Stable - Edge release","title":"LIRICAL"},{"location":"Repositories/LIRICAL/#lirical","text":"","title":"LIRICAL"},{"location":"Repositories/LIRICAL/#details","text":"GitHub TheJacksonLaboratory/LIRICAL Language Java Description LIkelihood Ratio Interpretation of Clinical AbnormaLities","title":"Details"},{"location":"Repositories/LIRICAL/#documentation","text":"","title":"Documentation"},{"location":"Repositories/LIRICAL/#lirical_1","text":"LIRICAL (LIkelihood Ratio Interpretation of Clinical AbnormaLities) is designed to provide clinically interpretable computational analysis of phenotypic abnormalities (encoded using the Human Phenotype Ontology ), optionally combined with an analysis of variants and genotypes if a VCF file is provided with the results of diagnostic gene panel, exome, or genome sequencing. The prioritized diseases are reported in human-friendly HTML report. The report summarizes the most likely differential diagnoses: and breaks down the contributions of the HPO terms and deleterious variants in the associated genes for each diagnosis: The report is also available in JSON/TSV formats suitable for programmatic post-processing.","title":"LIRICAL"},{"location":"Repositories/LIRICAL/#availability","text":"Most users should download the latest distribution ZIP file from the Releases page .","title":"Availability"},{"location":"Repositories/LIRICAL/#learn-more","text":"Read more about the LIRICAL algorithm in the manuscript available at the American Journal of Human Genetics . Consult the documentation for installation instructions and a tutorial : - Stable documentation - Edge release documentation Developers can access API reference at: - Stable - Edge release","title":"Learn more"},{"location":"Repositories/POET/","text":"POET Details GitHub TheJacksonLaboratory/POET Language Java Description A curation application for HPO and MAxO Documentation POET A Full-Stack annotation application to generate data for disease and associated ontologies. Setup Java 11 Intellij Import project as gradle project Ensure the gradle runtime is the wrapper (usually defaults) Requirements for development - Node - Npm - Java 11 - Mysql or Mariadb Running Setup the database First, open the database console. sudo mysql -u root Then create the database poet , a user (e.g. poetdev ), and grant poetdev the privileges for the poet database. > create database poet; > create user 'poetdev'@localhost identified by 'password1'; > grant all privileges on poet.* to 'poetdev'@localhost; > flush privileges; Replace password1 with a better choice. Configure datasources under, replace username and password with the credentials from the previous step: - /src/main/resources/application-*.yml Initalize Data (~30min) ./gradlew bootRun --args=\"--initializePoet=true\" Run the app Open in two terminals Run Server ./gradle bootRun Run Client src/main/poet cd src/main/poet; npm run start Navigate to http://localhost:4200/, endpoints will be served at http://localhost:8080/api/v1/ Unit & Functional Testing Before Deployment ./gradlew test_release Building For Deployment Test Environment Internal Only ./gradlew bootWar -Dspring.profiles.active=stage Production Environment Deployment ./gradlew bootWar -Dspring.profiles.active=production Contributors Michael iimpulse Gargano","title":"POET"},{"location":"Repositories/POET/#poet","text":"","title":"POET"},{"location":"Repositories/POET/#details","text":"GitHub TheJacksonLaboratory/POET Language Java Description A curation application for HPO and MAxO","title":"Details"},{"location":"Repositories/POET/#documentation","text":"","title":"Documentation"},{"location":"Repositories/POET/#poet_1","text":"A Full-Stack annotation application to generate data for disease and associated ontologies.","title":"POET"},{"location":"Repositories/POET/#setup","text":"Java 11 Intellij Import project as gradle project Ensure the gradle runtime is the wrapper (usually defaults) Requirements for development - Node - Npm - Java 11 - Mysql or Mariadb","title":"Setup"},{"location":"Repositories/POET/#running","text":"","title":"Running"},{"location":"Repositories/POET/#setup-the-database","text":"First, open the database console. sudo mysql -u root Then create the database poet , a user (e.g. poetdev ), and grant poetdev the privileges for the poet database. > create database poet; > create user 'poetdev'@localhost identified by 'password1'; > grant all privileges on poet.* to 'poetdev'@localhost; > flush privileges; Replace password1 with a better choice. Configure datasources under, replace username and password with the credentials from the previous step: - /src/main/resources/application-*.yml Initalize Data (~30min) ./gradlew bootRun --args=\"--initializePoet=true\"","title":"Setup the database"},{"location":"Repositories/POET/#run-the-app","text":"Open in two terminals Run Server ./gradle bootRun Run Client src/main/poet cd src/main/poet; npm run start Navigate to http://localhost:4200/, endpoints will be served at http://localhost:8080/api/v1/","title":"Run the app"},{"location":"Repositories/POET/#unit-functional-testing-before-deployment","text":"./gradlew test_release","title":"Unit &amp; Functional Testing Before Deployment"},{"location":"Repositories/POET/#building-for-deployment","text":"Test Environment Internal Only ./gradlew bootWar -Dspring.profiles.active=stage Production Environment Deployment ./gradlew bootWar -Dspring.profiles.active=production","title":"Building For Deployment"},{"location":"Repositories/POET/#contributors","text":"Michael iimpulse Gargano","title":"Contributors"},{"location":"Repositories/Phenomiser/","text":"Phenomiser Details GitHub TheJacksonLaboratory/Phenomiser Language Java Description Phenotype-based Diagnosis Tool for Rare Diseases Documentation Phenomiser This is new implementation of the Phenomiser algorithm published in https://www.sciencedirect.com/science/article/pii/S0002929709003991 You can make a query programmatically using the Phenomiser class. Alternatively, you can build a jar file with all dependencies and run from the command line. Quick start Precompute Phenomiser need to simulate query with sets of HPO terms to compute an empirical similarity score distributions for each disease. We use -debug mode to compute score distributions for 50 randomly selected diseases. You should omit this argument if you want to precompute data for all diseases. Be aware: it will take a long time complete. Read below for details. Download the latest hp.obo file from http://purl.obolibrary.org/obo/hp.obo Download the latest annotation file from http://compbio.charite.de/jenkins/job/hpo.annotations.2018/lastSuccessfulBuild/artifact/misc_2018/phenotype.hpoa Use the debug flag only to do a small subset of the sampling. java -jar phenomiser-cli.jar precompute -hpo ${path to}hp.obo -da ${path to}phenotype.hpoa --sampling 1 10 To do the full precomputation, reserve sufficient memory, e.g., -Xmx32g You should be able to find a Phenomiser_data created for you under your home directory. The folder contains precomputed data that will be used in the following steps. Query with HPO terms. This allows you to rank diseases based on their similarities with the query terms that you provided. query -hpo ${path to}hp.obo -da ${path to}phenotype.hpoa -query HP:0003074,HP:0010645,HP:0001943 Grid search. This command allows you to simulate queries with a i signal (HPO terms belonging to a certain disease) and j noise (random HPO terms not belonging to the same disease), where i and j can be specified by setting the -signal (max of i) and -noise (max of j). grid -hpo ${path to}hp.obo -da ${path to}phenotype.hpoa -signal 2 -noise 1 Phenopacket analysis Run Phenomiser analysis across a collection of Phenopackets. $ java -jar PhenomiserApp.jar phenopacket \\\\ -hpo /home/whoever/wherever/data/hp.obo \\\\ -da /home/whoever/wherever/data/phenotype.hpoa \\\\ -cachePath /home/whoever/wherever/data/phenomiser/ \\\\ -db OMIM \\\\ --phenopacket /home/whoever/wherever/ppacket This will output a file called phenomiser-results.txt with the rankings of the correct diagnoses. The output is a matrix where the rows are the number of i and columns the number of j. The value is the percentage (range 0 to 1) of simulations where Phenomiser corrected ranked the disease of target number 1. Usage in detail Help information Run the app with \"-h\" to print out a list of all arguments: Usage: java -jar PhenomiserApp.jar [options] [command] [command options] Options: -h, --help display this help message Commands: precompute Precompute similarity score distributions Usage: precompute [options] Options: -cachePath, --cachePath specify the path to save precomputed data -da, --disease_annotation specify the path to disease annotation file .hpoa -hpo, --hpo_path specify the path to hp.obo -sampling, --sampling-range range of HPO terms to create similarity distributions for. Max 10 Default: [1, 10] -debug use debug mode Default: false -numThreads specify the number of threads Default: 4 query Query with a list of HPO terms and rank diseases based on similarity score Usage: query [options] Options: -cachePath, --cachePath specify the path to save precomputed data Default: /Users/zhangx/Phenomiser_data -db, --diseaseDB choose disease database [OMIM,ORPHA] Default: OMIM -da, --disease_annotation specify the path to disease annotation file -hpo, --hpo_path specify the path to hp.obo -o, --output specify output path -query, --query-terms specify HPO terms to query grid Grid search for simulation of phenotype-only cases Usage: grid [options] Options: -cachePath, --cachePath specify the path to save precomputed data Default: /Users/zhangx/Phenomiser_data -db, --diseaseDB choose disease database [OMIM,ORPHA] Default: OMIM -da, --disease_annotation specify the path to disease annotation file -hpo, --hpo_path specify the path to hp.obo -i, --imprecision Use imprecision? Default: false -signal, --n-diseaseTerm Number of disease terms Default: 10 -c, --n_cases Number of cases to simulate Default: 100 -noise, --noise Number of noise terms Default: 5 -o, --output Output path -seed, --set.seed Set random number generator seed for simulation How to set precompute parameters We recommend running this command on a cluster, and download the cached folder to your personal computer for query (you still need a large RAM to read in the serialized data). Two parameters are critical: numThreads Increase the number if you can request more CPU. We tested 40 CPU and can finish the job in about 20 hours. sampling We recommend using the default value of 1 - 10. There is no need to increase the max value above 10, as the score distributions will not change much above 10. If you change the numbers, you have to make sure that the number of query terms fall within the range. How to access cached data Default caching data is under HOME/Phenomiser_data. You can use \"-cachePath\" if you want to overwrite the default setting.","title":"Phenomiser"},{"location":"Repositories/Phenomiser/#phenomiser","text":"","title":"Phenomiser"},{"location":"Repositories/Phenomiser/#details","text":"GitHub TheJacksonLaboratory/Phenomiser Language Java Description Phenotype-based Diagnosis Tool for Rare Diseases","title":"Details"},{"location":"Repositories/Phenomiser/#documentation","text":"","title":"Documentation"},{"location":"Repositories/Phenomiser/#phenomiser_1","text":"This is new implementation of the Phenomiser algorithm published in https://www.sciencedirect.com/science/article/pii/S0002929709003991 You can make a query programmatically using the Phenomiser class. Alternatively, you can build a jar file with all dependencies and run from the command line.","title":"Phenomiser"},{"location":"Repositories/Phenomiser/#quick-start","text":"Precompute Phenomiser need to simulate query with sets of HPO terms to compute an empirical similarity score distributions for each disease. We use -debug mode to compute score distributions for 50 randomly selected diseases. You should omit this argument if you want to precompute data for all diseases. Be aware: it will take a long time complete. Read below for details. Download the latest hp.obo file from http://purl.obolibrary.org/obo/hp.obo Download the latest annotation file from http://compbio.charite.de/jenkins/job/hpo.annotations.2018/lastSuccessfulBuild/artifact/misc_2018/phenotype.hpoa Use the debug flag only to do a small subset of the sampling. java -jar phenomiser-cli.jar precompute -hpo ${path to}hp.obo -da ${path to}phenotype.hpoa --sampling 1 10 To do the full precomputation, reserve sufficient memory, e.g., -Xmx32g You should be able to find a Phenomiser_data created for you under your home directory. The folder contains precomputed data that will be used in the following steps. Query with HPO terms. This allows you to rank diseases based on their similarities with the query terms that you provided. query -hpo ${path to}hp.obo -da ${path to}phenotype.hpoa -query HP:0003074,HP:0010645,HP:0001943 Grid search. This command allows you to simulate queries with a i signal (HPO terms belonging to a certain disease) and j noise (random HPO terms not belonging to the same disease), where i and j can be specified by setting the -signal (max of i) and -noise (max of j). grid -hpo ${path to}hp.obo -da ${path to}phenotype.hpoa -signal 2 -noise 1 Phenopacket analysis Run Phenomiser analysis across a collection of Phenopackets. $ java -jar PhenomiserApp.jar phenopacket \\\\ -hpo /home/whoever/wherever/data/hp.obo \\\\ -da /home/whoever/wherever/data/phenotype.hpoa \\\\ -cachePath /home/whoever/wherever/data/phenomiser/ \\\\ -db OMIM \\\\ --phenopacket /home/whoever/wherever/ppacket This will output a file called phenomiser-results.txt with the rankings of the correct diagnoses. The output is a matrix where the rows are the number of i and columns the number of j. The value is the percentage (range 0 to 1) of simulations where Phenomiser corrected ranked the disease of target number 1.","title":"Quick start"},{"location":"Repositories/Phenomiser/#usage-in-detail","text":"","title":"Usage in detail"},{"location":"Repositories/Phenomiser/#help-information","text":"Run the app with \"-h\" to print out a list of all arguments: Usage: java -jar PhenomiserApp.jar [options] [command] [command options] Options: -h, --help display this help message Commands: precompute Precompute similarity score distributions Usage: precompute [options] Options: -cachePath, --cachePath specify the path to save precomputed data -da, --disease_annotation specify the path to disease annotation file .hpoa -hpo, --hpo_path specify the path to hp.obo -sampling, --sampling-range range of HPO terms to create similarity distributions for. Max 10 Default: [1, 10] -debug use debug mode Default: false -numThreads specify the number of threads Default: 4 query Query with a list of HPO terms and rank diseases based on similarity score Usage: query [options] Options: -cachePath, --cachePath specify the path to save precomputed data Default: /Users/zhangx/Phenomiser_data -db, --diseaseDB choose disease database [OMIM,ORPHA] Default: OMIM -da, --disease_annotation specify the path to disease annotation file -hpo, --hpo_path specify the path to hp.obo -o, --output specify output path -query, --query-terms specify HPO terms to query grid Grid search for simulation of phenotype-only cases Usage: grid [options] Options: -cachePath, --cachePath specify the path to save precomputed data Default: /Users/zhangx/Phenomiser_data -db, --diseaseDB choose disease database [OMIM,ORPHA] Default: OMIM -da, --disease_annotation specify the path to disease annotation file -hpo, --hpo_path specify the path to hp.obo -i, --imprecision Use imprecision? Default: false -signal, --n-diseaseTerm Number of disease terms Default: 10 -c, --n_cases Number of cases to simulate Default: 100 -noise, --noise Number of noise terms Default: 5 -o, --output Output path -seed, --set.seed Set random number generator seed for simulation","title":"Help information"},{"location":"Repositories/Phenomiser/#how-to-set-precompute-parameters","text":"We recommend running this command on a cluster, and download the cached folder to your personal computer for query (you still need a large RAM to read in the serialized data). Two parameters are critical: numThreads Increase the number if you can request more CPU. We tested 40 CPU and can finish the job in about 20 hours. sampling We recommend using the default value of 1 - 10. There is no need to increase the max value above 10, as the score distributions will not change much above 10. If you change the numbers, you have to make sure that the number of query terms fall within the range.","title":"How to set precompute parameters"},{"location":"Repositories/Phenomiser/#how-to-access-cached-data","text":"Default caching data is under HOME/Phenomiser_data. You can use \"-cachePath\" if you want to overwrite the default setting.","title":"How to access cached data"},{"location":"Repositories/arachne/","text":"arachne Details GitHub balhoff/arachne Language Scala Description RDF rule engine Documentation Arachne Arachne is a rule engine for RDF. It implements the Rete/UL algorithm as described in Production Matching for Large Learning Systems by Robert B. Doorenbos, an extension of Forgy's original Rete algorithm. Goals Arachne was developed initially to support reasoning within the Noctua/Minerva system. This use case calls for: * Scalable handling of very large ontologies (millions of axioms/rules). * Adequate performance, with large rule sets, for smallish datasets of hundreds to thousands of triples (materialize all inferences in <1 second). * Simultaneous reuse of reasoner, once all rules have been loaded, for any number of datasets, without re-incurring initialization time. Usage Usage arachne [options] : Command-line operations for Arachne RDF rule engine Options --data : file or folder of RDF data files --export : export RDF triples to Turtle file --indirect-types : mark indirect types with additional triple --inferred-only : export inferred triples only --ontology : OWL ontology to import into reasoning rules --rules : Jena-syntax rules file to import To compute Abox inferences for an instance dataset data.ttl which uses classes and properties from some ontology ont.owl , a typical command line would be: arachne --ontology=ont.owl --data=data.ttl --export=output.ttl Building Install sbt (Scala Build Tool) on your system. For Mac OS X, it is easily done using Homebrew : brew install sbt . sbt requires a working Java installation, but you do not need to otherwise install Scala. sbt compile","title":"arachne"},{"location":"Repositories/arachne/#arachne","text":"","title":"arachne"},{"location":"Repositories/arachne/#details","text":"GitHub balhoff/arachne Language Scala Description RDF rule engine","title":"Details"},{"location":"Repositories/arachne/#documentation","text":"","title":"Documentation"},{"location":"Repositories/arachne/#arachne_1","text":"Arachne is a rule engine for RDF. It implements the Rete/UL algorithm as described in Production Matching for Large Learning Systems by Robert B. Doorenbos, an extension of Forgy's original Rete algorithm.","title":"Arachne"},{"location":"Repositories/arachne/#goals","text":"Arachne was developed initially to support reasoning within the Noctua/Minerva system. This use case calls for: * Scalable handling of very large ontologies (millions of axioms/rules). * Adequate performance, with large rule sets, for smallish datasets of hundreds to thousands of triples (materialize all inferences in <1 second). * Simultaneous reuse of reasoner, once all rules have been loaded, for any number of datasets, without re-incurring initialization time.","title":"Goals"},{"location":"Repositories/arachne/#usage","text":"Usage arachne [options] : Command-line operations for Arachne RDF rule engine Options --data : file or folder of RDF data files --export : export RDF triples to Turtle file --indirect-types : mark indirect types with additional triple --inferred-only : export inferred triples only --ontology : OWL ontology to import into reasoning rules --rules : Jena-syntax rules file to import To compute Abox inferences for an instance dataset data.ttl which uses classes and properties from some ontology ont.owl , a typical command line would be: arachne --ontology=ont.owl --data=data.ttl --export=output.ttl","title":"Usage"},{"location":"Repositories/arachne/#building","text":"Install sbt (Scala Build Tool) on your system. For Mac OS X, it is easily done using Homebrew : brew install sbt . sbt requires a working Java installation, but you do not need to otherwise install Scala. sbt compile","title":"Building"},{"location":"Repositories/babelon/","text":"babelon Details GitHub monarch-initiative/babelon Language Jupyter Notebook Description A format for language profiles for ontologies Dependencies External Dependencies Package Version python ^3.11 click * importlib-metadata >=4.8.0 rdflib >=6.3.2 jsonasobj2 >=1.0.4 xmltodict >=0.13.0 pandas >=2.0.2 deepl >=1.20.0 oaklib >=0.6.0 tabulate >=0.9.0 llm >=0.19.1 python-dotenv ^1.0.1 curies >=0.7.7 sssom >=0.4.4 linkml-runtime >=1.7.1 linkml >=1.7.4 Documentation Babelon - A simple standard for managing ontology translations and language profiles Editors: - @matentzn - @LLTommy - @mellybelly - @drseb - Anyone that wants to be on here. Provisional documentation here. Babelon is simple standard for managing ontology translations and language profiles. Profiles are managed a simple TSV files, for example: source source_version source_language translation_language subject_id predicate_id source_value translation_value translator translation_date translation_confidence translation_precision translation_type http://purl.obolibrary.org/obo/hp.owl http://purl.obolibrary.org/obo/hp/releases/2021-04-13/hp.owl en de HP:0001945 rdfs:label Fever Fieber https://orcid.org/0000-0002-1373-XXXX 2021-05-21 0.95 exact HumanCurated http://purl.obolibrary.org/obo/hp.owl http://purl.obolibrary.org/obo/hp/releases/2021-04-13/hp.owl en de HP:0002615 oio:exactSynonym Low blood pressure Niedriger Blutdruck https://orcid.org/0000-0002-1373-XXXX 2021-05-21 0.9 exact HumanCurated The goal of Babelon is to capture the minimum data required to enable the following use cases: Translate a profile into RDF to enable seamless integration of alternative language alongside the primary ones. Support all properties for translation, including labels, synonyms and definitions. Capture important metadata such as confidence and precision of translation. Enable cross-language editing. For example: Notify language profile maintainers of new terms or changed labels Notify the core ontology teams of changes to translations, with a potential to suggest updating ones own annotations or adding new synonyms. As a first use case for the format, we see to capture the French language translations of the Human Phenotype Ontology by the Orphanet team and use them to provide versioned language profiles of HPO. Editors # in new environment pip install poetry poetry install make translations Acknowledgements This cookiecutter project was developed from the monarch-project-template template and will be kept up-to-date using cruft .","title":"babelon"},{"location":"Repositories/babelon/#babelon","text":"","title":"babelon"},{"location":"Repositories/babelon/#details","text":"GitHub monarch-initiative/babelon Language Jupyter Notebook Description A format for language profiles for ontologies","title":"Details"},{"location":"Repositories/babelon/#dependencies","text":"External Dependencies Package Version python ^3.11 click * importlib-metadata >=4.8.0 rdflib >=6.3.2 jsonasobj2 >=1.0.4 xmltodict >=0.13.0 pandas >=2.0.2 deepl >=1.20.0 oaklib >=0.6.0 tabulate >=0.9.0 llm >=0.19.1 python-dotenv ^1.0.1 curies >=0.7.7 sssom >=0.4.4 linkml-runtime >=1.7.1 linkml >=1.7.4","title":"Dependencies"},{"location":"Repositories/babelon/#documentation","text":"","title":"Documentation"},{"location":"Repositories/babelon/#babelon-a-simple-standard-for-managing-ontology-translations-and-language-profiles","text":"Editors: - @matentzn - @LLTommy - @mellybelly - @drseb - Anyone that wants to be on here. Provisional documentation here. Babelon is simple standard for managing ontology translations and language profiles. Profiles are managed a simple TSV files, for example: source source_version source_language translation_language subject_id predicate_id source_value translation_value translator translation_date translation_confidence translation_precision translation_type http://purl.obolibrary.org/obo/hp.owl http://purl.obolibrary.org/obo/hp/releases/2021-04-13/hp.owl en de HP:0001945 rdfs:label Fever Fieber https://orcid.org/0000-0002-1373-XXXX 2021-05-21 0.95 exact HumanCurated http://purl.obolibrary.org/obo/hp.owl http://purl.obolibrary.org/obo/hp/releases/2021-04-13/hp.owl en de HP:0002615 oio:exactSynonym Low blood pressure Niedriger Blutdruck https://orcid.org/0000-0002-1373-XXXX 2021-05-21 0.9 exact HumanCurated The goal of Babelon is to capture the minimum data required to enable the following use cases: Translate a profile into RDF to enable seamless integration of alternative language alongside the primary ones. Support all properties for translation, including labels, synonyms and definitions. Capture important metadata such as confidence and precision of translation. Enable cross-language editing. For example: Notify language profile maintainers of new terms or changed labels Notify the core ontology teams of changes to translations, with a potential to suggest updating ones own annotations or adding new synonyms. As a first use case for the format, we see to capture the French language translations of the Human Phenotype Ontology by the Orphanet team and use them to provide versioned language profiles of HPO.","title":"Babelon - A simple standard for managing ontology translations and language profiles"},{"location":"Repositories/babelon/#editors","text":"# in new environment pip install poetry poetry install make translations","title":"Editors"},{"location":"Repositories/babelon/#acknowledgements","text":"This cookiecutter project was developed from the monarch-project-template template and will be kept up-to-date using cruft .","title":"Acknowledgements"},{"location":"Repositories/biolink-model-toolkit/","text":"biolink-model-toolkit Details GitHub biolink/biolink-model-toolkit Language Python Description A collection of useful python functions for looking up information and working with the Biolink Model Dependencies External Dependencies Package Version python ^3.9 linkml-runtime ^1.6.3 deprecation ^2.1.0 stringcase ^1.2.0 Documentation Biolink Model Toolkit Biolink Model Toolkit (BMT): A Python API for working with the Biolink Model . BMT provides utility functions to look up Biolink Model for classes, relations, and properties based on Biolink CURIEs or external CURIEs that have been mapped to Biolink Model. Note: Each release of BMT is pinned to a specific version of the Biolink Model to ensure consistency. Usage BMT provides convenience methods to operate on the Biolink Model. Using this toolkit you can, - Get Biolink Model elements corresponding to a given Biolink class or slot name - Get Biolink Model elements corresponding to a given external CURIE/IRI - Get ancestors for a given Biolink Model element - Get descendants for a given Biolink Model element - Get parent for a given Biolink Model element - Get children for a given Biolink Model element - Check whether a given Biolink Model element is part of a specified subset","title":"biolink-model-toolkit"},{"location":"Repositories/biolink-model-toolkit/#biolink-model-toolkit","text":"","title":"biolink-model-toolkit"},{"location":"Repositories/biolink-model-toolkit/#details","text":"GitHub biolink/biolink-model-toolkit Language Python Description A collection of useful python functions for looking up information and working with the Biolink Model","title":"Details"},{"location":"Repositories/biolink-model-toolkit/#dependencies","text":"External Dependencies Package Version python ^3.9 linkml-runtime ^1.6.3 deprecation ^2.1.0 stringcase ^1.2.0","title":"Dependencies"},{"location":"Repositories/biolink-model-toolkit/#documentation","text":"","title":"Documentation"},{"location":"Repositories/biolink-model-toolkit/#biolink-model-toolkit_1","text":"Biolink Model Toolkit (BMT): A Python API for working with the Biolink Model . BMT provides utility functions to look up Biolink Model for classes, relations, and properties based on Biolink CURIEs or external CURIEs that have been mapped to Biolink Model. Note: Each release of BMT is pinned to a specific version of the Biolink Model to ensure consistency.","title":"Biolink Model Toolkit"},{"location":"Repositories/biolink-model-toolkit/#usage","text":"BMT provides convenience methods to operate on the Biolink Model. Using this toolkit you can, - Get Biolink Model elements corresponding to a given Biolink class or slot name - Get Biolink Model elements corresponding to a given external CURIE/IRI - Get ancestors for a given Biolink Model element - Get descendants for a given Biolink Model element - Get parent for a given Biolink Model element - Get children for a given Biolink Model element - Check whether a given Biolink Model element is part of a specified subset","title":"Usage"},{"location":"Repositories/biolink-model/","text":"biolink-model Details GitHub biolink/biolink-model Language Python Description Schema and generated objects for biolink data model and upper ontology Dependencies External Dependencies Package Version python ^3.9 curies ^0.7.4 prefixmaps ^0.2.3 pyyaml ^6.0.1 stringcase ^1.2.0 pytest ^8.1.1 beautifulsoup4 >=4.0.0 yamllint ^1.35.1 path ^17.0.0 linkml-runtime ^1.8.3 requests >=2.32.3 linkml ^1.9.1 click >8.0.0,<8.2.0 Documentation Biolink Model Biolink Model: https://w3id.org/biolink/biolink-model.yaml Quickstart docs: For a good overview of the biolink-model, watch Chris Mungall's talk at ICBO 2020. Browse the model: https://biolink.github.io/biolink-model named thing association predicate Refer to the following resources for a quick introduction to the Biolink Model: - Introduction to the Biolink Datamodel - Biolink Model - A community driven data model for life sciences (Biocuration 2020) - Slides: https://bit.ly/biolink-model-workshop-biocuration-2020 - Video: https://www.youtube.com/watch?v=RE1hFm8lvJA See also the Biolink Model Documentation for help in understanding , curating , and working with the model. Introduction The purpose of the Biolink Model is to provide a high-level datamodel of biological entities (genes, diseases, phenotypes, pathways, individuals, substances, etc), their properties, relationships, and enumerate ways in which they can be associated. The representation is independent of storage technology or metamodel (Solr documents, neo4j/property graphs, RDF/OWL, JSON, CSVs, etc). Different mappings to each of these are provided. The specification of the Biolink Model is a single YAML file built using linkml . The basic elements of the YAML are: Class Definitions: definitions of upper level classes representing both 'named thing' and 'association' Slot Definitions: definitions of slots (aka properties) that can be used to relate members of these classes to other classes or data types. Slots collectively refer to predicates, node properties, and edge properties The model itself is being used in the following projects: - NCATS Biomedical Data Translator - Monarch Initiative - KG-COVID-19 - KG Microbe - Illuminating the Druggable Genome Organization The main source of truth is biolink-model.yaml . This is a YAML file that is intended to be relatively simple to view and edit in its native form. The yaml definition is currently used to derive: JSON Schema Python dataclasses ProtoBuf definitions GraphQL OWL RDF Shape Expressions JSON-LD context SHACL Shapes ShEx Shapes Citing Biolink Model Unni DR, Moxon SAT, Bada M, Brush M, Bruskiewich R, Caufield JH, Clemons PA, Dancik V, Dumontier M, Fecho K, Glusman G, Hadlock JJ, Harris NL, Joshi A, Putman T, Qin G, Ramsey SA, Shefchek KA, Solbrig H, Soman K, Thessen AE, Haendel MA, Bizon C, Mungall CJ, The Biomedical Data Translator Consortium (2022). Biolink Model: A universal schema for knowledge graphs in clinical, biomedical, and translational science. Clin Transl Sci. Wiley; 2022 Jun 6; https://onlinelibrary.wiley.com/doi/10.1111/cts.13302","title":"biolink-model"},{"location":"Repositories/biolink-model/#biolink-model","text":"","title":"biolink-model"},{"location":"Repositories/biolink-model/#details","text":"GitHub biolink/biolink-model Language Python Description Schema and generated objects for biolink data model and upper ontology","title":"Details"},{"location":"Repositories/biolink-model/#dependencies","text":"External Dependencies Package Version python ^3.9 curies ^0.7.4 prefixmaps ^0.2.3 pyyaml ^6.0.1 stringcase ^1.2.0 pytest ^8.1.1 beautifulsoup4 >=4.0.0 yamllint ^1.35.1 path ^17.0.0 linkml-runtime ^1.8.3 requests >=2.32.3 linkml ^1.9.1 click >8.0.0,<8.2.0","title":"Dependencies"},{"location":"Repositories/biolink-model/#documentation","text":"","title":"Documentation"},{"location":"Repositories/biolink-model/#biolink-model_1","text":"Biolink Model: https://w3id.org/biolink/biolink-model.yaml Quickstart docs: For a good overview of the biolink-model, watch Chris Mungall's talk at ICBO 2020. Browse the model: https://biolink.github.io/biolink-model named thing association predicate Refer to the following resources for a quick introduction to the Biolink Model: - Introduction to the Biolink Datamodel - Biolink Model - A community driven data model for life sciences (Biocuration 2020) - Slides: https://bit.ly/biolink-model-workshop-biocuration-2020 - Video: https://www.youtube.com/watch?v=RE1hFm8lvJA See also the Biolink Model Documentation for help in understanding , curating , and working with the model.","title":"Biolink Model"},{"location":"Repositories/biolink-model/#introduction","text":"The purpose of the Biolink Model is to provide a high-level datamodel of biological entities (genes, diseases, phenotypes, pathways, individuals, substances, etc), their properties, relationships, and enumerate ways in which they can be associated. The representation is independent of storage technology or metamodel (Solr documents, neo4j/property graphs, RDF/OWL, JSON, CSVs, etc). Different mappings to each of these are provided. The specification of the Biolink Model is a single YAML file built using linkml . The basic elements of the YAML are: Class Definitions: definitions of upper level classes representing both 'named thing' and 'association' Slot Definitions: definitions of slots (aka properties) that can be used to relate members of these classes to other classes or data types. Slots collectively refer to predicates, node properties, and edge properties The model itself is being used in the following projects: - NCATS Biomedical Data Translator - Monarch Initiative - KG-COVID-19 - KG Microbe - Illuminating the Druggable Genome","title":"Introduction"},{"location":"Repositories/biolink-model/#organization","text":"The main source of truth is biolink-model.yaml . This is a YAML file that is intended to be relatively simple to view and edit in its native form. The yaml definition is currently used to derive: JSON Schema Python dataclasses ProtoBuf definitions GraphQL OWL RDF Shape Expressions JSON-LD context SHACL Shapes ShEx Shapes","title":"Organization"},{"location":"Repositories/biolink-model/#citing-biolink-model","text":"Unni DR, Moxon SAT, Bada M, Brush M, Bruskiewich R, Caufield JH, Clemons PA, Dancik V, Dumontier M, Fecho K, Glusman G, Hadlock JJ, Harris NL, Joshi A, Putman T, Qin G, Ramsey SA, Shefchek KA, Solbrig H, Soman K, Thessen AE, Haendel MA, Bizon C, Mungall CJ, The Biomedical Data Translator Consortium (2022). Biolink Model: A universal schema for knowledge graphs in clinical, biomedical, and translational science. Clin Transl Sci. Wiley; 2022 Jun 6; https://onlinelibrary.wiley.com/doi/10.1111/cts.13302","title":"Citing Biolink Model"},{"location":"Repositories/boomer/","text":"boomer Details GitHub INCATools/boomer Language Scala Description Bayesian OWL ontology merging Documentation boomer Bayesian OWL ontology merging Boomer uses a combined logical and probabilistic approach to translate mappings into logical axioms that can be used to merge ontologies. Boomer implements a search algorithm to find the combined ontology with the highest probability that is also logically coherent. Boomer takes as input ontologies, plus mappings with probabilities for OWL interpretations for each mapping, and produces as output a set of cliques (each representing a group of overlapping mappings which interact with each other when selecting logical interpretations), together with a visualization of each clique. The resulting graphics provide a focused view into problematic tangles of mappings; this lends itself extremely well to an iterative inference process with a curator in the loop. Boomer is implemented in Scala, and is built on the Whelk OWL reasoner . Whelk uses immutable data structures which allow Boomer to readily roll back to previous reasoning states in the course of its search algorithm. Boomer\u2019s exhaustive search tests axiom combinations in order of decreasing joint probability. For larger cliques Boomer runs many depth-first \u201cgreedy\u201d searches, with different starting points searched in parallel. For some additional background, see this preprint describing an earlier implementation of the software: https://doi.org/10.1101/048843 Usage Usage: boomer [options] --usage <bool> Print usage and exit --help | -h <bool> Print help message and exit --output | -o <output files/dir name> Name used for folder to ouput clique JSON files; also basename for ontology and Markdown output files. --ptable | -t <filename> TSV file containing table of mappings with probabilities. --ontology | -a <filename> OWL file containing all asserted/background axioms. --prefixes | -p <filename> YAML dictionary of prefix-to-expansion mappings for all prefixes used in the ptable. These namespaces are also used to check for new within-namespace equivalences. --window-count | -w <positive integer> Number of groups to split a clique of mappings into when shuffling between greedy search runs. Windows maintain their order; mappings within a window are shuffled. --runs | -r <positive integer> Number of separate shuffled runs to conduct for each greedy search. --exhaustive-search-limit | -e <positive integer> Maximum size clique for exhaustive search algorithm. Larger cliques use greedy search. --output-internal-axioms | -e <bool> Include axioms used to enforce proper subclass relationships (e.g. generated disjoint sibling classes) in OWL output (default false). --restrict-output-to-prefixes | -e <prefix strings (max of 2)> Generate output only for cliques where a mapping between these two namespaces was resolved as something other than its highest probability option. Running A pre-built copy of Boomer can downloaded from the releases page , e.g., https://github.com/INCATools/boomer/releases/download/v0.1/boomer-0.1.tgz . After unzipping the archive you should see a bin and a lib folder. Keep these together in the same folder, and add the bin folder to your path. The current command-line interface is specialized for the term mapping use case (see options above). To run Boomer, you must have Java installed. To set the JVM heap size (usually necessary for processing larger files), use an environment variable: export JAVA_OPTS = -Xmx10G Example command line (from https://github.com/geneontology/go-rhea-boom/blob/master/Makefile) boomer --ptable probs.tsv --ontology go-rhea.ofn --window-count 1 --runs 100 --prefixes prefixes.yaml --output rhea-boom --exhaustive-search-limit 14 --restrict-output-to-prefixes = GO --restrict-output-to-prefixes = RHEA Building If you want to build the code yourself, you must first install sbt . Clone the repository and run sbt in the project root folder. A few SBT commands will be useful: compile : build the code test : run all tests stage : create an executable for local use at ./target/universal/stage/bin/boomer packageZipTarball : package the executable for release","title":"boomer"},{"location":"Repositories/boomer/#boomer","text":"","title":"boomer"},{"location":"Repositories/boomer/#details","text":"GitHub INCATools/boomer Language Scala Description Bayesian OWL ontology merging","title":"Details"},{"location":"Repositories/boomer/#documentation","text":"","title":"Documentation"},{"location":"Repositories/boomer/#boomer_1","text":"","title":"boomer"},{"location":"Repositories/boomer/#bayesian-owl-ontology-merging","text":"Boomer uses a combined logical and probabilistic approach to translate mappings into logical axioms that can be used to merge ontologies. Boomer implements a search algorithm to find the combined ontology with the highest probability that is also logically coherent. Boomer takes as input ontologies, plus mappings with probabilities for OWL interpretations for each mapping, and produces as output a set of cliques (each representing a group of overlapping mappings which interact with each other when selecting logical interpretations), together with a visualization of each clique. The resulting graphics provide a focused view into problematic tangles of mappings; this lends itself extremely well to an iterative inference process with a curator in the loop. Boomer is implemented in Scala, and is built on the Whelk OWL reasoner . Whelk uses immutable data structures which allow Boomer to readily roll back to previous reasoning states in the course of its search algorithm. Boomer\u2019s exhaustive search tests axiom combinations in order of decreasing joint probability. For larger cliques Boomer runs many depth-first \u201cgreedy\u201d searches, with different starting points searched in parallel. For some additional background, see this preprint describing an earlier implementation of the software: https://doi.org/10.1101/048843","title":"Bayesian OWL ontology merging"},{"location":"Repositories/boomer/#usage","text":"Usage: boomer [options] --usage <bool> Print usage and exit --help | -h <bool> Print help message and exit --output | -o <output files/dir name> Name used for folder to ouput clique JSON files; also basename for ontology and Markdown output files. --ptable | -t <filename> TSV file containing table of mappings with probabilities. --ontology | -a <filename> OWL file containing all asserted/background axioms. --prefixes | -p <filename> YAML dictionary of prefix-to-expansion mappings for all prefixes used in the ptable. These namespaces are also used to check for new within-namespace equivalences. --window-count | -w <positive integer> Number of groups to split a clique of mappings into when shuffling between greedy search runs. Windows maintain their order; mappings within a window are shuffled. --runs | -r <positive integer> Number of separate shuffled runs to conduct for each greedy search. --exhaustive-search-limit | -e <positive integer> Maximum size clique for exhaustive search algorithm. Larger cliques use greedy search. --output-internal-axioms | -e <bool> Include axioms used to enforce proper subclass relationships (e.g. generated disjoint sibling classes) in OWL output (default false). --restrict-output-to-prefixes | -e <prefix strings (max of 2)> Generate output only for cliques where a mapping between these two namespaces was resolved as something other than its highest probability option.","title":"Usage"},{"location":"Repositories/boomer/#running","text":"A pre-built copy of Boomer can downloaded from the releases page , e.g., https://github.com/INCATools/boomer/releases/download/v0.1/boomer-0.1.tgz . After unzipping the archive you should see a bin and a lib folder. Keep these together in the same folder, and add the bin folder to your path. The current command-line interface is specialized for the term mapping use case (see options above). To run Boomer, you must have Java installed. To set the JVM heap size (usually necessary for processing larger files), use an environment variable: export JAVA_OPTS = -Xmx10G","title":"Running"},{"location":"Repositories/boomer/#example-command-line-from-httpsgithubcomgeneontologygo-rhea-boomblobmastermakefile","text":"boomer --ptable probs.tsv --ontology go-rhea.ofn --window-count 1 --runs 100 --prefixes prefixes.yaml --output rhea-boom --exhaustive-search-limit 14 --restrict-output-to-prefixes = GO --restrict-output-to-prefixes = RHEA","title":"Example command line (from https://github.com/geneontology/go-rhea-boom/blob/master/Makefile)"},{"location":"Repositories/boomer/#building","text":"If you want to build the code yourself, you must first install sbt . Clone the repository and run sbt in the project root folder. A few SBT commands will be useful: compile : build the code test : run all tests stage : create an executable for local use at ./target/universal/stage/bin/boomer packageZipTarball : package the executable for release","title":"Building"},{"location":"Repositories/cat-merge/","text":"cat-merge Details GitHub monarch-initiative/cat-merge Language Python Description Tooling for merging individual source KGX files in the Monarch ingest pipeline Dependencies External Dependencies Package Version python ^3.10 click ^8 pandas >=1.4.6,<2.1.0 mkdocs ^1.3.0 scipy >=1.9,<2.0.0 Documentation cat-merge Python library for merging individual source KGX files in the Monarch Initiative ingest pipeline. Dependencies Poetry Pandas Usage Import the merge tool: from cat_merge.merge import merge You can either merge a list of node and edge files: merge ( name = 'monarch-kg' , nodes = [ 'xenbase_gene_nodes.tsv' , 'reactome_pathway_nodes.tsv' , 'monarch_ontology_nodes.tsv' ], edges = [ 'xenbase_gene_to_phenotype_edges.tsv' , 'monarch_ontology_edges.tsv' ] ) Or merge an entire directory: merge ( name = 'monarch-kg' , input_dir = 'transform_output' , output_dir = 'merged-output' )","title":"cat-merge"},{"location":"Repositories/cat-merge/#cat-merge","text":"","title":"cat-merge"},{"location":"Repositories/cat-merge/#details","text":"GitHub monarch-initiative/cat-merge Language Python Description Tooling for merging individual source KGX files in the Monarch ingest pipeline","title":"Details"},{"location":"Repositories/cat-merge/#dependencies","text":"External Dependencies Package Version python ^3.10 click ^8 pandas >=1.4.6,<2.1.0 mkdocs ^1.3.0 scipy >=1.9,<2.0.0","title":"Dependencies"},{"location":"Repositories/cat-merge/#documentation","text":"","title":"Documentation"},{"location":"Repositories/cat-merge/#cat-merge_1","text":"Python library for merging individual source KGX files in the Monarch Initiative ingest pipeline.","title":"cat-merge"},{"location":"Repositories/cat-merge/#dependencies_1","text":"Poetry Pandas","title":"Dependencies"},{"location":"Repositories/cat-merge/#usage","text":"Import the merge tool: from cat_merge.merge import merge You can either merge a list of node and edge files: merge ( name = 'monarch-kg' , nodes = [ 'xenbase_gene_nodes.tsv' , 'reactome_pathway_nodes.tsv' , 'monarch_ontology_nodes.tsv' ], edges = [ 'xenbase_gene_to_phenotype_edges.tsv' , 'monarch_ontology_edges.tsv' ] ) Or merge an entire directory: merge ( name = 'monarch-kg' , input_dir = 'transform_output' , output_dir = 'merged-output' )","title":"Usage"},{"location":"Repositories/closurizer/","text":"closurizer Details GitHub monarch-initiative/closurizer Language Python Description Add closure expansion fields to kgx files following the Golr pattern Dependencies External Dependencies Package Version python ^3.8 click ^8 SQLAlchemy ^1.4.37 duckdb * Documentation Monarch Closurizer Closurizer adds expansion fields to kgx files following the Golr pattern Usage As a module from closurizer.closurizer import add_closure add_closure(node_file=f\"my-kg_nodes.tsv\", edge_file=f\"my-kg_edges.tsv\", kg_archive=f\"my-kg.tar.gz\", closure_file=\"my-relations-non-redundant.tsv\", path=\"output/\", output_file=f\"my-kg-denornalized_edges.tsv\", fields=[\"subject\", \"object\"]) Example Closurizer will produce a denormalized edge file including subject namespace and category along with ID and label closures subject_category subject_closure subject_closure_label subject_namespace subject predicate object object_namespace object_closure_label object_closure object_category biolink:Gene HGNC HGNC:4851 biolink:gene_associated_with_condition MONDO:0007739 MONDO Huntington disease and related disorders, movement disorder MONDO:0000167, MONDO:0005395 biolink:Disease Example source KG Nodes: | category | id | name | in_taxon | |----------------|----------------|----- |-----------| | biolink:Gene | HGNC:4851 | HTT | NCBITaxon:9606 | | biolink:Disease | MONDO:0007739 | Huntington disease | | Edges: | subject | predicate | object | |---------------|----------------------------------------|---------------| | HGNC:4851 | biolink:gene_associated_with_condition | MONDO:0007739 | and a Relation Graph closure tsv file with: subject predicate object MONDO:0007739 rdfs:subClassOf MONDO:0000167 MONDO:0007739 rdfs:subClassOf MONDO:0005395","title":"closurizer"},{"location":"Repositories/closurizer/#closurizer","text":"","title":"closurizer"},{"location":"Repositories/closurizer/#details","text":"GitHub monarch-initiative/closurizer Language Python Description Add closure expansion fields to kgx files following the Golr pattern","title":"Details"},{"location":"Repositories/closurizer/#dependencies","text":"External Dependencies Package Version python ^3.8 click ^8 SQLAlchemy ^1.4.37 duckdb *","title":"Dependencies"},{"location":"Repositories/closurizer/#documentation","text":"","title":"Documentation"},{"location":"Repositories/closurizer/#monarch-closurizer","text":"Closurizer adds expansion fields to kgx files following the Golr pattern","title":"Monarch Closurizer"},{"location":"Repositories/closurizer/#usage","text":"As a module from closurizer.closurizer import add_closure add_closure(node_file=f\"my-kg_nodes.tsv\", edge_file=f\"my-kg_edges.tsv\", kg_archive=f\"my-kg.tar.gz\", closure_file=\"my-relations-non-redundant.tsv\", path=\"output/\", output_file=f\"my-kg-denornalized_edges.tsv\", fields=[\"subject\", \"object\"])","title":"Usage"},{"location":"Repositories/closurizer/#example","text":"Closurizer will produce a denormalized edge file including subject namespace and category along with ID and label closures subject_category subject_closure subject_closure_label subject_namespace subject predicate object object_namespace object_closure_label object_closure object_category biolink:Gene HGNC HGNC:4851 biolink:gene_associated_with_condition MONDO:0007739 MONDO Huntington disease and related disorders, movement disorder MONDO:0000167, MONDO:0005395 biolink:Disease","title":"Example"},{"location":"Repositories/closurizer/#example-source-kg","text":"Nodes: | category | id | name | in_taxon | |----------------|----------------|----- |-----------| | biolink:Gene | HGNC:4851 | HTT | NCBITaxon:9606 | | biolink:Disease | MONDO:0007739 | Huntington disease | | Edges: | subject | predicate | object | |---------------|----------------------------------------|---------------| | HGNC:4851 | biolink:gene_associated_with_condition | MONDO:0007739 | and a Relation Graph closure tsv file with: subject predicate object MONDO:0007739 rdfs:subClassOf MONDO:0000167 MONDO:0007739 rdfs:subClassOf MONDO:0005395","title":"Example source KG"},{"location":"Repositories/dosdp-tools/","text":"dosdp-tools Details GitHub INCATools/dosdp-tools Language Scala Description Utility for working with DOSDP design patterns and OWL ontologies Documentation dosdp-tools dosdp-tools is a command-line utility for working with DOSDP design patterns and OWL ontologies. Given a YAML design pattern following the DOSDP spec , it can either generate ontology axioms from an input table of terms, or instead generate a SPARQL query that can be used to query an ontology for terms matching the pattern. Releases Pre-packaged releases can be downloaded from here . Building If you don't already have it, install sbt on your system. For Mac OS X, it is easily done using Homebrew : brew install sbt Clone the project from GitHub ( git clone git@github.com:INCATools/dosdp-tools.git ). Change into the project directory: cd dosdp-tools . To compile and build the executable package, run: sbt stage You will find executables for Unix and Windows in target/universal/stage/bin/ . These depend on the libraries in target/universal/stage/lib . Usage Usage dosdp-tools [options] command [command options] Options --catalog : catalog file to use for resolving ontology locations --obo-prefixes : Assume prefixes are OBO ontologies; predefine rdf, rdfs, owl, dc, dct, skos, obo, and oio. --ontology : OWL ontology (provide labels, query axioms) --outfile : Output file (OWL or TSV) --prefixes : CURIE prefixes (YAML) --table-format=STRING : Tabular format: TSV (default) or CSV --template=STRING : DOSDP file (YAML). If a local file is not found at the given path, the path will be attempted as a URL. Commands generate [command options] : generate ontology axioms for TSV input to a Dead Simple OWL Design Pattern --add-axiom-source-annotation : Add axiom annotation to generated axioms linking to pattern IRI --axiom-source-annotation-property=STRING : IRI for annotation property to use to link generated axioms to pattern IRI --generate-defined-class : Computed defined class IRI from pattern IRI and variable fillers --infile : Input file (TSV or CSV) --restrict-axioms-column : Data column containing local axiom output restrictions --restrict-axioms-to=STRING : Restrict generated axioms to 'logical', 'annotation', or 'all' (default) prototype : output \"prototype\" axioms using default fillers for a pattern or folder of patterns query [command options] : query an ontology for terms matching a Dead Simple OWL Design Pattern --print-query : Print generated query without running against ontology --reasoner : Reasoner to use for expanding variable constraints. Valid options are ELK, HermiT, or JFact. terms [command options] : dump terms referenced in TSV input and a Dead Simple OWL Design Pattern --infile : Input file (TSV or CSV) dosdp-tools has four modes: generate , query , prototype , and terms : Generate The generate command creates an ontology from a DOSDP pattern file and an input file of tab-separated filler values. Column names in the TSV file need to match variables defined in the DOSDP. A special defined_class column should provide the IRI for the newly created class instantiating the pattern. A provided ontology is used to find labels for terms, needed to generate annotation values. Example: dosdp-tools generate --obo-prefixes = true --template = exposure_to_chemical.yaml --infile = exposure_to_chemical.tsv --outfile = exposure_to_chemical.ofn --ontology = chebi_import.owl Query The query command queries an ontology for terms that meet the logical patterns defined in a DOSDP pattern file. Instead of performing the query, you can also simply print the generated SPARQL. Example: dosdp-tools query --template = entity_attribute_location.yaml --prefixes = prefixes.yaml --print-query Output: PREFIX rdf : <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs : <http://www.w3.org/2000/01/rdf-schema#> PREFIX owl : <http://www.w3.org/2002/07/owl#> SELECT DISTINCT ?defined_class ( STR ( ?defined_class__label ) AS ?defined_class_label ) ?attribute ( STR ( ?attribute__label ) AS ?attribute_label ) ?entity ( STR ( ?entity__label ) AS ?entity_label ) ?location ( STR ( ?location__label ) AS ?location_label ) WHERE { ?defined_class owl : equivalentClass ?ba95b4a7b13f4a86af50c3e0e1182838 . ?ba95b4a7b13f4a86af50c3e0e1182838 owl : intersectionOf / rdf : rest */ rdf : first ?c90d72646ac64cc19318ca3273f11cd6 . ?ba95b4a7b13f4a86af50c3e0e1182838 owl : intersectionOf / rdf : rest */ rdf : first ?attribute . ?ba95b4a7b13f4a86af50c3e0e1182838 owl : intersectionOf / rdf : rest / rdf : rest rdf : nil . ?c90d72646ac64cc19318ca3273f11cd6 owl : onProperty <http://purl.obolibrary.org/obo/RO_0000052> . ?c90d72646ac64cc19318ca3273f11cd6 owl : someValuesFrom ?7f7e348c174d42f0a76663cc59f21e37 . ?7f7e348c174d42f0a76663cc59f21e37 owl : intersectionOf / rdf : rest */ rdf : first ?75f4eb2eae374a77878c36acda870206 . ?7f7e348c174d42f0a76663cc59f21e37 owl : intersectionOf / rdf : rest */ rdf : first ?entity . ?7f7e348c174d42f0a76663cc59f21e37 owl : intersectionOf / rdf : rest / rdf : rest rdf : nil . ?75f4eb2eae374a77878c36acda870206 owl : onProperty <http://purl.obolibrary.org/obo/BFO_0000050> . ?75f4eb2eae374a77878c36acda870206 owl : someValuesFrom ?location . FILTER ( ?entity != ?75f4eb2eae374a77878c36acda870206 ) FILTER ( ?c90d72646ac64cc19318ca3273f11cd6 != ?attribute ) OPTIONAL { ?defined_class rdfs : label ?defined_class__label . } OPTIONAL { ?attribute rdfs : label ?attribute__label . } OPTIONAL { ?entity rdfs : label ?entity__label . } OPTIONAL { ?location rdfs : label ?location__label . } }","title":"dosdp-tools"},{"location":"Repositories/dosdp-tools/#dosdp-tools","text":"","title":"dosdp-tools"},{"location":"Repositories/dosdp-tools/#details","text":"GitHub INCATools/dosdp-tools Language Scala Description Utility for working with DOSDP design patterns and OWL ontologies","title":"Details"},{"location":"Repositories/dosdp-tools/#documentation","text":"","title":"Documentation"},{"location":"Repositories/dosdp-tools/#dosdp-tools_1","text":"dosdp-tools is a command-line utility for working with DOSDP design patterns and OWL ontologies. Given a YAML design pattern following the DOSDP spec , it can either generate ontology axioms from an input table of terms, or instead generate a SPARQL query that can be used to query an ontology for terms matching the pattern.","title":"dosdp-tools"},{"location":"Repositories/dosdp-tools/#releases","text":"Pre-packaged releases can be downloaded from here .","title":"Releases"},{"location":"Repositories/dosdp-tools/#building","text":"If you don't already have it, install sbt on your system. For Mac OS X, it is easily done using Homebrew : brew install sbt Clone the project from GitHub ( git clone git@github.com:INCATools/dosdp-tools.git ). Change into the project directory: cd dosdp-tools . To compile and build the executable package, run: sbt stage You will find executables for Unix and Windows in target/universal/stage/bin/ . These depend on the libraries in target/universal/stage/lib .","title":"Building"},{"location":"Repositories/dosdp-tools/#usage","text":"Usage dosdp-tools [options] command [command options] Options --catalog : catalog file to use for resolving ontology locations --obo-prefixes : Assume prefixes are OBO ontologies; predefine rdf, rdfs, owl, dc, dct, skos, obo, and oio. --ontology : OWL ontology (provide labels, query axioms) --outfile : Output file (OWL or TSV) --prefixes : CURIE prefixes (YAML) --table-format=STRING : Tabular format: TSV (default) or CSV --template=STRING : DOSDP file (YAML). If a local file is not found at the given path, the path will be attempted as a URL. Commands generate [command options] : generate ontology axioms for TSV input to a Dead Simple OWL Design Pattern --add-axiom-source-annotation : Add axiom annotation to generated axioms linking to pattern IRI --axiom-source-annotation-property=STRING : IRI for annotation property to use to link generated axioms to pattern IRI --generate-defined-class : Computed defined class IRI from pattern IRI and variable fillers --infile : Input file (TSV or CSV) --restrict-axioms-column : Data column containing local axiom output restrictions --restrict-axioms-to=STRING : Restrict generated axioms to 'logical', 'annotation', or 'all' (default) prototype : output \"prototype\" axioms using default fillers for a pattern or folder of patterns query [command options] : query an ontology for terms matching a Dead Simple OWL Design Pattern --print-query : Print generated query without running against ontology --reasoner : Reasoner to use for expanding variable constraints. Valid options are ELK, HermiT, or JFact. terms [command options] : dump terms referenced in TSV input and a Dead Simple OWL Design Pattern --infile : Input file (TSV or CSV) dosdp-tools has four modes: generate , query , prototype , and terms :","title":"Usage"},{"location":"Repositories/dosdp-tools/#generate","text":"The generate command creates an ontology from a DOSDP pattern file and an input file of tab-separated filler values. Column names in the TSV file need to match variables defined in the DOSDP. A special defined_class column should provide the IRI for the newly created class instantiating the pattern. A provided ontology is used to find labels for terms, needed to generate annotation values. Example: dosdp-tools generate --obo-prefixes = true --template = exposure_to_chemical.yaml --infile = exposure_to_chemical.tsv --outfile = exposure_to_chemical.ofn --ontology = chebi_import.owl","title":"Generate"},{"location":"Repositories/dosdp-tools/#query","text":"The query command queries an ontology for terms that meet the logical patterns defined in a DOSDP pattern file. Instead of performing the query, you can also simply print the generated SPARQL. Example: dosdp-tools query --template = entity_attribute_location.yaml --prefixes = prefixes.yaml --print-query Output: PREFIX rdf : <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX rdfs : <http://www.w3.org/2000/01/rdf-schema#> PREFIX owl : <http://www.w3.org/2002/07/owl#> SELECT DISTINCT ?defined_class ( STR ( ?defined_class__label ) AS ?defined_class_label ) ?attribute ( STR ( ?attribute__label ) AS ?attribute_label ) ?entity ( STR ( ?entity__label ) AS ?entity_label ) ?location ( STR ( ?location__label ) AS ?location_label ) WHERE { ?defined_class owl : equivalentClass ?ba95b4a7b13f4a86af50c3e0e1182838 . ?ba95b4a7b13f4a86af50c3e0e1182838 owl : intersectionOf / rdf : rest */ rdf : first ?c90d72646ac64cc19318ca3273f11cd6 . ?ba95b4a7b13f4a86af50c3e0e1182838 owl : intersectionOf / rdf : rest */ rdf : first ?attribute . ?ba95b4a7b13f4a86af50c3e0e1182838 owl : intersectionOf / rdf : rest / rdf : rest rdf : nil . ?c90d72646ac64cc19318ca3273f11cd6 owl : onProperty <http://purl.obolibrary.org/obo/RO_0000052> . ?c90d72646ac64cc19318ca3273f11cd6 owl : someValuesFrom ?7f7e348c174d42f0a76663cc59f21e37 . ?7f7e348c174d42f0a76663cc59f21e37 owl : intersectionOf / rdf : rest */ rdf : first ?75f4eb2eae374a77878c36acda870206 . ?7f7e348c174d42f0a76663cc59f21e37 owl : intersectionOf / rdf : rest */ rdf : first ?entity . ?7f7e348c174d42f0a76663cc59f21e37 owl : intersectionOf / rdf : rest / rdf : rest rdf : nil . ?75f4eb2eae374a77878c36acda870206 owl : onProperty <http://purl.obolibrary.org/obo/BFO_0000050> . ?75f4eb2eae374a77878c36acda870206 owl : someValuesFrom ?location . FILTER ( ?entity != ?75f4eb2eae374a77878c36acda870206 ) FILTER ( ?c90d72646ac64cc19318ca3273f11cd6 != ?attribute ) OPTIONAL { ?defined_class rdfs : label ?defined_class__label . } OPTIONAL { ?attribute rdfs : label ?attribute__label . } OPTIONAL { ?entity rdfs : label ?entity__label . } OPTIONAL { ?location rdfs : label ?location__label . } }","title":"Query"},{"location":"Repositories/fenominal/","text":"fenominal Details GitHub monarch-initiative/fenominal Language Java Description Phenomenal text mining for disease and phenotype concepts Documentation fenominal fenominal (\"**F**abulous ph**ENO**type **MIN**ing **AL**gorithm) is a \"phenomenal\" Java library and command-line application for mining of Human Phenotype Ontology terms in clinical texts. This repository comprises a programming library as well as a small command-line application for testing. Many users will prefer the GUI Version of fenominal . Please consult the documentation .","title":"fenominal"},{"location":"Repositories/fenominal/#fenominal","text":"","title":"fenominal"},{"location":"Repositories/fenominal/#details","text":"GitHub monarch-initiative/fenominal Language Java Description Phenomenal text mining for disease and phenotype concepts","title":"Details"},{"location":"Repositories/fenominal/#documentation","text":"","title":"Documentation"},{"location":"Repositories/fenominal/#fenominal_1","text":"fenominal (\"**F**abulous ph**ENO**type **MIN**ing **AL**gorithm) is a \"phenomenal\" Java library and command-line application for mining of Human Phenotype Ontology terms in clinical texts. This repository comprises a programming library as well as a small command-line application for testing. Many users will prefer the GUI Version of fenominal . Please consult the documentation .","title":"fenominal"},{"location":"Repositories/hpo-web/","text":"hpo-web Details GitHub TheJacksonLaboratory/hpo-web Language HTML Description a web application to search and navigate the Human Phenotype Ontology (HPO) Documentation Hpo Web This is the hpo website hosted at https://hpo.jax.org . An Angular application currently at version 14. Developing npm run start Testing npm run test Deploying Currently the HPO site is deployed on the google cloud in the jax-robinson-hpo-01 . See .github/workflows/hpo-web.yml . This deploys the latest main branch to production. This is only needed when a new language gets added or a new ui feature is implemented. (this is not needed on new ontology releases)","title":"hpo-web"},{"location":"Repositories/hpo-web/#hpo-web","text":"","title":"hpo-web"},{"location":"Repositories/hpo-web/#details","text":"GitHub TheJacksonLaboratory/hpo-web Language HTML Description a web application to search and navigate the Human Phenotype Ontology (HPO)","title":"Details"},{"location":"Repositories/hpo-web/#documentation","text":"","title":"Documentation"},{"location":"Repositories/hpo-web/#hpo-web_1","text":"This is the hpo website hosted at https://hpo.jax.org . An Angular application currently at version 14.","title":"Hpo Web"},{"location":"Repositories/hpo-web/#developing","text":"npm run start","title":"Developing"},{"location":"Repositories/hpo-web/#testing","text":"npm run test","title":"Testing"},{"location":"Repositories/hpo-web/#deploying","text":"Currently the HPO site is deployed on the google cloud in the jax-robinson-hpo-01 . See .github/workflows/hpo-web.yml . This deploys the latest main branch to production. This is only needed when a new language gets added or a new ui feature is implemented. (this is not needed on new ontology releases)","title":"Deploying"},{"location":"Repositories/human-phenotype-ontology/","text":"human-phenotype-ontology Details GitHub obophenotype/human-phenotype-ontology Language Makefile Description Ontology for the description of human clinical features Documentation License See license information and instructions how to cite the HPO project Download You should download HPO using the URLs: http://purl.obolibrary.org/obo/hp.obo or http://purl.obolibrary.org/obo/hp.owl Project Homepage http://www.human-phenotype-ontology.org Questions/Requests/Tickets Please post issues at our github tracker If you want to make a term request, please read this first! Please add disease-HPO-class requests also to this tracker! Contact Direct If you have questions, please contact dr.sebastian.koehler@gmail.com or peter.robinson@jax.org Mailing list Consider signing up the HPO mailing list at https://groups.io/g/human-phenotype-ontology Twitter Follow us on twitter under the username @hp_ontology","title":"human-phenotype-ontology"},{"location":"Repositories/human-phenotype-ontology/#human-phenotype-ontology","text":"","title":"human-phenotype-ontology"},{"location":"Repositories/human-phenotype-ontology/#details","text":"GitHub obophenotype/human-phenotype-ontology Language Makefile Description Ontology for the description of human clinical features","title":"Details"},{"location":"Repositories/human-phenotype-ontology/#documentation","text":"","title":"Documentation"},{"location":"Repositories/human-phenotype-ontology/#license","text":"See license information and instructions how to cite the HPO project","title":"License"},{"location":"Repositories/human-phenotype-ontology/#download","text":"You should download HPO using the URLs: http://purl.obolibrary.org/obo/hp.obo or http://purl.obolibrary.org/obo/hp.owl","title":"Download"},{"location":"Repositories/human-phenotype-ontology/#project-homepage","text":"http://www.human-phenotype-ontology.org","title":"Project Homepage"},{"location":"Repositories/human-phenotype-ontology/#questionsrequeststickets","text":"Please post issues at our github tracker If you want to make a term request, please read this first! Please add disease-HPO-class requests also to this tracker!","title":"Questions/Requests/Tickets"},{"location":"Repositories/human-phenotype-ontology/#contact","text":"","title":"Contact"},{"location":"Repositories/human-phenotype-ontology/#direct","text":"If you have questions, please contact dr.sebastian.koehler@gmail.com or peter.robinson@jax.org","title":"Direct"},{"location":"Repositories/human-phenotype-ontology/#mailing-list","text":"Consider signing up the HPO mailing list at https://groups.io/g/human-phenotype-ontology","title":"Mailing list"},{"location":"Repositories/human-phenotype-ontology/#twitter","text":"Follow us on twitter under the username @hp_ontology","title":"Twitter"},{"location":"Repositories/jenkins/","text":"jenkins Details GitHub monarch-initiative/jenkins Language None Description Jenkins configuration for monarch Documentation Monarch Ingest Pipeline Jenkins pipeline for the monarch data ingest FAQ Cannot delete directory x, permission denied In some failure states docker volumes will hang around and the jenkins user will not be able to delete them. In this case ssh in and manually delete the director(ies). A stage fails Rerunning from the failed stage is fine, assuming no code has changed in the Jenkinsfile. Note that the clique leader tsv in the QC script will not work if solr onward fails, since it relys on the build ID of the current pipeline and the scigraph logs. See https://github.com/monarch-initiative/release-utils/blob/master/scripts/parse-clique-warnings.sh Golr load runs out of memory Theres not much that can be done except messing with memory allocations of the various parts, or running on a larger machine. Another option is to decrease the number of concurrent cypher queries here: https://github.com/SciGraph/golr-loader/blob/master/src/main/java/org/monarch/golr/Pipeline.java#L53 Solr and Solr loader memory is set here: https://github.com/monarch-initiative/solr-docker-monarch-golr/blob/master/files/run.sh#L19-L20 Golr load reports \"Cannot contact high_mem:\" high_mem is the name of the jenkins agent on monarch4. This may be a sign of an oncomming out of memory exception, or sometimes it resolves on its own. Couldn't destroy threadgroup [WARNING] Couldn't destroy threadgroup org.codehaus.mojo.exec.ExecJavaMojo$IsolatedThreadGroup[name=org.monarch.golr.SimpleLoaderMain,maxpri=10] java.lang.IllegalThreadStateException ... This happens at the end of the scigraph and solr stages sometimes, but doesn't seem to effect anything. The stage should still pass. I've killed a stage using the jenkins UI but it is still running This seems common especially for jobs running in a container. In these cases you may need to ssh in and manually kill the job.","title":"jenkins"},{"location":"Repositories/jenkins/#jenkins","text":"","title":"jenkins"},{"location":"Repositories/jenkins/#details","text":"GitHub monarch-initiative/jenkins Language None Description Jenkins configuration for monarch","title":"Details"},{"location":"Repositories/jenkins/#documentation","text":"","title":"Documentation"},{"location":"Repositories/jenkins/#monarch-ingest-pipeline","text":"Jenkins pipeline for the monarch data ingest","title":"Monarch Ingest Pipeline"},{"location":"Repositories/jenkins/#faq","text":"Cannot delete directory x, permission denied In some failure states docker volumes will hang around and the jenkins user will not be able to delete them. In this case ssh in and manually delete the director(ies). A stage fails Rerunning from the failed stage is fine, assuming no code has changed in the Jenkinsfile. Note that the clique leader tsv in the QC script will not work if solr onward fails, since it relys on the build ID of the current pipeline and the scigraph logs. See https://github.com/monarch-initiative/release-utils/blob/master/scripts/parse-clique-warnings.sh Golr load runs out of memory Theres not much that can be done except messing with memory allocations of the various parts, or running on a larger machine. Another option is to decrease the number of concurrent cypher queries here: https://github.com/SciGraph/golr-loader/blob/master/src/main/java/org/monarch/golr/Pipeline.java#L53 Solr and Solr loader memory is set here: https://github.com/monarch-initiative/solr-docker-monarch-golr/blob/master/files/run.sh#L19-L20 Golr load reports \"Cannot contact high_mem:\" high_mem is the name of the jenkins agent on monarch4. This may be a sign of an oncomming out of memory exception, or sometimes it resolves on its own. Couldn't destroy threadgroup [WARNING] Couldn't destroy threadgroup org.codehaus.mojo.exec.ExecJavaMojo$IsolatedThreadGroup[name=org.monarch.golr.SimpleLoaderMain,maxpri=10] java.lang.IllegalThreadStateException ... This happens at the end of the scigraph and solr stages sometimes, but doesn't seem to effect anything. The stage should still pass. I've killed a stage using the jenkins UI but it is still running This seems common especially for jobs running in a container. In these cases you may need to ssh in and manually kill the job.","title":"FAQ"},{"location":"Repositories/kghub-downloader/","text":"kghub-downloader Details GitHub monarch-initiative/kghub-downloader Language Python Description Configuration based file caching downloader Dependencies External Dependencies Package Version python >=3.9, <4.0 elasticsearch >7.0, <9.0 compress-json >1.0, <2.0 PyYAML >5.0,<7.0 tqdm >=4.62.3 google-cloud-storage ^2.1.0 typer ^0.12.3 gdown >=4.7.1 boto3 >=1.34.35 pydantic ^2.9.1 pydantic-settings ^2.5.2 Documentation KG-Hub Downloader | Documentation | Repository | PyPI | Overview This is a configuration based file caching downloader with initial support for http requests & queries against elasticsearch. Installation KGHub Downloader is available to install via pip: pip install kghub-downloader Configure The downloader requires a YAML file which contains a list of target URLs to download, and local names to save those downloads. For an example, see example/download.yaml Available options are: * url : The URL to download from. Currently supported: http(s) ftp with glob: option to download files with specific extensions (only with ftp as of now and looks recursively). Google Cloud Storage ( gs:// ) Google Drive ( gdrive:// or https://drive.google.com/...). The file must be publicly accessible. Amazon AWS S3 bucket ( s3:// ) GitHub Release Assets ( git://RepositoryOwner/RepositoryName ) If the URL includes a name in {CURLY_BRACES} , it will be expanded from environment variables. - glob : An optional glob pattern to limit downloading files (FTP only) - local_name : The name to save the file as locally - tag : A tag to use to filter downloads - api : The API to use to download the file. Currently supported: elasticsearch - elastic search options - query_file : The file containing the query to run against the index - index : The elastic search index for query * Note: Google Cloud Storage URLs require that you have set up your credentials as described here . You must: create a service account add the service account to the relevant bucket and download a JSON key for that service account. Then, set the GOOGLE_APPLICATION_CREDENTIALS environment variable to point to that file. Mirorring local files to Amazon AWS S3 bucket requires the following: Create an AWS account Create an IAM user in AWS : This enables getting the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY needed for authentication. These two should be stored as environment variables in the user's system. Create an S3 bucket : This will be the destination for pushing local files. You can also include any secrets like API keys you have set as environment variables using {VARIABLE_NAME} , for example: --- - url : \"https://example.com/myfancyfile.json?key={YOUR_SECRET}\" localname : myfancyfile.json Note: YOUR_SECRET MUST as an environment variable, and be sure to include the {curly braces} in the url string. Usage Downloader can be used directly in Python or via command line In Python from kghub_downloader.download_utils import download_from_yaml download_from_yaml ( yaml_file = \"download.yaml\" , output_dir = \"data\" ) Command Line To download files listed in a download.yaml file: $ downloader [ OPTIONS ] [ YAML_FILE ] Arguments : [YAML_FILE] : List of files to download in YAML format [default: download.yaml] Options : --output-dir TEXT : Path to output directory [default: .] --ignore-cache / --no-ignore-cache : Ignoring already downloaded files and download again [default: no-ignore-cache] --progress / --no-progress : Show progress for individual downloads [default: progress] --fail-on-error / --no-fail-on-error : Do not attempt to download more files if one raises an error [default: no-fail-on-error] --snippet-only / --no-snippet-only : Only download a snippet of the file. [HTTP(S) resources only. [default: no-snippet-only] --verbose / --no-verbose : Show verbose output [default: no-verbose] --tags TEXT : Optional list of tags to limit downloading to --mirror TEXT : Optional remote storage URL to mirror download to. Supported buckets: Google Cloud Storage Examples: $ downloader --output_dir example_output --tags zfin_gene_to_phenotype example.yaml $ downloader --output_dir example_output --mirror gs://your-bucket/desired/directory # Note that if your YAML file is named `download.yaml`, # the argument can be omitted from the CLI call. $ downloader --output_dir example_output Development Install git clone https://github.com/monarch-initiative/kghub-downloader.git cd kghub-downloader poetry install Run tests poetry run pytest NOTE: The tests require gcloud credentials to be set up as described above, using the Monarch github actions service account.","title":"kghub-downloader"},{"location":"Repositories/kghub-downloader/#kghub-downloader","text":"","title":"kghub-downloader"},{"location":"Repositories/kghub-downloader/#details","text":"GitHub monarch-initiative/kghub-downloader Language Python Description Configuration based file caching downloader","title":"Details"},{"location":"Repositories/kghub-downloader/#dependencies","text":"External Dependencies Package Version python >=3.9, <4.0 elasticsearch >7.0, <9.0 compress-json >1.0, <2.0 PyYAML >5.0,<7.0 tqdm >=4.62.3 google-cloud-storage ^2.1.0 typer ^0.12.3 gdown >=4.7.1 boto3 >=1.34.35 pydantic ^2.9.1 pydantic-settings ^2.5.2","title":"Dependencies"},{"location":"Repositories/kghub-downloader/#documentation","text":"","title":"Documentation"},{"location":"Repositories/kghub-downloader/#kg-hub-downloader","text":"| Documentation | Repository | PyPI |","title":"KG-Hub Downloader"},{"location":"Repositories/kghub-downloader/#overview","text":"This is a configuration based file caching downloader with initial support for http requests & queries against elasticsearch.","title":"Overview"},{"location":"Repositories/kghub-downloader/#installation","text":"KGHub Downloader is available to install via pip: pip install kghub-downloader","title":"Installation"},{"location":"Repositories/kghub-downloader/#configure","text":"The downloader requires a YAML file which contains a list of target URLs to download, and local names to save those downloads. For an example, see example/download.yaml Available options are: * url : The URL to download from. Currently supported: http(s) ftp with glob: option to download files with specific extensions (only with ftp as of now and looks recursively). Google Cloud Storage ( gs:// ) Google Drive ( gdrive:// or https://drive.google.com/...). The file must be publicly accessible. Amazon AWS S3 bucket ( s3:// ) GitHub Release Assets ( git://RepositoryOwner/RepositoryName ) If the URL includes a name in {CURLY_BRACES} , it will be expanded from environment variables. - glob : An optional glob pattern to limit downloading files (FTP only) - local_name : The name to save the file as locally - tag : A tag to use to filter downloads - api : The API to use to download the file. Currently supported: elasticsearch - elastic search options - query_file : The file containing the query to run against the index - index : The elastic search index for query * Note: Google Cloud Storage URLs require that you have set up your credentials as described here . You must: create a service account add the service account to the relevant bucket and download a JSON key for that service account. Then, set the GOOGLE_APPLICATION_CREDENTIALS environment variable to point to that file. Mirorring local files to Amazon AWS S3 bucket requires the following: Create an AWS account Create an IAM user in AWS : This enables getting the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY needed for authentication. These two should be stored as environment variables in the user's system. Create an S3 bucket : This will be the destination for pushing local files. You can also include any secrets like API keys you have set as environment variables using {VARIABLE_NAME} , for example: --- - url : \"https://example.com/myfancyfile.json?key={YOUR_SECRET}\" localname : myfancyfile.json Note: YOUR_SECRET MUST as an environment variable, and be sure to include the {curly braces} in the url string.","title":"Configure"},{"location":"Repositories/kghub-downloader/#usage","text":"Downloader can be used directly in Python or via command line","title":"Usage"},{"location":"Repositories/kghub-downloader/#in-python","text":"from kghub_downloader.download_utils import download_from_yaml download_from_yaml ( yaml_file = \"download.yaml\" , output_dir = \"data\" )","title":"In Python"},{"location":"Repositories/kghub-downloader/#command-line","text":"To download files listed in a download.yaml file: $ downloader [ OPTIONS ] [ YAML_FILE ] Arguments : [YAML_FILE] : List of files to download in YAML format [default: download.yaml] Options : --output-dir TEXT : Path to output directory [default: .] --ignore-cache / --no-ignore-cache : Ignoring already downloaded files and download again [default: no-ignore-cache] --progress / --no-progress : Show progress for individual downloads [default: progress] --fail-on-error / --no-fail-on-error : Do not attempt to download more files if one raises an error [default: no-fail-on-error] --snippet-only / --no-snippet-only : Only download a snippet of the file. [HTTP(S) resources only. [default: no-snippet-only] --verbose / --no-verbose : Show verbose output [default: no-verbose] --tags TEXT : Optional list of tags to limit downloading to --mirror TEXT : Optional remote storage URL to mirror download to. Supported buckets: Google Cloud Storage Examples: $ downloader --output_dir example_output --tags zfin_gene_to_phenotype example.yaml $ downloader --output_dir example_output --mirror gs://your-bucket/desired/directory # Note that if your YAML file is named `download.yaml`, # the argument can be omitted from the CLI call. $ downloader --output_dir example_output","title":"Command Line"},{"location":"Repositories/kghub-downloader/#development","text":"","title":"Development"},{"location":"Repositories/kghub-downloader/#install","text":"git clone https://github.com/monarch-initiative/kghub-downloader.git cd kghub-downloader poetry install","title":"Install"},{"location":"Repositories/kghub-downloader/#run-tests","text":"poetry run pytest NOTE: The tests require gcloud credentials to be set up as described above, using the Monarch github actions service account.","title":"Run tests"},{"location":"Repositories/kgx/","text":"kgx Details GitHub biolink/kgx Language Python Description KGX is a Python library for exchanging Knowledge Graphs Dependencies External Dependencies Package Version python ^3.9 Click * SPARQLWrapper >=1.8.2 bmt ^1.4.0 cachetools ^5.0.0 deprecation ^2.1.0 docker ^6.0.0 docutils >=0.18.1 ijson ^3.1.3 inflection ^0.5.1 jsonlines ^4.0.0 jsonstreams ^0.6.0 linkml ^1.9.1 linkml-runtime ^1.9.1 linkml-map ^0.3.8 mypy * neo4j >=4.4.10 networkx * ordered-set ^4.0.2 pandas >1.0.3 prefixcommons ^0.1.4 prologterms ^0.0.6 pytest * python-dateutil ^2.8.1 pyyaml * rdflib >=6.0.0 shexjsg * stringcase ^1.2.0 terminaltables ^3.1.0 tox ^4.13.0 validators ^0.20.0 pyarrow ^15.0.2 recommonmark 0.5.0 sphinx 5.3.0 Documentation Knowledge Graph Exchange KGX (Knowledge Graph Exchange) is a Python library and set of command line utilities for exchanging Knowledge Graphs (KGs) that conform to or are aligned to the Biolink Model . The core datamodel is a Property Graph (PG), represented internally in Python using a networkx MultiDiGraph model . KGX allows conversion to and from: RDF serializations (read/write) and SPARQL endpoints (read) Neo4j endpoints (read) or Neo4j dumps (write) CSV/TSV and JSON (see associated data formats and example script to load CSV/TSV to Neo4j ) Reasoner Standard API format OBOGraph JSON format KGX will also provide validation, to ensure the KGs are conformant to the Biolink Model: making sure nodes are categorized using Biolink classes, edges are labeled using valid Biolink relationship types, and valid properties are used. Internal representation is a property graph, specifically a networkx MultiDiGraph. The structure of this graph is expected to conform to the Biolink Model standard, as specified in the KGX format specification . In addition to the main code-base, KGX also provides a series of command line operations . Example usage Validate: poetry run kgx validate -i tsv tests/resources/merge/test2_nodes.tsv tests/resources/merge/test2_edges.tsv Merge: poetry run kgx merge \u2014merge-config tests/resources/test-merge.yaml Graph Summary: poetry run kgx graph-summary -i tests/resources/graph_nodes.tsv -o summary.txt Transform: poetry run kgx transform \u2014transform-config tests/resources/test-transform-tsv-rdf.yaml Error Detection and Reporting Non-redundant JSON-formatted structured error logging is now provided in KGX Transformer, Validator, GraphSummary and MetaKnowledgeGraph operations. See the various unit tests for the general design pattern (using the Validator as an example here): from kgx.validator import Validator from kgx.transformer import Transformer Validator . set_biolink_model ( \"2.11.0\" ) # Validator assumes the currently set Biolink Release validator = Validator () transformer = Transformer ( stream = True ) transformer . transform ( input_args = { \"filename\" : [ \"graph_nodes.tsv\" , \"graph_edges.tsv\" , ], \"format\" : \"tsv\" , }, output_args = { \"format\" : \"null\" }, inspector = validator , ) # Both the Validator and the Transformer can independently capture errors # The Validator, from the overall semantics of the graph... # Here, we just report severe Errors from the Validator (no Warnings) validator . write_report ( open ( \"validation_errors.json\" , \"w\" ), \"Error\" ) # The Transformer, from the syntax of the input files... # Here, we catch *all* Errors and Warnings (by not providing a filter) transformer . write_report ( open ( \"input_errors.json\" , \"w\" )) The JSON error outputs will look something like this: { \"ERROR\" : { \"MISSING_EDGE_PROPERTY\" : { \"Required edge property 'id' is missing\" : [ \"A:123->X:1\" , \"B:456->Y:2\" ], \"Required edge property 'object' is missing\" : [ \"A:123->X:1\" ], \"Required edge property 'predicate' is missing\" : [ \"A:123->X:1\" ], \"Required edge property 'subject' is missing\" : [ \"A:123->X:1\" , \"B:456->Y:2\" ] } }, \"WARNING\" : { \"DUPLICATE_NODE\" : { \"Node 'id' duplicated in input data\" : [ \"MONDO:0010011\" , \"REACT:R-HSA-5635838\" ] } } } This system reduces the significant redundancies of earlier line-oriented KGX logging text output files, in that graph entities with the same class of error are simply aggregated in lists of names/identifiers at the leaf level of the JSON structure. The top level JSON tags originate from the MessageLevel class and the second level tags from the ErrorType class in the error_detection module, while the third level messages are hard coded as log_error method messages in the code. It is likely that additional error conditions within KGX can be efficiently captured and reported in the future using this general framework. Installation Installing from PyPI KGX is available on PyPI and can be installed using pip as follows, pip install kgx To install a particular version of KGX, be sure to specify the version number, pip install kgx == 0 .5.0 Installing from GitHub Clone the GitHub repository and then install, git clone https://github.com/biolink/kgx cd kgx poetry install Setting up a testing environment for Neo4j This release of KGX supports graph source and sink transactions with the 4.3 release of Neo4j. KGX has a suite of tests that rely on Docker containers to run Neo4j specific tests. To set up the required containers, first install Docker on your local machine. Once Docker is up and running, run the following commands: docker run -d --rm --name kgx-neo4j-integration-test -p 7474 :7474 -p 7687 :7687 --env NEO4J_AUTH = neo4j/test neo4j:4.3 docker run -d --rm --name kgx-neo4j-unit-test -p 8484 :7474 -p 8888 :7687 --env NEO4J_AUTH = neo4j/test neo4j:4.3 Note: Setting up the Neo4j container is optional. If there is no container set up then the tests that rely on them are skipped.","title":"kgx"},{"location":"Repositories/kgx/#kgx","text":"","title":"kgx"},{"location":"Repositories/kgx/#details","text":"GitHub biolink/kgx Language Python Description KGX is a Python library for exchanging Knowledge Graphs","title":"Details"},{"location":"Repositories/kgx/#dependencies","text":"External Dependencies Package Version python ^3.9 Click * SPARQLWrapper >=1.8.2 bmt ^1.4.0 cachetools ^5.0.0 deprecation ^2.1.0 docker ^6.0.0 docutils >=0.18.1 ijson ^3.1.3 inflection ^0.5.1 jsonlines ^4.0.0 jsonstreams ^0.6.0 linkml ^1.9.1 linkml-runtime ^1.9.1 linkml-map ^0.3.8 mypy * neo4j >=4.4.10 networkx * ordered-set ^4.0.2 pandas >1.0.3 prefixcommons ^0.1.4 prologterms ^0.0.6 pytest * python-dateutil ^2.8.1 pyyaml * rdflib >=6.0.0 shexjsg * stringcase ^1.2.0 terminaltables ^3.1.0 tox ^4.13.0 validators ^0.20.0 pyarrow ^15.0.2 recommonmark 0.5.0 sphinx 5.3.0","title":"Dependencies"},{"location":"Repositories/kgx/#documentation","text":"","title":"Documentation"},{"location":"Repositories/kgx/#knowledge-graph-exchange","text":"KGX (Knowledge Graph Exchange) is a Python library and set of command line utilities for exchanging Knowledge Graphs (KGs) that conform to or are aligned to the Biolink Model . The core datamodel is a Property Graph (PG), represented internally in Python using a networkx MultiDiGraph model . KGX allows conversion to and from: RDF serializations (read/write) and SPARQL endpoints (read) Neo4j endpoints (read) or Neo4j dumps (write) CSV/TSV and JSON (see associated data formats and example script to load CSV/TSV to Neo4j ) Reasoner Standard API format OBOGraph JSON format KGX will also provide validation, to ensure the KGs are conformant to the Biolink Model: making sure nodes are categorized using Biolink classes, edges are labeled using valid Biolink relationship types, and valid properties are used. Internal representation is a property graph, specifically a networkx MultiDiGraph. The structure of this graph is expected to conform to the Biolink Model standard, as specified in the KGX format specification . In addition to the main code-base, KGX also provides a series of command line operations .","title":"Knowledge Graph Exchange"},{"location":"Repositories/kgx/#example-usage","text":"Validate: poetry run kgx validate -i tsv tests/resources/merge/test2_nodes.tsv tests/resources/merge/test2_edges.tsv Merge: poetry run kgx merge \u2014merge-config tests/resources/test-merge.yaml Graph Summary: poetry run kgx graph-summary -i tests/resources/graph_nodes.tsv -o summary.txt Transform: poetry run kgx transform \u2014transform-config tests/resources/test-transform-tsv-rdf.yaml","title":"Example usage"},{"location":"Repositories/kgx/#error-detection-and-reporting","text":"Non-redundant JSON-formatted structured error logging is now provided in KGX Transformer, Validator, GraphSummary and MetaKnowledgeGraph operations. See the various unit tests for the general design pattern (using the Validator as an example here): from kgx.validator import Validator from kgx.transformer import Transformer Validator . set_biolink_model ( \"2.11.0\" ) # Validator assumes the currently set Biolink Release validator = Validator () transformer = Transformer ( stream = True ) transformer . transform ( input_args = { \"filename\" : [ \"graph_nodes.tsv\" , \"graph_edges.tsv\" , ], \"format\" : \"tsv\" , }, output_args = { \"format\" : \"null\" }, inspector = validator , ) # Both the Validator and the Transformer can independently capture errors # The Validator, from the overall semantics of the graph... # Here, we just report severe Errors from the Validator (no Warnings) validator . write_report ( open ( \"validation_errors.json\" , \"w\" ), \"Error\" ) # The Transformer, from the syntax of the input files... # Here, we catch *all* Errors and Warnings (by not providing a filter) transformer . write_report ( open ( \"input_errors.json\" , \"w\" )) The JSON error outputs will look something like this: { \"ERROR\" : { \"MISSING_EDGE_PROPERTY\" : { \"Required edge property 'id' is missing\" : [ \"A:123->X:1\" , \"B:456->Y:2\" ], \"Required edge property 'object' is missing\" : [ \"A:123->X:1\" ], \"Required edge property 'predicate' is missing\" : [ \"A:123->X:1\" ], \"Required edge property 'subject' is missing\" : [ \"A:123->X:1\" , \"B:456->Y:2\" ] } }, \"WARNING\" : { \"DUPLICATE_NODE\" : { \"Node 'id' duplicated in input data\" : [ \"MONDO:0010011\" , \"REACT:R-HSA-5635838\" ] } } } This system reduces the significant redundancies of earlier line-oriented KGX logging text output files, in that graph entities with the same class of error are simply aggregated in lists of names/identifiers at the leaf level of the JSON structure. The top level JSON tags originate from the MessageLevel class and the second level tags from the ErrorType class in the error_detection module, while the third level messages are hard coded as log_error method messages in the code. It is likely that additional error conditions within KGX can be efficiently captured and reported in the future using this general framework.","title":"Error Detection and Reporting"},{"location":"Repositories/kgx/#installation","text":"","title":"Installation"},{"location":"Repositories/kgx/#installing-from-pypi","text":"KGX is available on PyPI and can be installed using pip as follows, pip install kgx To install a particular version of KGX, be sure to specify the version number, pip install kgx == 0 .5.0","title":"Installing from PyPI"},{"location":"Repositories/kgx/#installing-from-github","text":"Clone the GitHub repository and then install, git clone https://github.com/biolink/kgx cd kgx poetry install","title":"Installing from GitHub"},{"location":"Repositories/kgx/#setting-up-a-testing-environment-for-neo4j","text":"This release of KGX supports graph source and sink transactions with the 4.3 release of Neo4j. KGX has a suite of tests that rely on Docker containers to run Neo4j specific tests. To set up the required containers, first install Docker on your local machine. Once Docker is up and running, run the following commands: docker run -d --rm --name kgx-neo4j-integration-test -p 7474 :7474 -p 7687 :7687 --env NEO4J_AUTH = neo4j/test neo4j:4.3 docker run -d --rm --name kgx-neo4j-unit-test -p 8484 :7474 -p 8888 :7687 --env NEO4J_AUTH = neo4j/test neo4j:4.3 Note: Setting up the Neo4j container is optional. If there is no container set up then the tests that rely on them are skipped.","title":"Setting up a testing environment for Neo4j"},{"location":"Repositories/knowledge-graph-hub.github.io/","text":"knowledge-graph-hub.github.io Details GitHub Knowledge-Graph-Hub/knowledge-graph-hub.github.io Language Python Description None Dependencies External Dependencies Package Version python ^3.9 boto3 ^1.35.26 click ^8.1.7 kgx ^2.4.2 requests ^2.32.3 sh ^2.0.7 mkdocs ^1.6.1 linkml ^1.8.3 mkdocs-material ^9.5.37 mkdocs-table-reader-plugin ^3.1.0 Documentation Knowledge Graph Hub: Web Site and Metadata Generation This repository contains the code for assembling the Knowledge Graph Hub (KG-Hub) web site. The site contains documentation for the KG-Hub project. See below for details on the Knowledge Graph Registry (KG-Registry). Visit the site at https://kghub.org/ . Registry The KG-Hub site also hosts the KG-Registry. The site it at https://kghub.org/kg-registry/ . The repository for the registry is at https://github.com/Knowledge-Graph-Hub/kg-registry . To request addition of a new KG project to the registry, please open an issue here . For Developers This project uses poetry . After cloning the repository, it may be installed by running poetry install from its root directory. To build the site, do the following: Install Poetry if needed. Clone the repository Change to the root directory of the cloned repo, then run poetry install . Change to the docs directory and run build_site.sh . This will retrieve recent metadata. Run mkdocs gh-deploy to deploy the site. License Projects and resources mentioned on KG-Hub or the KG-Registry may vary in code and data licensing. Please consult documentation for each resource regarding reuse.","title":"knowledge-graph-hub.github.io"},{"location":"Repositories/knowledge-graph-hub.github.io/#knowledge-graph-hubgithubio","text":"","title":"knowledge-graph-hub.github.io"},{"location":"Repositories/knowledge-graph-hub.github.io/#details","text":"GitHub Knowledge-Graph-Hub/knowledge-graph-hub.github.io Language Python Description None","title":"Details"},{"location":"Repositories/knowledge-graph-hub.github.io/#dependencies","text":"External Dependencies Package Version python ^3.9 boto3 ^1.35.26 click ^8.1.7 kgx ^2.4.2 requests ^2.32.3 sh ^2.0.7 mkdocs ^1.6.1 linkml ^1.8.3 mkdocs-material ^9.5.37 mkdocs-table-reader-plugin ^3.1.0","title":"Dependencies"},{"location":"Repositories/knowledge-graph-hub.github.io/#documentation","text":"","title":"Documentation"},{"location":"Repositories/knowledge-graph-hub.github.io/#knowledge-graph-hub-web-site-and-metadata-generation","text":"This repository contains the code for assembling the Knowledge Graph Hub (KG-Hub) web site. The site contains documentation for the KG-Hub project. See below for details on the Knowledge Graph Registry (KG-Registry). Visit the site at https://kghub.org/ .","title":"Knowledge Graph Hub: Web Site and Metadata Generation"},{"location":"Repositories/knowledge-graph-hub.github.io/#registry","text":"The KG-Hub site also hosts the KG-Registry. The site it at https://kghub.org/kg-registry/ . The repository for the registry is at https://github.com/Knowledge-Graph-Hub/kg-registry . To request addition of a new KG project to the registry, please open an issue here .","title":"Registry"},{"location":"Repositories/knowledge-graph-hub.github.io/#for-developers","text":"This project uses poetry . After cloning the repository, it may be installed by running poetry install from its root directory. To build the site, do the following: Install Poetry if needed. Clone the repository Change to the root directory of the cloned repo, then run poetry install . Change to the docs directory and run build_site.sh . This will retrieve recent metadata. Run mkdocs gh-deploy to deploy the site.","title":"For Developers"},{"location":"Repositories/knowledge-graph-hub.github.io/#license","text":"Projects and resources mentioned on KG-Hub or the KG-Registry may vary in code and data licensing. Please consult documentation for each resource regarding reuse.","title":"License"},{"location":"Repositories/koza/","text":"koza Details GitHub monarch-initiative/koza Language Python Description Data transformation framework for LinkML data models Dependencies External Dependencies Package Version python ^3.10 duckdb * loguru * ordered-set >=4.1.0 pydantic ^2.4 pyyaml >=5.0.0 requests ^2.24.0 sssom >=0.4 typer >=0.12.3 mergedeep 1.3.4 tqdm ^4.67.1 coverage ^7.6.10 Documentation Koza - a data transformation framework Documentation Disclaimer : Koza is in beta - we are looking for testers! Overview Transform csv, json, yaml, jsonl, and xml and converting them to a target csv, json, or jsonl format based on your dataclass model. Koza also can output data in the KGX format Write data transforms in semi-declarative Python Configure source files, expected columns/json properties and path filters, field filters, and metadata in yaml Create or import mapping files to be used in ingests (eg id mapping, type mappings) Create and use translation tables to map between source and target vocabularies Installation Koza is available on PyPi and can be installed via pip/pipx: [pip|pipx] install koza Usage NOTE: As of version 0.2.0, there is a new method for getting your ingest's KozaApp instance. Please see the updated documentation for details. See the Koza documentation for usage information Try the Examples Validate Give Koza a local or remote csv file, and get some basic information (headers, number of rows) koza validate \\ --file https://raw.githubusercontent.com/monarch-initiative/koza/main/examples/data/string.tsv \\ --delimiter ' ' Sending a json or jsonl formatted file will confirm if the file is valid json or jsonl koza validate \\ --file ./examples/data/ZFIN_PHENOTYPE_0.jsonl.gz \\ --format jsonl koza validate \\ --file ./examples/data/ddpheno.json.gz \\ --format json Transform Run the example ingest, \"string/protein-links-detailed\" koza transform \\ --source examples/string/protein-links-detailed.yaml \\ --global-table examples/translation_table.yaml koza transform \\ --source examples/string-declarative/protein-links-detailed.yaml \\ --global-table examples/translation_table.yaml Note : Koza expects a directory structure as described in the above example with the source config file and transform code in the same directory: . \u251c\u2500\u2500 ... \u2502 \u251c\u2500\u2500 your_source \u2502 \u2502 \u251c\u2500\u2500 your_ingest.yaml \u2502 \u2502 \u2514\u2500\u2500 your_ingest.py \u2502 \u2514\u2500\u2500 some_translation_table.yaml \u2514\u2500\u2500 ...","title":"koza"},{"location":"Repositories/koza/#koza","text":"","title":"koza"},{"location":"Repositories/koza/#details","text":"GitHub monarch-initiative/koza Language Python Description Data transformation framework for LinkML data models","title":"Details"},{"location":"Repositories/koza/#dependencies","text":"External Dependencies Package Version python ^3.10 duckdb * loguru * ordered-set >=4.1.0 pydantic ^2.4 pyyaml >=5.0.0 requests ^2.24.0 sssom >=0.4 typer >=0.12.3 mergedeep 1.3.4 tqdm ^4.67.1 coverage ^7.6.10","title":"Dependencies"},{"location":"Repositories/koza/#documentation","text":"","title":"Documentation"},{"location":"Repositories/koza/#koza-a-data-transformation-framework","text":"Documentation Disclaimer : Koza is in beta - we are looking for testers!","title":"Koza - a data transformation framework"},{"location":"Repositories/koza/#overview","text":"Transform csv, json, yaml, jsonl, and xml and converting them to a target csv, json, or jsonl format based on your dataclass model. Koza also can output data in the KGX format Write data transforms in semi-declarative Python Configure source files, expected columns/json properties and path filters, field filters, and metadata in yaml Create or import mapping files to be used in ingests (eg id mapping, type mappings) Create and use translation tables to map between source and target vocabularies","title":"Overview"},{"location":"Repositories/koza/#installation","text":"Koza is available on PyPi and can be installed via pip/pipx: [pip|pipx] install koza","title":"Installation"},{"location":"Repositories/koza/#usage","text":"NOTE: As of version 0.2.0, there is a new method for getting your ingest's KozaApp instance. Please see the updated documentation for details. See the Koza documentation for usage information","title":"Usage"},{"location":"Repositories/koza/#try-the-examples","text":"","title":"Try the Examples"},{"location":"Repositories/koza/#validate","text":"Give Koza a local or remote csv file, and get some basic information (headers, number of rows) koza validate \\ --file https://raw.githubusercontent.com/monarch-initiative/koza/main/examples/data/string.tsv \\ --delimiter ' ' Sending a json or jsonl formatted file will confirm if the file is valid json or jsonl koza validate \\ --file ./examples/data/ZFIN_PHENOTYPE_0.jsonl.gz \\ --format jsonl koza validate \\ --file ./examples/data/ddpheno.json.gz \\ --format json","title":"Validate"},{"location":"Repositories/koza/#transform","text":"Run the example ingest, \"string/protein-links-detailed\" koza transform \\ --source examples/string/protein-links-detailed.yaml \\ --global-table examples/translation_table.yaml koza transform \\ --source examples/string-declarative/protein-links-detailed.yaml \\ --global-table examples/translation_table.yaml Note : Koza expects a directory structure as described in the above example with the source config file and transform code in the same directory: . \u251c\u2500\u2500 ... \u2502 \u251c\u2500\u2500 your_source \u2502 \u2502 \u251c\u2500\u2500 your_ingest.yaml \u2502 \u2502 \u2514\u2500\u2500 your_ingest.py \u2502 \u2514\u2500\u2500 some_translation_table.yaml \u2514\u2500\u2500 ...","title":"Transform"},{"location":"Repositories/linkml-runtime/","text":"linkml-runtime Details GitHub linkml/linkml-runtime Language Python Description Runtime support for linkml generated models Dependencies External Dependencies Package Version python ^3.9 Documentation linkml-runtime Runtime support for linkml generated data classes. About This Python library provides runtime support for LinkML datamodels. See the LinkML repo for the Python Dataclass Generator which will convert a schema into a Python object model. That model will have dependencies on functionality in this library. The library also provides loaders: for loading from external formats such as json, yaml, rdf, tsv into LinkML instances dumpers: the reverse operation See working with data in the documentation for more details This repository also contains the Python dataclass representation of the LinkML metamodel , and various utility functions that are useful for working with LinkML data and schemas. It also includes the SchemaView class for working with LinkML schemas. Notebooks See the notebooks folder for examples.","title":"linkml-runtime"},{"location":"Repositories/linkml-runtime/#linkml-runtime","text":"","title":"linkml-runtime"},{"location":"Repositories/linkml-runtime/#details","text":"GitHub linkml/linkml-runtime Language Python Description Runtime support for linkml generated models","title":"Details"},{"location":"Repositories/linkml-runtime/#dependencies","text":"External Dependencies Package Version python ^3.9","title":"Dependencies"},{"location":"Repositories/linkml-runtime/#documentation","text":"","title":"Documentation"},{"location":"Repositories/linkml-runtime/#linkml-runtime_1","text":"Runtime support for linkml generated data classes.","title":"linkml-runtime"},{"location":"Repositories/linkml-runtime/#about","text":"This Python library provides runtime support for LinkML datamodels. See the LinkML repo for the Python Dataclass Generator which will convert a schema into a Python object model. That model will have dependencies on functionality in this library. The library also provides loaders: for loading from external formats such as json, yaml, rdf, tsv into LinkML instances dumpers: the reverse operation See working with data in the documentation for more details This repository also contains the Python dataclass representation of the LinkML metamodel , and various utility functions that are useful for working with LinkML data and schemas. It also includes the SchemaView class for working with LinkML schemas.","title":"About"},{"location":"Repositories/linkml-runtime/#notebooks","text":"See the notebooks folder for examples.","title":"Notebooks"},{"location":"Repositories/loinc2hpoAnnotation/","text":"loinc2hpoAnnotation Details GitHub monarch-initiative/loinc2hpoAnnotation Language None Description None Documentation loinc2hpoAnnotation This is a WIP to copy (not fork) this repository in order to configure a Maven build and release for the content in the form of a Jar. Additional development will occur in this repository and the original one will be archived at some point.","title":"loinc2hpoAnnotation"},{"location":"Repositories/loinc2hpoAnnotation/#loinc2hpoannotation","text":"","title":"loinc2hpoAnnotation"},{"location":"Repositories/loinc2hpoAnnotation/#details","text":"GitHub monarch-initiative/loinc2hpoAnnotation Language None Description None","title":"Details"},{"location":"Repositories/loinc2hpoAnnotation/#documentation","text":"","title":"Documentation"},{"location":"Repositories/loinc2hpoAnnotation/#loinc2hpoannotation_1","text":"This is a WIP to copy (not fork) this repository in order to configure a Maven build and release for the content in the form of a Jar. Additional development will occur in this repository and the original one will be archived at some point.","title":"loinc2hpoAnnotation"},{"location":"Repositories/monarch-app/","text":"monarch-app Details GitHub monarch-initiative/monarch-app Language Vue Description Monarch Initiative website and API Documentation Welcome to the Monarch Initiative The Monarch Initiative is an extensive knowledge graph and ecosystem of tools made for the benefit of clinicians, researchers, and scientists. The knowledge graph consists of millions of entities \u2013 genes, diseases, phenotypes, and many more \u2013 imported from dozens of sources. We welcome the contributions of the community to help us maintain and improve the knowledge graph and the tools that use it. To help get started on contributing to the Monarch Initiative, please see our CONTRIBUTING.md file. Monarch App \u2b50\ufe0f\u2b50\ufe0f View the website \u2b50\ufe0f\u2b50\ufe0f The monarch-app repo contains the source code for the Monarch Initiative website (a Vue webapp), as well as monarch-py , a Python library for interacting with the Monarch Initiative knowledge graph. The monarch-py library also includes a FastAPI module that serves as the website's backend. Together, the frontend and backend make up the stack used to deply and run the Monarch Initiative website. If you wish to run Monarch-App as a local web application, please install the requirements below and then follow on to the usage section to start the application. Refer to Using Local Data to see how you can run the full Monarch website locally and use your own data store. The app also offers a widget called Phenogrid that can be embedded in any website. For more information on how to use the Phenogrid widget, please refer to the Phenogrid documentation . For developers The monarch-app repository contains the code to run the Monarch Initiative website in the frontend and backend directories as well as documentation, helper scripts, Docker files and services to help set up a local environment for development and for deployment. To start development, please refer to the CONTRIBUTING.md document with this README. If you are planning to only develop the frontend or backend of the application you can refer directly to the README and CONTRIBUTING files in each of those sections.","title":"monarch-app"},{"location":"Repositories/monarch-app/#monarch-app","text":"","title":"monarch-app"},{"location":"Repositories/monarch-app/#details","text":"GitHub monarch-initiative/monarch-app Language Vue Description Monarch Initiative website and API","title":"Details"},{"location":"Repositories/monarch-app/#documentation","text":"","title":"Documentation"},{"location":"Repositories/monarch-app/#welcome-to-the-monarch-initiative","text":"The Monarch Initiative is an extensive knowledge graph and ecosystem of tools made for the benefit of clinicians, researchers, and scientists. The knowledge graph consists of millions of entities \u2013 genes, diseases, phenotypes, and many more \u2013 imported from dozens of sources. We welcome the contributions of the community to help us maintain and improve the knowledge graph and the tools that use it. To help get started on contributing to the Monarch Initiative, please see our CONTRIBUTING.md file.","title":"Welcome to the Monarch Initiative"},{"location":"Repositories/monarch-app/#monarch-app_1","text":"\u2b50\ufe0f\u2b50\ufe0f View the website \u2b50\ufe0f\u2b50\ufe0f The monarch-app repo contains the source code for the Monarch Initiative website (a Vue webapp), as well as monarch-py , a Python library for interacting with the Monarch Initiative knowledge graph. The monarch-py library also includes a FastAPI module that serves as the website's backend. Together, the frontend and backend make up the stack used to deply and run the Monarch Initiative website. If you wish to run Monarch-App as a local web application, please install the requirements below and then follow on to the usage section to start the application. Refer to Using Local Data to see how you can run the full Monarch website locally and use your own data store. The app also offers a widget called Phenogrid that can be embedded in any website. For more information on how to use the Phenogrid widget, please refer to the Phenogrid documentation .","title":"Monarch App"},{"location":"Repositories/monarch-app/#for-developers","text":"The monarch-app repository contains the code to run the Monarch Initiative website in the frontend and backend directories as well as documentation, helper scripts, Docker files and services to help set up a local environment for development and for deployment. To start development, please refer to the CONTRIBUTING.md document with this README. If you are planning to only develop the frontend or backend of the application you can refer directly to the README and CONTRIBUTING files in each of those sections.","title":"For developers"},{"location":"Repositories/monarch-file-server/","text":"monarch-file-server Details GitHub monarch-initiative/monarch-file-server Language Python Description Terraform, scripts, and documentation for the monarch public file server Documentation monarch-file-server Terraform, scripts, and documentation for the monarch public file server Note This repo will likely be subsumed and is for prototyping purposes Terraform configuration for google cloud storage bucket and load balancer for running https://data-test.monarchinitiative.org/ A script for generating index.html scripts/directory_indexer.py Documentation: https://cloud.google.com/storage/docs/hosting-static-website","title":"monarch-file-server"},{"location":"Repositories/monarch-file-server/#monarch-file-server","text":"","title":"monarch-file-server"},{"location":"Repositories/monarch-file-server/#details","text":"GitHub monarch-initiative/monarch-file-server Language Python Description Terraform, scripts, and documentation for the monarch public file server","title":"Details"},{"location":"Repositories/monarch-file-server/#documentation","text":"","title":"Documentation"},{"location":"Repositories/monarch-file-server/#monarch-file-server_1","text":"Terraform, scripts, and documentation for the monarch public file server Note This repo will likely be subsumed and is for prototyping purposes Terraform configuration for google cloud storage bucket and load balancer for running https://data-test.monarchinitiative.org/ A script for generating index.html scripts/directory_indexer.py Documentation: https://cloud.google.com/storage/docs/hosting-static-website","title":"monarch-file-server"},{"location":"Repositories/monarch-gene-mapping/","text":"monarch-gene-mapping Details GitHub monarch-initiative/monarch-gene-mapping Language Python Description Code for mapping source namespaces to preffered namespacing Dependencies External Dependencies Package Version python ^3.9 pandas ^2.1.3 kghub-downloader ^0.3.4 sssom ^0.4 typer ^0.7 prefixmaps 0.1.7 Documentation monarch-gene-mapping Code for mapping source namespaces to preferred namespacing Strategy This repository creates SSSOM mappings between gene identifiers for use in the Monarch Knowledge Graph. Gene naming authorities (HGNC, Model Organism Databases) are the preferred identifiers, with NCBIGene as a fallback. We prefer the naming sources as the first choice source for mappings. When the naming authority doesn't provide a mapping for an identifier we need to map from, we will use the source of that identifier as a fallback. Finally, a third party gene mapping may be used as a last resort. Installation poetry install Usage python -m monarch_gene_mapping.main --help is a simple UI for processing the mapping data. Special Data Considerations The UniProtKB ID mappings file is huge: about an eleven (11) gigabyte gzip compressed archive (as of November 2022). The Monarch Initiative only targets a subset of species in this file. The standard procedure is to 'pre-filter' the data after downloading but before continued processing. This is the default 'generate' process, but the monarch_gene_mapping.main script allows for discrete processing of this step.","title":"monarch-gene-mapping"},{"location":"Repositories/monarch-gene-mapping/#monarch-gene-mapping","text":"","title":"monarch-gene-mapping"},{"location":"Repositories/monarch-gene-mapping/#details","text":"GitHub monarch-initiative/monarch-gene-mapping Language Python Description Code for mapping source namespaces to preffered namespacing","title":"Details"},{"location":"Repositories/monarch-gene-mapping/#dependencies","text":"External Dependencies Package Version python ^3.9 pandas ^2.1.3 kghub-downloader ^0.3.4 sssom ^0.4 typer ^0.7 prefixmaps 0.1.7","title":"Dependencies"},{"location":"Repositories/monarch-gene-mapping/#documentation","text":"","title":"Documentation"},{"location":"Repositories/monarch-gene-mapping/#monarch-gene-mapping_1","text":"Code for mapping source namespaces to preferred namespacing","title":"monarch-gene-mapping"},{"location":"Repositories/monarch-gene-mapping/#strategy","text":"This repository creates SSSOM mappings between gene identifiers for use in the Monarch Knowledge Graph. Gene naming authorities (HGNC, Model Organism Databases) are the preferred identifiers, with NCBIGene as a fallback. We prefer the naming sources as the first choice source for mappings. When the naming authority doesn't provide a mapping for an identifier we need to map from, we will use the source of that identifier as a fallback. Finally, a third party gene mapping may be used as a last resort.","title":"Strategy"},{"location":"Repositories/monarch-gene-mapping/#installation","text":"poetry install","title":"Installation"},{"location":"Repositories/monarch-gene-mapping/#usage","text":"python -m monarch_gene_mapping.main --help is a simple UI for processing the mapping data.","title":"Usage"},{"location":"Repositories/monarch-gene-mapping/#special-data-considerations","text":"The UniProtKB ID mappings file is huge: about an eleven (11) gigabyte gzip compressed archive (as of November 2022). The Monarch Initiative only targets a subset of species in this file. The standard procedure is to 'pre-filter' the data after downloading but before continued processing. This is the default 'generate' process, but the monarch_gene_mapping.main script allows for discrete processing of this step.","title":"Special Data Considerations"},{"location":"Repositories/monarch-ingest-dashboard/","text":"monarch-ingest-dashboard Details GitHub monarch-initiative/monarch-ingest-dashboard Language Vue Description Dashboard prototype for translator-testing repository Documentation Monarch Ingest Dashboard A dashboard for viewing statistics on the Monarch Ingest Graph Project setup nvm use v 14.8.0 npm install Compiles and hot-reloads for development npm run dev Compiles and minifies for production npm run build Deploy to github pages ./deploy.sh Lints files npm run lint Customize configuration See Configuration Reference .","title":"monarch-ingest-dashboard"},{"location":"Repositories/monarch-ingest-dashboard/#monarch-ingest-dashboard","text":"","title":"monarch-ingest-dashboard"},{"location":"Repositories/monarch-ingest-dashboard/#details","text":"GitHub monarch-initiative/monarch-ingest-dashboard Language Vue Description Dashboard prototype for translator-testing repository","title":"Details"},{"location":"Repositories/monarch-ingest-dashboard/#documentation","text":"","title":"Documentation"},{"location":"Repositories/monarch-ingest-dashboard/#monarch-ingest-dashboard_1","text":"A dashboard for viewing statistics on the Monarch Ingest Graph","title":"Monarch Ingest Dashboard"},{"location":"Repositories/monarch-ingest-dashboard/#project-setup","text":"nvm use v 14.8.0 npm install","title":"Project setup"},{"location":"Repositories/monarch-ingest-dashboard/#compiles-and-hot-reloads-for-development","text":"npm run dev","title":"Compiles and hot-reloads for development"},{"location":"Repositories/monarch-ingest-dashboard/#compiles-and-minifies-for-production","text":"npm run build","title":"Compiles and minifies for production"},{"location":"Repositories/monarch-ingest-dashboard/#deploy-to-github-pages","text":"./deploy.sh","title":"Deploy to github pages"},{"location":"Repositories/monarch-ingest-dashboard/#lints-files","text":"npm run lint","title":"Lints files"},{"location":"Repositories/monarch-ingest-dashboard/#customize-configuration","text":"See Configuration Reference .","title":"Customize configuration"},{"location":"Repositories/monarch-ingest/","text":"monarch-ingest Details GitHub monarch-initiative/monarch-ingest Language Python Description Data ingest application for Monarch Initiative knowledge graph using Koza Dependencies External Dependencies Package Version python ^3.10 biolink-model 4.2.6rc3 bmt ^1.0.15 cat-merge 0.2.1 kghub-downloader ^0.4.1 kgx ^2.4.2 koza ^0.6.1 linkml ^1.7.8 linkml-solr 0.1.6 multi-indexer 0.0.5 botocore ^1.31 importlib-metadata >=4.6.1 loguru * pydantic ^2.5 sh ^1.14.3 typer ^0.12 yamllint ^1.35.1 linkml-runtime ^1.7.5 pandas 2.0.3 closurizer 0.7.3 notebook ^7.3.2 duckdb ^1.3.0 Documentation monarch_ingest Monarch Ingest is a data-ingest application for Monarch Initiative using Koza.","title":"monarch-ingest"},{"location":"Repositories/monarch-ingest/#monarch-ingest","text":"","title":"monarch-ingest"},{"location":"Repositories/monarch-ingest/#details","text":"GitHub monarch-initiative/monarch-ingest Language Python Description Data ingest application for Monarch Initiative knowledge graph using Koza","title":"Details"},{"location":"Repositories/monarch-ingest/#dependencies","text":"External Dependencies Package Version python ^3.10 biolink-model 4.2.6rc3 bmt ^1.0.15 cat-merge 0.2.1 kghub-downloader ^0.4.1 kgx ^2.4.2 koza ^0.6.1 linkml ^1.7.8 linkml-solr 0.1.6 multi-indexer 0.0.5 botocore ^1.31 importlib-metadata >=4.6.1 loguru * pydantic ^2.5 sh ^1.14.3 typer ^0.12 yamllint ^1.35.1 linkml-runtime ^1.7.5 pandas 2.0.3 closurizer 0.7.3 notebook ^7.3.2 duckdb ^1.3.0","title":"Dependencies"},{"location":"Repositories/monarch-ingest/#documentation","text":"","title":"Documentation"},{"location":"Repositories/monarch-ingest/#monarch_ingest","text":"Monarch Ingest is a data-ingest application for Monarch Initiative using Koza.","title":"monarch_ingest"},{"location":"Repositories/monarch-ontology-dashboard/","text":"monarch-ontology-dashboard Details GitHub monarch-initiative/monarch-ontology-dashboard Language HTML Description The Monarch Initiative Ontology dashboard focuses on increasing quality of all Monarch related ontologies Documentation Monarch Initiative Ontology Dashboard The Monarch Ontology builds on the OBO Dashboard by adding additional Monarch specific checks to each of our core ontologies. This repo was created using the OBO Dashboard Template .","title":"monarch-ontology-dashboard"},{"location":"Repositories/monarch-ontology-dashboard/#monarch-ontology-dashboard","text":"","title":"monarch-ontology-dashboard"},{"location":"Repositories/monarch-ontology-dashboard/#details","text":"GitHub monarch-initiative/monarch-ontology-dashboard Language HTML Description The Monarch Initiative Ontology dashboard focuses on increasing quality of all Monarch related ontologies","title":"Details"},{"location":"Repositories/monarch-ontology-dashboard/#documentation","text":"","title":"Documentation"},{"location":"Repositories/monarch-ontology-dashboard/#monarch-initiative-ontology-dashboard","text":"The Monarch Ontology builds on the OBO Dashboard by adding additional Monarch specific checks to each of our core ontologies. This repo was created using the OBO Dashboard Template .","title":"Monarch Initiative Ontology Dashboard"},{"location":"Repositories/monarch-plater-docker/","text":"monarch-plater-docker Details GitHub monarch-initiative/monarch-plater-docker Language Dockerfile Description None Documentation Monarch Plater Contains the open api conf and Dockerfile specific to building https://trapi.monarchinitiative.org .env can be found in monarch configs but looks something like WEB_HOST=0.0.0.0 WEB_PORT=8000 NEO4J_HOST=scigraph.ncats.io NEO4J_USERNAME=neo4j NEO4J_PASSWORD=<NEO4J-PASSWORD> NEO4J_HTTP_PORT=80 PLATER_TITLE='Plater' PLATER_VERSION='1.1.0' BL_VERSION=2.1.0 Building the docker image on GCP and deploying artifact registry docker build --tag plater-sri . docker tag plater-sri us-central1-docker.pkg.dev/monarch-initiative/monarch-initiative/plater-sri:dev docker push us-central1-docker.pkg.dev/monarch-initiative/monarch-initiative/plater-sri:dev To push the image to gcloud compute instances update-container monarch-trapi --container-image=us-central1-docker.pkg.dev/monarch-initiative/monarch-initiative/plater-sri:dev","title":"monarch-plater-docker"},{"location":"Repositories/monarch-plater-docker/#monarch-plater-docker","text":"","title":"monarch-plater-docker"},{"location":"Repositories/monarch-plater-docker/#details","text":"GitHub monarch-initiative/monarch-plater-docker Language Dockerfile Description None","title":"Details"},{"location":"Repositories/monarch-plater-docker/#documentation","text":"","title":"Documentation"},{"location":"Repositories/monarch-plater-docker/#monarch-plater","text":"Contains the open api conf and Dockerfile specific to building https://trapi.monarchinitiative.org .env can be found in monarch configs but looks something like WEB_HOST=0.0.0.0 WEB_PORT=8000 NEO4J_HOST=scigraph.ncats.io NEO4J_USERNAME=neo4j NEO4J_PASSWORD=<NEO4J-PASSWORD> NEO4J_HTTP_PORT=80 PLATER_TITLE='Plater' PLATER_VERSION='1.1.0' BL_VERSION=2.1.0","title":"Monarch Plater"},{"location":"Repositories/monarch-plater-docker/#building-the-docker-image-on-gcp-and-deploying-artifact-registry","text":"docker build --tag plater-sri . docker tag plater-sri us-central1-docker.pkg.dev/monarch-initiative/monarch-initiative/plater-sri:dev docker push us-central1-docker.pkg.dev/monarch-initiative/monarch-initiative/plater-sri:dev To push the image to gcloud compute instances update-container monarch-trapi --container-image=us-central1-docker.pkg.dev/monarch-initiative/monarch-initiative/plater-sri:dev","title":"Building the docker image on GCP and deploying artifact registry"},{"location":"Repositories/monarch-ui/","text":"monarch-ui Details GitHub monarch-initiative/monarch-ui Language Vue Description The previous version of the Monarch Initiative website Documentation monarch-ui README This repository contains the source code for the Monarch Initiative web application (aka, the Monarch UI). This README describes the application and its interaction with Monarch Initiative services such as BioLink. It also provide a Quickstart on how to build and run the application. For detailed information on the structure of the code and how to contribute, see CONTRIBUTING.md . Overall Architecture BioLink Service Directory Structure monarch-ui/ monarch-ui/dist/ monarch-ui/public/ monarch-ui/src/ monarch-ui/src/main.js monarch-ui/src/App.vue monarch-ui/src/router.js monarch-ui/src/style/ monarch-ui/src/api/ monarch-ui/src/lib/ monarch-ui/src/assets/img/ monarch-ui/src/component/ monarch-ui/src/views/ Markdown-based Components QuickStart Obtaining the source code Environment setup Project setup Local Development: Fast Compile and hot-reload Production Build: Bundling and Minification Production Test: Build and Serve Linting Testing Run your unit tests Run your end-to-end tests Run both types of test Overall Architecture The UI is a VueJS single-page application that is loaded into the browser as a static set of Javascript, HTML, CSS, and media resources. Subsequent dynamic data is delivered to the browser via XMLHttpRequest calls to various backend services, primarily BioLink . The data returned from these calls is then displayed appropriately in the web application. Source: https://github.com/monarch-initiative/monarch-ui Monarch Initiative UI: https://monarchinitiative.org BioLink service to access Monarch's data The VueJS application is built from source code via a modern chain of tools that deal with resource bundling, minification, and transpilation: VueJS UI Rendering framework BootstrapVue styling framework vue-cli for build and asset management webpack for asset bundling The output of the build process is a set of static files including bundled Javascript, CSS, HTML and other media assets. These are then deployed to Netlify where they can be served to users on the internet. BioLink Service There are multiple versions of the BioLink service. See the top of the BioLink file in /api for what versions are available. To easily switch between these versions in the live web-app, add a parameter to your current url like ?api=beta . Directory Structure monarch-ui/ package.json lists build-time and run-time dependencies and a list of npm run -able scripts such as npm run dev . vue.config.js is the configuration that is used by vue-cli to dynamically generate the configuration needed by webpack , which is invoked behind the scenes by vue-cli . publish.sh is a convenience script invoked by npm run ghpublish to copy the developer's current directory into their gh-pages branch and then pushing that to origin . babel.config.js configures the Babel compiler that translates modern Javascript into browser-compatible Javascript. .eslintrc.js specifies the linting rules used by eslint to ensure that code is authored in a more uniform and safe way. monarch-ui/dist/ This directory contains the output of the build process (e.g., from npm run build or npm run ghpublish ). The files here should never be placed in source control or edited; they are generated files. Upon first downloading the repo, or after npm run clean , this directory may not exist. monarch-ui/public/ The vue-cli workflow specifies that the contents of public/ are copied verbatim to the build output directory dist/ , and therefore made available to running web application. team.yaml describes the persons and institutions that make up the Monarch project. This is used by AboutTeam.md to render a Team page. news.yaml is used to drive the HomeNews.md component. robots.txt is used to guide or exclude web-crawling robots. See Robots.txt . index.html is transformed by the build workflow to generate a corresponding dist/index.html . It is NOT copied verbatim. mondo_ids.txt is a tab-demimited list of \"Diseases of the Month\" for all 12 months of the year. It is used to populate the Featured Diseases carousel on the home page. The first field is the Mondo ID; the second indicates which month to display the disease, formatted as YYYY-MM-DD. monarch-ui/src/ This directory and the monarch-ui/public/ (see above) directory contains the primary HTML, Javascript, and CSS source code that will be used to build the web application assets in monarch-ui/dist/ . monarch-ui/src/main.js By convention, vue-cli will use src/main.js as its main entry point. This file performs any global initialization, including the Vue router and the main App.vue . monarch-ui/src/App.vue By convention, App.vue is the root VueJS component that is usually bound to a div in the public/index.html file. This is a good place to configure VueJS and register global components. monarch-ui/src/router.js This file router.js is where the vue-router is loaded and configured. monarch-ui/src/style/ This file contains SCSS or CSS files that might need to be included in several components. The most important file here is variables.scss , which can be included in every component via: <style lang=\"scss\"> @import \"~@/style/variables\"; ... </style> monarch-ui/src/api/ We've tried to isolate external network API access into this directory, so that the rest of the UI can be unaware of the protocol and network issues inherent in making XMLHttpRequest or axios calls. For example, api/bio-link.js is the module that makes REST calls to the BioLink server, and the rest of the UI simply imports from api/bio-link.js . For example: import * as BL from '@/api/bio-link' ; // ... const promise = BL . getNeighborhood ( this . nodeId , this . nodeType ); monarch-ui/src/lib/ This directory is for non-UI utility code that does not access external network APIs (which would be located in src/api/ ). monarch-ui/src/assets/img/ Assets that will be bundled by webpack by require or import . E.g., require('../assets/img/icon-models.png') monarch-ui/src/component/ monarch-ui/src/views/ Both components/ and views/ are properly VueJS components. However, by convention, we isolate top-level routable components into the views/ directory. Both component types are typically just VueJS Single-file Components with extension .vue . In some cases, they will have a .md extension, which means they will be scanned for Markdown prior to becoming VueJS components. See Markdown-based Components below for more information about Markdown in components. Markdown-based Components In an attempt to make it easier for non-developers to contribute enhancements to the prose within the application, we've enabled the capability to define VueJS components that contain Markdown text in their <template> . These files with extension .md (e.g., views/AboutMonarch.md ) are processed at build-time by loaders/vue-markdown-loader-improved.js , which will find Markdown fragments within the template and will translate them (at build-time) into HTML. QuickStart In order to build the application locally, you will need to obtain the source code and follow the QuickStart instructions below. Obtaining the source code If your intent is to eventually contribute source code to the project via pull requests , then we recommend that you first fork the monarch-ui repo and then git clone this fork to your local development machine. Details on using the GitHub Flow workflow for contributing to open source projects are provided in CONTRIBUTING For example, if your GitHub username is abc , and you've forked the monarch-ui repo to your user, then you can get a local copy of your forked repo with (assuming that monarch_stuff exists on your machine) cd monarch_stuff/ git clone git@github.com:abc/monarch-ui.git cd monarch_ui/ For simple evaluation or testing of the monarch-ui , then cloning the primary repo at monarchinitiative/monarch-ui should be sufficient. You will not be able to submit pull requests if you take this route, however. cd monarch_stuff/ git clone https://github.com/monarch-initiative/monarch-ui.git cd monarch_ui/ Environment setup There may be some one-time installation of tools, depending upon whether you have the supported version of NodeJS running. NodeJS v8.12.0 is currently supported, although the project will likely build fine with later versions of NodeJS. If the following command fails, then you probably do not have NodeJS installed: node -v If the above command fails or if it reports a version number significantly different from v8.12.0 , then you should install nvm - Node Version Manager and then install a compatible version of NodeJS. In the event that you do not already have a compatible version of NodeJS installed, we have provided detailed instructions at the end of the CONTRIBUTING document here Installing NodeJS . Project setup Whenever you update your local development machine's source code, and upon initially cloning the repository, you will need to run the following npm install command, which will read the latest downloaded package.json and ensure that your local dependencies are up to date. npm install Local Development: Fast Compile and hot-reload The following command will run webpack in development mode, which runs a webpack-dev-server that detects source code changes and rebuilds the application dynamically and delivers these changes to the browser via hot reload , which often allows the UI to be updated without a full page reload. This speeds up a developer's iterations immensely. npm run serve The command npm run dev is an alias for npm run serve , mostly for the convenience of folks who are used to npm run dev . Production Build: Bundling and Minification In contrast to npm run serve above, which is designed to quickly build and demonstrate changes to the source code, the npm run build command will be more exhaustive in optimizing the build, and will produce a set of assets (Javascript, HTML, CSS, media) that are suitable for deployment to a web server. npm run build Production Test: Build and Serve Although there shouldn't be any difference in behavior between development and production mode builds, there sometimes are. So it has proven convenient to be able to test the production build locally, which is why the npm run buildandserve command was added: npm run buildandserve Linting Usually, we are editing code with a text editor (e.g., SublimeText) that works with ESLint and highlights any linting errors discovered as we edit. It is also possible to manually run ESLint over the entire source. This is a good idea to do before finalizing your code submission. npm run lint Testing Run your unit tests npm run test:unit Run your end-to-end tests npm run test:e2e Run both types of test npm run test","title":"monarch-ui"},{"location":"Repositories/monarch-ui/#monarch-ui","text":"","title":"monarch-ui"},{"location":"Repositories/monarch-ui/#details","text":"GitHub monarch-initiative/monarch-ui Language Vue Description The previous version of the Monarch Initiative website","title":"Details"},{"location":"Repositories/monarch-ui/#documentation","text":"","title":"Documentation"},{"location":"Repositories/monarch-ui/#monarch-ui-readme","text":"This repository contains the source code for the Monarch Initiative web application (aka, the Monarch UI). This README describes the application and its interaction with Monarch Initiative services such as BioLink. It also provide a Quickstart on how to build and run the application. For detailed information on the structure of the code and how to contribute, see CONTRIBUTING.md . Overall Architecture BioLink Service Directory Structure monarch-ui/ monarch-ui/dist/ monarch-ui/public/ monarch-ui/src/ monarch-ui/src/main.js monarch-ui/src/App.vue monarch-ui/src/router.js monarch-ui/src/style/ monarch-ui/src/api/ monarch-ui/src/lib/ monarch-ui/src/assets/img/ monarch-ui/src/component/ monarch-ui/src/views/ Markdown-based Components QuickStart Obtaining the source code Environment setup Project setup Local Development: Fast Compile and hot-reload Production Build: Bundling and Minification Production Test: Build and Serve Linting Testing Run your unit tests Run your end-to-end tests Run both types of test","title":"monarch-ui README"},{"location":"Repositories/monarch-ui/#overall-architecture","text":"The UI is a VueJS single-page application that is loaded into the browser as a static set of Javascript, HTML, CSS, and media resources. Subsequent dynamic data is delivered to the browser via XMLHttpRequest calls to various backend services, primarily BioLink . The data returned from these calls is then displayed appropriately in the web application. Source: https://github.com/monarch-initiative/monarch-ui Monarch Initiative UI: https://monarchinitiative.org BioLink service to access Monarch's data The VueJS application is built from source code via a modern chain of tools that deal with resource bundling, minification, and transpilation: VueJS UI Rendering framework BootstrapVue styling framework vue-cli for build and asset management webpack for asset bundling The output of the build process is a set of static files including bundled Javascript, CSS, HTML and other media assets. These are then deployed to Netlify where they can be served to users on the internet.","title":"Overall Architecture"},{"location":"Repositories/monarch-ui/#biolink-service","text":"There are multiple versions of the BioLink service. See the top of the BioLink file in /api for what versions are available. To easily switch between these versions in the live web-app, add a parameter to your current url like ?api=beta .","title":"BioLink Service"},{"location":"Repositories/monarch-ui/#directory-structure","text":"","title":"Directory Structure"},{"location":"Repositories/monarch-ui/#monarch-ui_1","text":"package.json lists build-time and run-time dependencies and a list of npm run -able scripts such as npm run dev . vue.config.js is the configuration that is used by vue-cli to dynamically generate the configuration needed by webpack , which is invoked behind the scenes by vue-cli . publish.sh is a convenience script invoked by npm run ghpublish to copy the developer's current directory into their gh-pages branch and then pushing that to origin . babel.config.js configures the Babel compiler that translates modern Javascript into browser-compatible Javascript. .eslintrc.js specifies the linting rules used by eslint to ensure that code is authored in a more uniform and safe way.","title":"monarch-ui/"},{"location":"Repositories/monarch-ui/#monarch-uidist","text":"This directory contains the output of the build process (e.g., from npm run build or npm run ghpublish ). The files here should never be placed in source control or edited; they are generated files. Upon first downloading the repo, or after npm run clean , this directory may not exist.","title":"monarch-ui/dist/"},{"location":"Repositories/monarch-ui/#monarch-uipublic","text":"The vue-cli workflow specifies that the contents of public/ are copied verbatim to the build output directory dist/ , and therefore made available to running web application. team.yaml describes the persons and institutions that make up the Monarch project. This is used by AboutTeam.md to render a Team page. news.yaml is used to drive the HomeNews.md component. robots.txt is used to guide or exclude web-crawling robots. See Robots.txt . index.html is transformed by the build workflow to generate a corresponding dist/index.html . It is NOT copied verbatim. mondo_ids.txt is a tab-demimited list of \"Diseases of the Month\" for all 12 months of the year. It is used to populate the Featured Diseases carousel on the home page. The first field is the Mondo ID; the second indicates which month to display the disease, formatted as YYYY-MM-DD.","title":"monarch-ui/public/"},{"location":"Repositories/monarch-ui/#monarch-uisrc","text":"This directory and the monarch-ui/public/ (see above) directory contains the primary HTML, Javascript, and CSS source code that will be used to build the web application assets in monarch-ui/dist/ .","title":"monarch-ui/src/"},{"location":"Repositories/monarch-ui/#monarch-uisrcmainjs","text":"By convention, vue-cli will use src/main.js as its main entry point. This file performs any global initialization, including the Vue router and the main App.vue .","title":"monarch-ui/src/main.js"},{"location":"Repositories/monarch-ui/#monarch-uisrcappvue","text":"By convention, App.vue is the root VueJS component that is usually bound to a div in the public/index.html file. This is a good place to configure VueJS and register global components.","title":"monarch-ui/src/App.vue"},{"location":"Repositories/monarch-ui/#monarch-uisrcrouterjs","text":"This file router.js is where the vue-router is loaded and configured.","title":"monarch-ui/src/router.js"},{"location":"Repositories/monarch-ui/#monarch-uisrcstyle","text":"This file contains SCSS or CSS files that might need to be included in several components. The most important file here is variables.scss , which can be included in every component via: <style lang=\"scss\"> @import \"~@/style/variables\"; ... </style>","title":"monarch-ui/src/style/"},{"location":"Repositories/monarch-ui/#monarch-uisrcapi","text":"We've tried to isolate external network API access into this directory, so that the rest of the UI can be unaware of the protocol and network issues inherent in making XMLHttpRequest or axios calls. For example, api/bio-link.js is the module that makes REST calls to the BioLink server, and the rest of the UI simply imports from api/bio-link.js . For example: import * as BL from '@/api/bio-link' ; // ... const promise = BL . getNeighborhood ( this . nodeId , this . nodeType );","title":"monarch-ui/src/api/"},{"location":"Repositories/monarch-ui/#monarch-uisrclib","text":"This directory is for non-UI utility code that does not access external network APIs (which would be located in src/api/ ).","title":"monarch-ui/src/lib/"},{"location":"Repositories/monarch-ui/#monarch-uisrcassetsimg","text":"Assets that will be bundled by webpack by require or import . E.g., require('../assets/img/icon-models.png')","title":"monarch-ui/src/assets/img/"},{"location":"Repositories/monarch-ui/#monarch-uisrccomponent","text":"","title":"monarch-ui/src/component/"},{"location":"Repositories/monarch-ui/#monarch-uisrcviews","text":"Both components/ and views/ are properly VueJS components. However, by convention, we isolate top-level routable components into the views/ directory. Both component types are typically just VueJS Single-file Components with extension .vue . In some cases, they will have a .md extension, which means they will be scanned for Markdown prior to becoming VueJS components. See Markdown-based Components below for more information about Markdown in components.","title":"monarch-ui/src/views/"},{"location":"Repositories/monarch-ui/#markdown-based-components","text":"In an attempt to make it easier for non-developers to contribute enhancements to the prose within the application, we've enabled the capability to define VueJS components that contain Markdown text in their <template> . These files with extension .md (e.g., views/AboutMonarch.md ) are processed at build-time by loaders/vue-markdown-loader-improved.js , which will find Markdown fragments within the template and will translate them (at build-time) into HTML.","title":"Markdown-based Components"},{"location":"Repositories/monarch-ui/#quickstart","text":"In order to build the application locally, you will need to obtain the source code and follow the QuickStart instructions below.","title":"QuickStart"},{"location":"Repositories/monarch-ui/#obtaining-the-source-code","text":"If your intent is to eventually contribute source code to the project via pull requests , then we recommend that you first fork the monarch-ui repo and then git clone this fork to your local development machine. Details on using the GitHub Flow workflow for contributing to open source projects are provided in CONTRIBUTING For example, if your GitHub username is abc , and you've forked the monarch-ui repo to your user, then you can get a local copy of your forked repo with (assuming that monarch_stuff exists on your machine) cd monarch_stuff/ git clone git@github.com:abc/monarch-ui.git cd monarch_ui/ For simple evaluation or testing of the monarch-ui , then cloning the primary repo at monarchinitiative/monarch-ui should be sufficient. You will not be able to submit pull requests if you take this route, however. cd monarch_stuff/ git clone https://github.com/monarch-initiative/monarch-ui.git cd monarch_ui/","title":"Obtaining the source code"},{"location":"Repositories/monarch-ui/#environment-setup","text":"There may be some one-time installation of tools, depending upon whether you have the supported version of NodeJS running. NodeJS v8.12.0 is currently supported, although the project will likely build fine with later versions of NodeJS. If the following command fails, then you probably do not have NodeJS installed: node -v If the above command fails or if it reports a version number significantly different from v8.12.0 , then you should install nvm - Node Version Manager and then install a compatible version of NodeJS. In the event that you do not already have a compatible version of NodeJS installed, we have provided detailed instructions at the end of the CONTRIBUTING document here Installing NodeJS .","title":"Environment setup"},{"location":"Repositories/monarch-ui/#project-setup","text":"Whenever you update your local development machine's source code, and upon initially cloning the repository, you will need to run the following npm install command, which will read the latest downloaded package.json and ensure that your local dependencies are up to date. npm install","title":"Project setup"},{"location":"Repositories/monarch-ui/#local-development-fast-compile-and-hot-reload","text":"The following command will run webpack in development mode, which runs a webpack-dev-server that detects source code changes and rebuilds the application dynamically and delivers these changes to the browser via hot reload , which often allows the UI to be updated without a full page reload. This speeds up a developer's iterations immensely. npm run serve The command npm run dev is an alias for npm run serve , mostly for the convenience of folks who are used to npm run dev .","title":"Local Development: Fast Compile and hot-reload"},{"location":"Repositories/monarch-ui/#production-build-bundling-and-minification","text":"In contrast to npm run serve above, which is designed to quickly build and demonstrate changes to the source code, the npm run build command will be more exhaustive in optimizing the build, and will produce a set of assets (Javascript, HTML, CSS, media) that are suitable for deployment to a web server. npm run build","title":"Production Build: Bundling and Minification"},{"location":"Repositories/monarch-ui/#production-test-build-and-serve","text":"Although there shouldn't be any difference in behavior between development and production mode builds, there sometimes are. So it has proven convenient to be able to test the production build locally, which is why the npm run buildandserve command was added: npm run buildandserve","title":"Production Test: Build and Serve"},{"location":"Repositories/monarch-ui/#linting","text":"Usually, we are editing code with a text editor (e.g., SublimeText) that works with ESLint and highlights any linting errors discovered as we edit. It is also possible to manually run ESLint over the entire source. This is a good idea to do before finalizing your code submission. npm run lint","title":"Linting"},{"location":"Repositories/monarch-ui/#testing","text":"","title":"Testing"},{"location":"Repositories/monarch-ui/#run-your-unit-tests","text":"npm run test:unit","title":"Run your unit tests"},{"location":"Repositories/monarch-ui/#run-your-end-to-end-tests","text":"npm run test:e2e","title":"Run your end-to-end tests"},{"location":"Repositories/monarch-ui/#run-both-types-of-test","text":"npm run test","title":"Run both types of test"},{"location":"Repositories/mondo/","text":"mondo Details GitHub monarch-initiative/mondo Language Jupyter Notebook Description Mondo Disease Ontology Documentation Mondo This is the repository for managing the Mondo Disease Ontology (Mondo). Mondo aims to harmonizes disease definitions across the world. For more details on this ontology see: Mondo website : https://monarch-initiative.github.io/mondo OBO Foundry Mondo page : http://obofoundry.org/ontology/mondo.html Identifiers Concepts in Mondo are represented by URIs like http://purl.obolibrary.org/obo/MONDO_0005015 or by compact URIs ( CURIEs ) with the prefix MONDO: , such as MONDO:0005015 , as required by the OBO Foundry Identifier Policy . Versions Stable release versions http://purl.obolibrary.org/obo/mondo.obo http://purl.obolibrary.org/obo/mondo.json http://purl.obolibrary.org/obo/mondo.owl See Changes.md for more details Editors' version Editors of this ontology should use the edit version, src/ontology/mondo-edit.obo Read the editors guide first! https://mondo.readthedocs.io/en/latest/ Layout: src/ ontology ontology source, plus imports, Makefile patterns templated design patterns sparql SPARQL queries Logo The Mondo logo is available here: https://github.com/jmcmurry/closed-illustrations/tree/master/logos/mondo-logos Cite Mondo: Unifying diseases for the world, by the world , Nicole A Vasilevsky, Nicolas A Matentzoglu, Sabrina Toro, Joseph E Flack IV, Harshad Hegde, Deepak R Unni, Gioconda F Alyea, Joanna S Amberger, Larry Babb, James P Balhoff, Taylor I Bingaman, Gully A Burns, Orion J Buske, Tiffany J Callahan, Leigh C Carmody, Paula Carrio Cordo, Lauren E Chan, George S Chang, Sean L Christiaens, Louise C Daugherty, Michel Dumontier, Laura E Failla, May J Flowers, H. Alpha Garrett Jr., Jennifer L Goldstein, Dylan Gration, Tudor Groza, Marc Hanauer, Nomi L Harris, Jason A Hilton, Daniel S Himmelstein, Charles Tapley Hoyt, Megan S Kane, Sebastian K\u00f6hler, David Lagorce, Abbe Lai, Martin Larralde, Antonia Lock, Irene L\u00f3pez Santiago, Donna R Maglott, Adriana J Malheiro, Birgit H M Meldal, Monica C Munoz-Torres, Tristan H Nelson, Frank W Nicholas, David Ochoa, Daniel P Olson, Tudor I Oprea, David Osumi-Sutherland, Helen Parkinson, Zo\u00eb May Pendlington, Ana Rath, Heidi L Rehm, Lyubov Remennik, Erin R Riggs, Paola Roncaglia, Justyne E Ross, Marion F Shadbolt, Kent A Shefchek, Morgan N Similuk, Nicholas Sioutos, Damian Smedley, Rachel Sparks, Ray Stefancsik, Ralf Stephan, Andrea L Storm, Doron Stupp, Gregory S Stupp, Jagadish Chandrabose Sundaramurthi, Imke Tammen, Darin Tay, Courtney L Thaxton, Eloise Valasek, Jordi Valls-Margarit, Alex H Wagner, Danielle Welter, Patricia L Whetzel, Lori L Whiteman, Valerie Wood, Colleen H Xu, Andreas Zankl, Xingmin Aaron Zhang, Christopher G Chute, Peter N Robinson, Christopher J Mungall, Ada Hamosh, Melissa A Haendel, medRxiv 2022.04.13.22273750; doi: https://doi.org/10.1101/2022.04.13.22273750 License CC-BY 4.0 Contact Please use this GitHub repository's Issue tracker to request new terms/classes or report errors or specific concerns related to the ontology. Acknowledgements This ontology repository was created using the ontology starter kit","title":"mondo"},{"location":"Repositories/mondo/#mondo","text":"","title":"mondo"},{"location":"Repositories/mondo/#details","text":"GitHub monarch-initiative/mondo Language Jupyter Notebook Description Mondo Disease Ontology","title":"Details"},{"location":"Repositories/mondo/#documentation","text":"","title":"Documentation"},{"location":"Repositories/mondo/#mondo_1","text":"This is the repository for managing the Mondo Disease Ontology (Mondo). Mondo aims to harmonizes disease definitions across the world. For more details on this ontology see: Mondo website : https://monarch-initiative.github.io/mondo OBO Foundry Mondo page : http://obofoundry.org/ontology/mondo.html","title":"Mondo"},{"location":"Repositories/mondo/#identifiers","text":"Concepts in Mondo are represented by URIs like http://purl.obolibrary.org/obo/MONDO_0005015 or by compact URIs ( CURIEs ) with the prefix MONDO: , such as MONDO:0005015 , as required by the OBO Foundry Identifier Policy .","title":"Identifiers"},{"location":"Repositories/mondo/#versions","text":"Stable release versions http://purl.obolibrary.org/obo/mondo.obo http://purl.obolibrary.org/obo/mondo.json http://purl.obolibrary.org/obo/mondo.owl See Changes.md for more details","title":"Versions"},{"location":"Repositories/mondo/#editors-version","text":"Editors of this ontology should use the edit version, src/ontology/mondo-edit.obo Read the editors guide first! https://mondo.readthedocs.io/en/latest/ Layout: src/ ontology ontology source, plus imports, Makefile patterns templated design patterns sparql SPARQL queries","title":"Editors' version"},{"location":"Repositories/mondo/#logo","text":"The Mondo logo is available here: https://github.com/jmcmurry/closed-illustrations/tree/master/logos/mondo-logos","title":"Logo"},{"location":"Repositories/mondo/#cite","text":"Mondo: Unifying diseases for the world, by the world , Nicole A Vasilevsky, Nicolas A Matentzoglu, Sabrina Toro, Joseph E Flack IV, Harshad Hegde, Deepak R Unni, Gioconda F Alyea, Joanna S Amberger, Larry Babb, James P Balhoff, Taylor I Bingaman, Gully A Burns, Orion J Buske, Tiffany J Callahan, Leigh C Carmody, Paula Carrio Cordo, Lauren E Chan, George S Chang, Sean L Christiaens, Louise C Daugherty, Michel Dumontier, Laura E Failla, May J Flowers, H. Alpha Garrett Jr., Jennifer L Goldstein, Dylan Gration, Tudor Groza, Marc Hanauer, Nomi L Harris, Jason A Hilton, Daniel S Himmelstein, Charles Tapley Hoyt, Megan S Kane, Sebastian K\u00f6hler, David Lagorce, Abbe Lai, Martin Larralde, Antonia Lock, Irene L\u00f3pez Santiago, Donna R Maglott, Adriana J Malheiro, Birgit H M Meldal, Monica C Munoz-Torres, Tristan H Nelson, Frank W Nicholas, David Ochoa, Daniel P Olson, Tudor I Oprea, David Osumi-Sutherland, Helen Parkinson, Zo\u00eb May Pendlington, Ana Rath, Heidi L Rehm, Lyubov Remennik, Erin R Riggs, Paola Roncaglia, Justyne E Ross, Marion F Shadbolt, Kent A Shefchek, Morgan N Similuk, Nicholas Sioutos, Damian Smedley, Rachel Sparks, Ray Stefancsik, Ralf Stephan, Andrea L Storm, Doron Stupp, Gregory S Stupp, Jagadish Chandrabose Sundaramurthi, Imke Tammen, Darin Tay, Courtney L Thaxton, Eloise Valasek, Jordi Valls-Margarit, Alex H Wagner, Danielle Welter, Patricia L Whetzel, Lori L Whiteman, Valerie Wood, Colleen H Xu, Andreas Zankl, Xingmin Aaron Zhang, Christopher G Chute, Peter N Robinson, Christopher J Mungall, Ada Hamosh, Melissa A Haendel, medRxiv 2022.04.13.22273750; doi: https://doi.org/10.1101/2022.04.13.22273750","title":"Cite"},{"location":"Repositories/mondo/#license","text":"CC-BY 4.0","title":"License"},{"location":"Repositories/mondo/#contact","text":"Please use this GitHub repository's Issue tracker to request new terms/classes or report errors or specific concerns related to the ontology.","title":"Contact"},{"location":"Repositories/mondo/#acknowledgements","text":"This ontology repository was created using the ontology starter kit","title":"Acknowledgements"},{"location":"Repositories/neat-ml/","text":"neat-ml Details GitHub Knowledge-Graph-Hub/neat-ml Language Python Description Network Embedding All the Things Dependencies External Dependencies Package Version python >=3.8,<3.11 tqdm ^4.64.0 click ^8.1.3 PyYAML ^6.0 sklearn ^0.0 opencv-python ^4.6.0 numpy ^1.22.4 pandas ^1.4.2 jaro-winkler 2.0.0 grape ^0.1.8 transformers ^4.20.0 boto3 ^1.24.13 botocore ^1.27.13 linkml ^1.2.14 linkml-validator ^0.3.0 neat-ml-schema ^0.1.10 Documentation Network Embedding All the Things (NEAT) NEAT is a flexible pipeline for: Parsing a graph serialization Generating node and edge embeddings Training classifiers for link prediction and label expansion Making predictions Creating well formatted output and metrics for the predictions Doing all of the above reproducibly, with cloud compute (or locally, if preferred) Quick Start pip install neat-ml neat run --config neat_quickstart.yaml # This example file is in the repo here NEAT will write graph embeddings to a new quickstart_output directory. Requirements This pipeline has grape as a major dependency. Methods from tensorflow and are supported, but are not installed as dependencies to avoid version conflicts. Please install the versions of tensorflow , scikit-learn , CUDA , and cudnn compatible with your system and with each other prior to installing NEAT if you wish to use these methods. On Linux, the tensorflow installation may be easiest using conda as follows: wget https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh -O anaconda.sh bash ./anaconda.sh -b echo \"export PATH=\\$PATH:$HOME/anaconda3/bin\" >> $HOME/.bashrc conda init conda install cudnn conda install tensorflow Installation pip install neat-ml Running NEAT neat run --config tests/resources/test.yaml # example neat run --config [your yaml] The pipeline is driven by a YAML file (e.g. tests/resources/test.yaml ), which contains all parameters needed to complete the pipeline. The contents and expected values for this file are defined by the neat-ml-schema . This includes hyperparameters for machine learning and also things like files/paths to output results. Specify paths to node and edge files: GraphDataConfiguration: graph: directed: False node_path: path/to/nodes.tsv edge_path: path/to/edges.tsv If the graph data is in a compressed file and/or a remote location (e.g., on KG-Hub), one or more URLs may be specified in the source_data parameter: GraphDataConfiguration: source_data: files: - path: https://kg-hub.berkeleybop.io/kg-obo/bfo/2019-08-26/bfo_kgx_tsv.tar.gz desc: \"This is BFO, your favorite basic formal ontology, now in graph form.\" - path: https://someremoteurl.com/graph2.tar.gz desc: \"This is some other graph - it may be useful.\" A diagram explaining the design a bit is here . If you are uploading to AWS/S3, see here for configuring AWS credentials: Credits Developed by Deepak Unni, Justin Reese, J. Harry Caufield, and Harshad Hegde.","title":"neat-ml"},{"location":"Repositories/neat-ml/#neat-ml","text":"","title":"neat-ml"},{"location":"Repositories/neat-ml/#details","text":"GitHub Knowledge-Graph-Hub/neat-ml Language Python Description Network Embedding All the Things","title":"Details"},{"location":"Repositories/neat-ml/#dependencies","text":"External Dependencies Package Version python >=3.8,<3.11 tqdm ^4.64.0 click ^8.1.3 PyYAML ^6.0 sklearn ^0.0 opencv-python ^4.6.0 numpy ^1.22.4 pandas ^1.4.2 jaro-winkler 2.0.0 grape ^0.1.8 transformers ^4.20.0 boto3 ^1.24.13 botocore ^1.27.13 linkml ^1.2.14 linkml-validator ^0.3.0 neat-ml-schema ^0.1.10","title":"Dependencies"},{"location":"Repositories/neat-ml/#documentation","text":"","title":"Documentation"},{"location":"Repositories/neat-ml/#network-embedding-all-the-things-neat","text":"NEAT is a flexible pipeline for: Parsing a graph serialization Generating node and edge embeddings Training classifiers for link prediction and label expansion Making predictions Creating well formatted output and metrics for the predictions Doing all of the above reproducibly, with cloud compute (or locally, if preferred)","title":"Network Embedding All the Things (NEAT)"},{"location":"Repositories/neat-ml/#quick-start","text":"pip install neat-ml neat run --config neat_quickstart.yaml # This example file is in the repo here NEAT will write graph embeddings to a new quickstart_output directory.","title":"Quick Start"},{"location":"Repositories/neat-ml/#requirements","text":"This pipeline has grape as a major dependency. Methods from tensorflow and are supported, but are not installed as dependencies to avoid version conflicts. Please install the versions of tensorflow , scikit-learn , CUDA , and cudnn compatible with your system and with each other prior to installing NEAT if you wish to use these methods. On Linux, the tensorflow installation may be easiest using conda as follows: wget https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh -O anaconda.sh bash ./anaconda.sh -b echo \"export PATH=\\$PATH:$HOME/anaconda3/bin\" >> $HOME/.bashrc conda init conda install cudnn conda install tensorflow","title":"Requirements"},{"location":"Repositories/neat-ml/#installation","text":"pip install neat-ml","title":"Installation"},{"location":"Repositories/neat-ml/#running-neat","text":"neat run --config tests/resources/test.yaml # example neat run --config [your yaml] The pipeline is driven by a YAML file (e.g. tests/resources/test.yaml ), which contains all parameters needed to complete the pipeline. The contents and expected values for this file are defined by the neat-ml-schema . This includes hyperparameters for machine learning and also things like files/paths to output results. Specify paths to node and edge files: GraphDataConfiguration: graph: directed: False node_path: path/to/nodes.tsv edge_path: path/to/edges.tsv If the graph data is in a compressed file and/or a remote location (e.g., on KG-Hub), one or more URLs may be specified in the source_data parameter: GraphDataConfiguration: source_data: files: - path: https://kg-hub.berkeleybop.io/kg-obo/bfo/2019-08-26/bfo_kgx_tsv.tar.gz desc: \"This is BFO, your favorite basic formal ontology, now in graph form.\" - path: https://someremoteurl.com/graph2.tar.gz desc: \"This is some other graph - it may be useful.\" A diagram explaining the design a bit is here . If you are uploading to AWS/S3, see here for configuring AWS credentials:","title":"Running NEAT"},{"location":"Repositories/neat-ml/#credits","text":"Developed by Deepak Unni, Justin Reese, J. Harry Caufield, and Harshad Hegde.","title":"Credits"},{"location":"Repositories/oakx-grape/","text":"oakx-grape Details GitHub INCATools/oakx-grape Language Python Description Experimental OAK plugin for Grape Dependencies External Dependencies Package Version python >=3.9,<3.12 bioregistry ^0.5.136 tox ^3.25.1 click ^8.1.3 importlib ^1.0.4 scipy ^1.9.0 oaklib ^0.1.43 grape * ensmallen 0.8.28 sphinx {'version': '^5.3.0', 'extras': ['docs']} sphinx-autodoc-typehints {'version': '^1.19.4', 'extras': ['docs']} sphinx-click {'version': '^4.3.0', 'extras': ['docs']} myst-parser {'version': '^0.18.1', 'extras': ['docs']} furo {'version': '^2022.9.29', 'extras': ['docs']} Documentation oakx-grape \ud83c\udf33 \ud83c\udf47 Grape wrapper for OAK \ud83c\udf33 \ud83c\udf47 ALPHA Usage Macbook users with M1 processor need to do a few extra steps as follows: Download Anaconda . conda create --name oakx-grape-env python=3.9 conda activate oakx-grape-env pip install poetry poetry install The steps below are common to everyone. pip install oakx-grape poetry run runoak -i grape:sqlite:obo:pato relationships --direction both shape Install NVM + NPM These instructions help setup nvm and npm on one's system. Install GraphViz and OboGraphViz brew install graphviz npm install -g obographviz How it works This plugin implements a grape wrapper. The wrapper in fact wraps two adapters: An adaptor to ensmallen/grape, for performing performance-intensive graph operations An OAK adapter for handling everything else, including lookup by labels, search, predicate filtering, etc There are two choices of selector: grape:kgobo:{go,pato,uberon,...} grape:OAK-SELECTOR with the first pattern, the grape graph is loaded from kgobo, and the oak adapter is loaded from semantic sql with the second, you can most existing existing OAK adapters: sqlite/semsql obo rdf/owl Note you CANNOT use a backend like ubegraph or bioportal that relies on API calls The idea is we will be able to run a notebook like this: https://github.com/INCATools/ontology-access-kit/blob/main/notebooks/Monarch/PhenIO-Tutorial.ipynb With the semsim part handled by OAK Acknowledgements This cookiecutter project was developed from the oakx-plugin-cookiecutter template and will be kept up-to-date using cruft .","title":"oakx-grape"},{"location":"Repositories/oakx-grape/#oakx-grape","text":"","title":"oakx-grape"},{"location":"Repositories/oakx-grape/#details","text":"GitHub INCATools/oakx-grape Language Python Description Experimental OAK plugin for Grape","title":"Details"},{"location":"Repositories/oakx-grape/#dependencies","text":"External Dependencies Package Version python >=3.9,<3.12 bioregistry ^0.5.136 tox ^3.25.1 click ^8.1.3 importlib ^1.0.4 scipy ^1.9.0 oaklib ^0.1.43 grape * ensmallen 0.8.28 sphinx {'version': '^5.3.0', 'extras': ['docs']} sphinx-autodoc-typehints {'version': '^1.19.4', 'extras': ['docs']} sphinx-click {'version': '^4.3.0', 'extras': ['docs']} myst-parser {'version': '^0.18.1', 'extras': ['docs']} furo {'version': '^2022.9.29', 'extras': ['docs']}","title":"Dependencies"},{"location":"Repositories/oakx-grape/#documentation","text":"","title":"Documentation"},{"location":"Repositories/oakx-grape/#oakx-grape_1","text":"\ud83c\udf33 \ud83c\udf47 Grape wrapper for OAK \ud83c\udf33 \ud83c\udf47 ALPHA","title":"oakx-grape"},{"location":"Repositories/oakx-grape/#usage","text":"Macbook users with M1 processor need to do a few extra steps as follows: Download Anaconda . conda create --name oakx-grape-env python=3.9 conda activate oakx-grape-env pip install poetry poetry install The steps below are common to everyone. pip install oakx-grape poetry run runoak -i grape:sqlite:obo:pato relationships --direction both shape","title":"Usage"},{"location":"Repositories/oakx-grape/#install-nvm-npm","text":"These instructions help setup nvm and npm on one's system.","title":"Install NVM + NPM"},{"location":"Repositories/oakx-grape/#install-graphviz-and-obographviz","text":"brew install graphviz npm install -g obographviz","title":"Install GraphViz and OboGraphViz"},{"location":"Repositories/oakx-grape/#how-it-works","text":"This plugin implements a grape wrapper. The wrapper in fact wraps two adapters: An adaptor to ensmallen/grape, for performing performance-intensive graph operations An OAK adapter for handling everything else, including lookup by labels, search, predicate filtering, etc There are two choices of selector: grape:kgobo:{go,pato,uberon,...} grape:OAK-SELECTOR with the first pattern, the grape graph is loaded from kgobo, and the oak adapter is loaded from semantic sql with the second, you can most existing existing OAK adapters: sqlite/semsql obo rdf/owl Note you CANNOT use a backend like ubegraph or bioportal that relies on API calls The idea is we will be able to run a notebook like this: https://github.com/INCATools/ontology-access-kit/blob/main/notebooks/Monarch/PhenIO-Tutorial.ipynb With the semsim part handled by OAK","title":"How it works"},{"location":"Repositories/oakx-grape/#acknowledgements","text":"This cookiecutter project was developed from the oakx-plugin-cookiecutter template and will be kept up-to-date using cruft .","title":"Acknowledgements"},{"location":"Repositories/ontogpt/","text":"ontogpt Details GitHub monarch-initiative/ontogpt Language Jupyter Notebook Description LLM-based ontological extraction tools, including SPIRES Dependencies External Dependencies Package Version python >=3.9,<3.9.7 ruamel.yaml >=0.17.31 Jinja2 {'version': '>=3.1.2', 'optional': True} aiohttp >=3.8.4 beautifulsoup4 >=4.11.1 bioc >=2.0 cachier >=2.1.0 click >=8.1.3 fastapi {'version': '>=0.115.0', 'extras': ['web'], 'optional': True} gilda >=1.0.0 inflect >=6.0.2 inflection >=0.5.1 linkml >=1.9.3-rc1 linkml-owl ^0.3.0 myst-parser {'version': '>=0.18.1', 'extras': ['docs'], 'optional': True} oaklib >=0.5.28 pydantic >=2.4.0 python-multipart {'version': '>=0.0.7', 'extras': ['web'], 'optional': True} recipe-scrapers {'version': '>=14.35.0', 'extras': ['recipes'], 'optional': True} requests ^2.31.0 requests-cache >=1.2.0 sphinx {'version': '>=5.3.0', 'extras': ['docs'], 'optional': True} sphinx-autodoc-typehints {'version': '>=1.19.4', 'extras': ['docs'], 'optional': True} sphinx-click {'version': '>=4.3.0', 'extras': ['docs'], 'optional': True} sphinx-rtd-theme {'version': '>=1.0.0', 'extras': ['docs'], 'optional': True} tiktoken >=0.7.0 uvicorn {'version': '>=0.20.0', 'optional': True} wikipedia >=1.4.0 wikipedia-api >=0.5.8 dpath ^2.1.6 toml ^0.10.2 frontend ^0.0.3 litellm >=1.44.28 diskcache ^5.6.3 pymupdf ^1.24.9 scipy [{'version': '^1.13.0', 'python': '<3.13'}, {'version': '^1.14.1', 'python': '>=3.13'}] numpy [{'version': '>=1.23,<2.1', 'python': '<3.13'}, {'version': '>=2.0.0', 'python': '>=3.13'}] Documentation OntoGPT Introduction OntoGPT is a Python package for extracting structured information from text with large language models (LLMs), instruction prompts , and ontology-based grounding. For more details, please see the full documentation. Quick Start OntoGPT runs on the command line, though there's also a minimal web app interface (see Web Application section below). Ensure you have Python 3.9 or greater installed. Install with pip : pip install ontogpt Set your OpenAI API key: runoak set-apikey -e openai <your openai api key> See the list of all OntoGPT commands: ontogpt --help Try a simple example of information extraction: echo \"One treatment for high blood pressure is carvedilol.\" > example.txt ontogpt extract -i example.txt -t drug OntoGPT will retrieve the necessary ontologies and output results to the command line. Your output will provide all extracted objects under the heading extracted_object . Web Application There is a bare bones web application for running OntoGPT and viewing results. First, install the required dependencies with pip by running the following command: pip install ontogpt [ web ] Then run this command to start the web application: web-ontogpt NOTE: We do not recommend hosting this webapp publicly without authentication. Model APIs OntoGPT uses the litellm package ( https://litellm.vercel.app/ ) to interface with LLMs. This means most APIs are supported, including OpenAI, Azure, Anthropic, Mistral, Replicate, and beyond. The model name to use may be found from the command ontogpt list-models - use the name in the first column with the --model option. In most cases, this will require setting the API key for a particular service as above: runoak set-apikey -e anthropic-key <your anthropic api key> Some endpoints, such as OpenAI models through Azure, require setting additional details. These may be set similarly: runoak set-apikey -e azure-key <your azure api key> runoak set-apikey -e azure-base <your azure endpoint url> runoak set-apikey -e azure-version <your azure api version, e.g. \"2023-05-15\" > These details may also be set as environment variables as follows: export AZURE_API_KEY = \"my-azure-api-key\" export AZURE_API_BASE = \"https://example-endpoint.openai.azure.com\" export AZURE_API_VERSION = \"2023-05-15\" Open Models Open LLMs may be retrieved and run through the ollama package ( https://ollama.com/ ). You will need to install ollama (see the GitHub repo ), and you may need to start it as a service with a command like ollama serve or sudo systemctl start ollama . Then retrieve a model with ollama pull <modelname> , e.g., ollama pull llama3 . The model may then be used in OntoGPT by prefixing its name with ollama/ , e.g., ollama/llama3 , along with the --model option. Some ollama models may not be listed in ontogpt list-models but the full list of downloaded LLMs can be seen with ollama list command. Evaluations OntoGPT's functions have been evaluated on test data. Please see the full documentation for details on these evaluations and how to reproduce them. Related Projects TALISMAN , a tool for generating summaries of functions enriched within a gene set. TALISMAN uses OntoGPT to work with LLMs. Tutorials and Presentations Presentation: \"Staying grounded: assembling structured biological knowledge with help from large language models\" - presented by Harry Caufield as part of the AgBioData Consortium webinar series (September 2023) Slides Video Presentation: \"Transforming unstructured biomedical texts with large language models\" - presented by Harry Caufield as part of the BOSC track at ISMB/ECCB 2023 (July 2023) Slides Video Presentation: \"OntoGPT: A framework for working with ontologies and large language models\" - talk by Chris Mungall at Joint Food Ontology Workgroup (May 2023) Slides Video Citation The information extraction approach used in OntoGPT, SPIRES, is described further in: Caufield JH, Hegde H, Emonet V, Harris NL, Joachimiak MP, Matentzoglu N, et al. Structured prompt interrogation and recursive extraction of semantics (SPIRES): A method for populating knowledge bases using zero-shot learning. Bioinformatics , Volume 40, Issue 3, March 2024, btae104, https://doi.org/10.1093/bioinformatics/btae104 . Acknowledgements This project is part of the Monarch Initiative . We also gratefully acknowledge Bosch Research for their support of this research project.","title":"ontogpt"},{"location":"Repositories/ontogpt/#ontogpt","text":"","title":"ontogpt"},{"location":"Repositories/ontogpt/#details","text":"GitHub monarch-initiative/ontogpt Language Jupyter Notebook Description LLM-based ontological extraction tools, including SPIRES","title":"Details"},{"location":"Repositories/ontogpt/#dependencies","text":"External Dependencies Package Version python >=3.9,<3.9.7 ruamel.yaml >=0.17.31 Jinja2 {'version': '>=3.1.2', 'optional': True} aiohttp >=3.8.4 beautifulsoup4 >=4.11.1 bioc >=2.0 cachier >=2.1.0 click >=8.1.3 fastapi {'version': '>=0.115.0', 'extras': ['web'], 'optional': True} gilda >=1.0.0 inflect >=6.0.2 inflection >=0.5.1 linkml >=1.9.3-rc1 linkml-owl ^0.3.0 myst-parser {'version': '>=0.18.1', 'extras': ['docs'], 'optional': True} oaklib >=0.5.28 pydantic >=2.4.0 python-multipart {'version': '>=0.0.7', 'extras': ['web'], 'optional': True} recipe-scrapers {'version': '>=14.35.0', 'extras': ['recipes'], 'optional': True} requests ^2.31.0 requests-cache >=1.2.0 sphinx {'version': '>=5.3.0', 'extras': ['docs'], 'optional': True} sphinx-autodoc-typehints {'version': '>=1.19.4', 'extras': ['docs'], 'optional': True} sphinx-click {'version': '>=4.3.0', 'extras': ['docs'], 'optional': True} sphinx-rtd-theme {'version': '>=1.0.0', 'extras': ['docs'], 'optional': True} tiktoken >=0.7.0 uvicorn {'version': '>=0.20.0', 'optional': True} wikipedia >=1.4.0 wikipedia-api >=0.5.8 dpath ^2.1.6 toml ^0.10.2 frontend ^0.0.3 litellm >=1.44.28 diskcache ^5.6.3 pymupdf ^1.24.9 scipy [{'version': '^1.13.0', 'python': '<3.13'}, {'version': '^1.14.1', 'python': '>=3.13'}] numpy [{'version': '>=1.23,<2.1', 'python': '<3.13'}, {'version': '>=2.0.0', 'python': '>=3.13'}]","title":"Dependencies"},{"location":"Repositories/ontogpt/#documentation","text":"","title":"Documentation"},{"location":"Repositories/ontogpt/#ontogpt_1","text":"","title":"OntoGPT"},{"location":"Repositories/ontogpt/#introduction","text":"OntoGPT is a Python package for extracting structured information from text with large language models (LLMs), instruction prompts , and ontology-based grounding. For more details, please see the full documentation.","title":"Introduction"},{"location":"Repositories/ontogpt/#quick-start","text":"OntoGPT runs on the command line, though there's also a minimal web app interface (see Web Application section below). Ensure you have Python 3.9 or greater installed. Install with pip : pip install ontogpt Set your OpenAI API key: runoak set-apikey -e openai <your openai api key> See the list of all OntoGPT commands: ontogpt --help Try a simple example of information extraction: echo \"One treatment for high blood pressure is carvedilol.\" > example.txt ontogpt extract -i example.txt -t drug OntoGPT will retrieve the necessary ontologies and output results to the command line. Your output will provide all extracted objects under the heading extracted_object .","title":"Quick Start"},{"location":"Repositories/ontogpt/#web-application","text":"There is a bare bones web application for running OntoGPT and viewing results. First, install the required dependencies with pip by running the following command: pip install ontogpt [ web ] Then run this command to start the web application: web-ontogpt NOTE: We do not recommend hosting this webapp publicly without authentication.","title":"Web Application"},{"location":"Repositories/ontogpt/#model-apis","text":"OntoGPT uses the litellm package ( https://litellm.vercel.app/ ) to interface with LLMs. This means most APIs are supported, including OpenAI, Azure, Anthropic, Mistral, Replicate, and beyond. The model name to use may be found from the command ontogpt list-models - use the name in the first column with the --model option. In most cases, this will require setting the API key for a particular service as above: runoak set-apikey -e anthropic-key <your anthropic api key> Some endpoints, such as OpenAI models through Azure, require setting additional details. These may be set similarly: runoak set-apikey -e azure-key <your azure api key> runoak set-apikey -e azure-base <your azure endpoint url> runoak set-apikey -e azure-version <your azure api version, e.g. \"2023-05-15\" > These details may also be set as environment variables as follows: export AZURE_API_KEY = \"my-azure-api-key\" export AZURE_API_BASE = \"https://example-endpoint.openai.azure.com\" export AZURE_API_VERSION = \"2023-05-15\"","title":"Model APIs"},{"location":"Repositories/ontogpt/#open-models","text":"Open LLMs may be retrieved and run through the ollama package ( https://ollama.com/ ). You will need to install ollama (see the GitHub repo ), and you may need to start it as a service with a command like ollama serve or sudo systemctl start ollama . Then retrieve a model with ollama pull <modelname> , e.g., ollama pull llama3 . The model may then be used in OntoGPT by prefixing its name with ollama/ , e.g., ollama/llama3 , along with the --model option. Some ollama models may not be listed in ontogpt list-models but the full list of downloaded LLMs can be seen with ollama list command.","title":"Open Models"},{"location":"Repositories/ontogpt/#evaluations","text":"OntoGPT's functions have been evaluated on test data. Please see the full documentation for details on these evaluations and how to reproduce them.","title":"Evaluations"},{"location":"Repositories/ontogpt/#related-projects","text":"TALISMAN , a tool for generating summaries of functions enriched within a gene set. TALISMAN uses OntoGPT to work with LLMs.","title":"Related Projects"},{"location":"Repositories/ontogpt/#tutorials-and-presentations","text":"Presentation: \"Staying grounded: assembling structured biological knowledge with help from large language models\" - presented by Harry Caufield as part of the AgBioData Consortium webinar series (September 2023) Slides Video Presentation: \"Transforming unstructured biomedical texts with large language models\" - presented by Harry Caufield as part of the BOSC track at ISMB/ECCB 2023 (July 2023) Slides Video Presentation: \"OntoGPT: A framework for working with ontologies and large language models\" - talk by Chris Mungall at Joint Food Ontology Workgroup (May 2023) Slides Video","title":"Tutorials and Presentations"},{"location":"Repositories/ontogpt/#citation","text":"The information extraction approach used in OntoGPT, SPIRES, is described further in: Caufield JH, Hegde H, Emonet V, Harris NL, Joachimiak MP, Matentzoglu N, et al. Structured prompt interrogation and recursive extraction of semantics (SPIRES): A method for populating knowledge bases using zero-shot learning. Bioinformatics , Volume 40, Issue 3, March 2024, btae104, https://doi.org/10.1093/bioinformatics/btae104 .","title":"Citation"},{"location":"Repositories/ontogpt/#acknowledgements","text":"This project is part of the Monarch Initiative . We also gratefully acknowledge Bosch Research for their support of this research project.","title":"Acknowledgements"},{"location":"Repositories/ontology-access-kit/","text":"ontology-access-kit Details GitHub INCATools/ontology-access-kit Language Python Description Ontology Access Kit: A python library and command line application for working with ontologies Dependencies External Dependencies Package Version python >=3.9,<4.0.0 curies >=0.6.6 pronto >=2.5.0 SPARQLWrapper * SQLAlchemy >=1.4.32 linkml-runtime >=1.5.3 linkml-renderer >=0.3.0 networkx >=2.7.1 sssom ^0.4.4 ratelimit >=2.2.1 appdirs >=1.4.4 semsql >=0.3.1 kgcl-schema ^0.6.9 funowl >=0.2.0 gilda {'version': '>=1.0.0', 'optional': True} bioservices {'version': '*', 'optional': True} semsimian {'version': '>=0.2.18', 'optional': True} kgcl-rdflib 0.5.0 llm ^0.14 html2text {'version': '*', 'optional': True} aiohttp {'version': '*', 'optional': True} pystow >=0.5.0 class-resolver >=0.4.2 ontoportal-client >=0.0.3 prefixmaps >=0.1.2 ols-client >=0.1.1 airium >=0.2.5 ndex2 >=3.5.0 pysolr ^3.9.0 eutils >=0.6.0 requests-cache ^1.0.1 click * urllib3 {'version': '< 2', 'optional': True} pydantic * jsonlines * tenacity >=8.2.3 defusedxml >=0.7.1 Documentation Ontology Access Kit (OAK) Python lib for common ontology operations over a variety of backends. OAK provides a collection of interfaces for various ontology operations, including: look up basic features of an ontology element, such as its label, definition, relationships, or aliases search an ontology for a term validate an ontology modify or delete terms generate and visualize subgraphs identify lexical matches and export as SSSOM mapping tables perform more advanced operations, such as graph traversal, OWL axiom processing, or text annotation These interfaces are separated from any particular backend, for which there a number of different adapters . This means the same Python API and command line can be used regardless of whether the ontology: is served by a remote API such as OLS or BioPortal is present locally on the filesystem in owl, obo, obojson, or sqlite formats is to be downloaded from a remote repository such as the OBO library is queried from a remote database, including SPARQL endpoints (Ontobee/Ubergraph), A SQL database, a Solr/ES endpoint Documentation: incatools.github.io/ontology-access-kit Presentations: Using the OAK command line OBO Academy 2023 Introduction to OAK OAK workshop 2022 Contributing See the contribution guidelines at CONTRIBUTING.md . All contributors are expected to uphold our Code of Conduct . Usage from oaklib import get_adapter # connect to the CL sqlite database adapter # (will first download if not already downloaded) adapter = get_adapter ( \"sqlite:obo:cl\" ) NEURON = \"CL:0000540\" print ( '## Basic info' ) print ( f 'ID: { NEURON } ' ) print ( f 'Label: { adapter . label ( NEURON ) } ' ) for alias in adapter . entity_aliases ( NEURON ): print ( f 'Alias: { alias } ' ) print ( '## Relationships (direct)' ) for relationship in adapter . relationships ([ NEURON ]): print ( f ' * { relationship . predicate } -> { relationship . object } \" { adapter . label ( relationship . object ) } \"' ) print ( '## Ancestors (over IS_A and PART_OF)' ) from oaklib.datamodels.vocabulary import IS_A , PART_OF from oaklib.interfaces import OboGraphInterface if not isinstance ( adapter , OboGraphInterface ): raise ValueError ( 'This adapter does not support graph operations' ) for ancestor in adapter . ancestors ( NEURON , predicates = [ IS_A , PART_OF ]): print ( f ' * ANCESTOR: \" { adapter . label ( ancestor ) } \"' ) For more examples, see demo notebook tutorial part 2 Command Line See: CLI docs Example notebooks Search Use the pronto backend to fetch and parse an ontology from the OBO library, then use the search command runoak -i obolibrary:pato.obo search osmol Returns: PATO:0001655 ! osmolarity PATO:0001656 ! decreased osmolarity PATO:0001657 ! increased osmolarity PATO:0002027 ! osmolality PATO:0002028 ! decreased osmolality PATO:0002029 ! increased osmolality PATO:0045034 ! normal osmolality PATO:0045035 ! normal osmolarity QC and Validation Perform validation on PR using sqlite/rdftab instance: runoak -i sqlite:../semantic-sql/db/pr.db validate List all terms List all terms obolibrary has for mondo runoak -i obolibrary:mondo.obo terms Lexical index Make a lexical index of all terms in Mondo: runoak -i obolibrary:mondo.obo lexmatch -L mondo.index.yaml Search Searching over OBO using ontobee: runoak -i ontobee: search tentacle yields: http://purl.obolibrary.org/obo/CEPH_0000256 ! tentacle http://purl.obolibrary.org/obo/CEPH_0000257 ! tentacle absence http://purl.obolibrary.org/obo/CEPH_0000258 ! tentacle pad ... Searching over a broader set of ontologies in bioportal (requires API KEY) (https://www.bioontology.org/wiki/BioPortal_Help#Getting_an_API_key) runoak set-apikey bioportal YOUR-KEY-HERE runoak -i bioportal: search tentacle yields: BTO:0001357 ! tentacle http://purl.jp/bio/4/id/200906071014668510 ! tentacle CEPH:0000256 ! tentacle http://www.projecthalo.com/aura#Tentacle ! Tentacle CEPH:0000256 ! tentacle ... Alternatively, you can add \"BIOPORTAL_API_KEY\" to your environment variables. Searching over more limited set of ontologies in Ubergraph: runoak -v -i ubergraph: search tentacle yields UBERON:0013206 ! nasal tentacle Annotating Texts runoak -i bioportal: annotate neuron from CA4 region of hippocampus of mouse yields: object_id : CL:0000540 object_label : neuron object_source : https://data.bioontology.org/ontologies/NIFDYS match_type : PREF subject_start : 1 subject_end : 6 subject_label : NEURON object_id : http://www.co-ode.org/ontologies/galen#Neuron object_label : Neuron object_source : https://data.bioontology.org/ontologies/GALEN match_type : PREF subject_start : 1 subject_end : 6 subject_label : NEURON ... Mapping Create a SSSOM mapping file for a set of ontologies: robot merge -I http://purl.obolibrary.org/obo/hp.owl -I http://purl.obolibrary.org/obo/mp.owl convert --check false -o hp-mp.obo runoak lexmatch -i hp-mp.obo -o hp-mp.sssom.tsv Visualization of ancestor graphs Use the sqlite backend to visualize graph up from 'vacuole' using test ontology sqlite: runoak -i sqlite:tests/input/go-nucleus.db viz GO:0005773 Same using ubergraph, restricting to is-a and part-of runoak -i ubergraph: viz GO:0005773 -p i,BFO:0000050 Same using pronto, fetching ontology from obolibrary runoak -i obolibrary:go.obo viz GO:0005773 Configuration OAK uses pystow for caching. By default, this goes inside ~/.data/ , but can be configured following these instructions .","title":"ontology-access-kit"},{"location":"Repositories/ontology-access-kit/#ontology-access-kit","text":"","title":"ontology-access-kit"},{"location":"Repositories/ontology-access-kit/#details","text":"GitHub INCATools/ontology-access-kit Language Python Description Ontology Access Kit: A python library and command line application for working with ontologies","title":"Details"},{"location":"Repositories/ontology-access-kit/#dependencies","text":"External Dependencies Package Version python >=3.9,<4.0.0 curies >=0.6.6 pronto >=2.5.0 SPARQLWrapper * SQLAlchemy >=1.4.32 linkml-runtime >=1.5.3 linkml-renderer >=0.3.0 networkx >=2.7.1 sssom ^0.4.4 ratelimit >=2.2.1 appdirs >=1.4.4 semsql >=0.3.1 kgcl-schema ^0.6.9 funowl >=0.2.0 gilda {'version': '>=1.0.0', 'optional': True} bioservices {'version': '*', 'optional': True} semsimian {'version': '>=0.2.18', 'optional': True} kgcl-rdflib 0.5.0 llm ^0.14 html2text {'version': '*', 'optional': True} aiohttp {'version': '*', 'optional': True} pystow >=0.5.0 class-resolver >=0.4.2 ontoportal-client >=0.0.3 prefixmaps >=0.1.2 ols-client >=0.1.1 airium >=0.2.5 ndex2 >=3.5.0 pysolr ^3.9.0 eutils >=0.6.0 requests-cache ^1.0.1 click * urllib3 {'version': '< 2', 'optional': True} pydantic * jsonlines * tenacity >=8.2.3 defusedxml >=0.7.1","title":"Dependencies"},{"location":"Repositories/ontology-access-kit/#documentation","text":"","title":"Documentation"},{"location":"Repositories/ontology-access-kit/#ontology-access-kit-oak","text":"Python lib for common ontology operations over a variety of backends. OAK provides a collection of interfaces for various ontology operations, including: look up basic features of an ontology element, such as its label, definition, relationships, or aliases search an ontology for a term validate an ontology modify or delete terms generate and visualize subgraphs identify lexical matches and export as SSSOM mapping tables perform more advanced operations, such as graph traversal, OWL axiom processing, or text annotation These interfaces are separated from any particular backend, for which there a number of different adapters . This means the same Python API and command line can be used regardless of whether the ontology: is served by a remote API such as OLS or BioPortal is present locally on the filesystem in owl, obo, obojson, or sqlite formats is to be downloaded from a remote repository such as the OBO library is queried from a remote database, including SPARQL endpoints (Ontobee/Ubergraph), A SQL database, a Solr/ES endpoint","title":"Ontology Access Kit (OAK)"},{"location":"Repositories/ontology-access-kit/#documentation_1","text":"incatools.github.io/ontology-access-kit Presentations: Using the OAK command line OBO Academy 2023 Introduction to OAK OAK workshop 2022","title":"Documentation:"},{"location":"Repositories/ontology-access-kit/#contributing","text":"See the contribution guidelines at CONTRIBUTING.md . All contributors are expected to uphold our Code of Conduct .","title":"Contributing"},{"location":"Repositories/ontology-access-kit/#usage","text":"from oaklib import get_adapter # connect to the CL sqlite database adapter # (will first download if not already downloaded) adapter = get_adapter ( \"sqlite:obo:cl\" ) NEURON = \"CL:0000540\" print ( '## Basic info' ) print ( f 'ID: { NEURON } ' ) print ( f 'Label: { adapter . label ( NEURON ) } ' ) for alias in adapter . entity_aliases ( NEURON ): print ( f 'Alias: { alias } ' ) print ( '## Relationships (direct)' ) for relationship in adapter . relationships ([ NEURON ]): print ( f ' * { relationship . predicate } -> { relationship . object } \" { adapter . label ( relationship . object ) } \"' ) print ( '## Ancestors (over IS_A and PART_OF)' ) from oaklib.datamodels.vocabulary import IS_A , PART_OF from oaklib.interfaces import OboGraphInterface if not isinstance ( adapter , OboGraphInterface ): raise ValueError ( 'This adapter does not support graph operations' ) for ancestor in adapter . ancestors ( NEURON , predicates = [ IS_A , PART_OF ]): print ( f ' * ANCESTOR: \" { adapter . label ( ancestor ) } \"' ) For more examples, see demo notebook tutorial part 2","title":"Usage"},{"location":"Repositories/ontology-access-kit/#command-line","text":"See: CLI docs Example notebooks","title":"Command Line"},{"location":"Repositories/ontology-access-kit/#search","text":"Use the pronto backend to fetch and parse an ontology from the OBO library, then use the search command runoak -i obolibrary:pato.obo search osmol Returns: PATO:0001655 ! osmolarity PATO:0001656 ! decreased osmolarity PATO:0001657 ! increased osmolarity PATO:0002027 ! osmolality PATO:0002028 ! decreased osmolality PATO:0002029 ! increased osmolality PATO:0045034 ! normal osmolality PATO:0045035 ! normal osmolarity","title":"Search"},{"location":"Repositories/ontology-access-kit/#qc-and-validation","text":"Perform validation on PR using sqlite/rdftab instance: runoak -i sqlite:../semantic-sql/db/pr.db validate","title":"QC and Validation"},{"location":"Repositories/ontology-access-kit/#list-all-terms","text":"List all terms obolibrary has for mondo runoak -i obolibrary:mondo.obo terms","title":"List all terms"},{"location":"Repositories/ontology-access-kit/#lexical-index","text":"Make a lexical index of all terms in Mondo: runoak -i obolibrary:mondo.obo lexmatch -L mondo.index.yaml","title":"Lexical index"},{"location":"Repositories/ontology-access-kit/#search_1","text":"Searching over OBO using ontobee: runoak -i ontobee: search tentacle yields: http://purl.obolibrary.org/obo/CEPH_0000256 ! tentacle http://purl.obolibrary.org/obo/CEPH_0000257 ! tentacle absence http://purl.obolibrary.org/obo/CEPH_0000258 ! tentacle pad ... Searching over a broader set of ontologies in bioportal (requires API KEY) (https://www.bioontology.org/wiki/BioPortal_Help#Getting_an_API_key) runoak set-apikey bioportal YOUR-KEY-HERE runoak -i bioportal: search tentacle yields: BTO:0001357 ! tentacle http://purl.jp/bio/4/id/200906071014668510 ! tentacle CEPH:0000256 ! tentacle http://www.projecthalo.com/aura#Tentacle ! Tentacle CEPH:0000256 ! tentacle ... Alternatively, you can add \"BIOPORTAL_API_KEY\" to your environment variables. Searching over more limited set of ontologies in Ubergraph: runoak -v -i ubergraph: search tentacle yields UBERON:0013206 ! nasal tentacle","title":"Search"},{"location":"Repositories/ontology-access-kit/#annotating-texts","text":"runoak -i bioportal: annotate neuron from CA4 region of hippocampus of mouse yields: object_id : CL:0000540 object_label : neuron object_source : https://data.bioontology.org/ontologies/NIFDYS match_type : PREF subject_start : 1 subject_end : 6 subject_label : NEURON object_id : http://www.co-ode.org/ontologies/galen#Neuron object_label : Neuron object_source : https://data.bioontology.org/ontologies/GALEN match_type : PREF subject_start : 1 subject_end : 6 subject_label : NEURON ...","title":"Annotating Texts"},{"location":"Repositories/ontology-access-kit/#mapping","text":"Create a SSSOM mapping file for a set of ontologies: robot merge -I http://purl.obolibrary.org/obo/hp.owl -I http://purl.obolibrary.org/obo/mp.owl convert --check false -o hp-mp.obo runoak lexmatch -i hp-mp.obo -o hp-mp.sssom.tsv","title":"Mapping"},{"location":"Repositories/ontology-access-kit/#visualization-of-ancestor-graphs","text":"Use the sqlite backend to visualize graph up from 'vacuole' using test ontology sqlite: runoak -i sqlite:tests/input/go-nucleus.db viz GO:0005773 Same using ubergraph, restricting to is-a and part-of runoak -i ubergraph: viz GO:0005773 -p i,BFO:0000050 Same using pronto, fetching ontology from obolibrary runoak -i obolibrary:go.obo viz GO:0005773","title":"Visualization of ancestor graphs"},{"location":"Repositories/ontology-access-kit/#configuration","text":"OAK uses pystow for caching. By default, this goes inside ~/.data/ , but can be configured following these instructions .","title":"Configuration"},{"location":"Repositories/ontology-development-kit/","text":"ontology-development-kit Details GitHub INCATools/ontology-development-kit Language Jinja Description Ontology lifecycle management Documentation https://www.wikidata.org/wiki/Q112336713 The Ontology Development Kit (ODK) Manage your ontology's life cycle with the Ontology Development Kit (ODK)! The ODK is - a toolbox of various ontology related tools such as ROBOT, owltools, dosdp-tools and many more, bundled as a docker image - a set of executable workflows for managing your ontology's continuous integration, quality control, releases and dynamic imports For more details, see 2022 Paper 2018 Article ICBO Workshop Slides 2018 ICBO Workshop Slides 2017 Where to get help How-to guides : How to create your first repository with the ODK How to add license, title and description to your ontology How to import large ontologies efficiently Reference: Learn about the different kinds of release artefacts Learn about the ODK Project Configuration Schema for allowed parameters in your [project]-odk.yaml Community: If you have issues, file them here: https://github.com/INCATools/ontology-development-kit/issues We also have an active community on Slack; you can request access by making a ticket here as well Steering Committee @gouttegd Damien Goutte-Gattat (ODK Lead, FlyBase) @matentzn Nicolas Matentzoglu (ODK Deputy, Semanticly) @cmungall Chris Mungall (ODK Founder, LBNL) Core team @anitacaron Anita Caron (Novo Nordisk) @balhoff Jim Balhoff (RENCI) @dosumis David Osumi-Sutherland (Sanger) @ehartley Emily Hartley (Critical Path Institute) @hkir-dev Huseyin Kir (EMBL-EBI) @shawntanzk Shawn Tan (Novo Nordisk) @ubyndr Ismail Ugur Bayindir (EMBL-EBI) Full list of contributors: https://github.com/INCATools/ontology-development-kit/graphs/contributors Cite https://doi.org/10.1093/database/baac087 Outstanding contributions Outstanding contributors are groups and institutions that have helped with organising the ODK development, providing funding, advice and infrastructure. We are very grateful for all your contributions - the project would not exist without you! Monarch Initiative The Monarch Initiative is a consortium of medical, biological and computational experts that provide major ontology services such as the Human Phenotype Ontology, Mondo and an integrative data and analytic platform connecting phenotypes to genotypes across species, bridging basic and applied research with semantics-based analysis. https://monarchinitiative.org/ European Bioinformatics Institute The Samples, Phenotypes and Ontologies (SPOT) team, led by Helen Parkinson, is concerned with high throughput mammalian phenotyping, Semantics as a Service and human genetics resources. Members of the SPOT team including David Osumi-Sutherland have made major contributions to ODK, and provided advice, use cases and funding. https://www.ebi.ac.uk/spot/ University of Florida Biomedical Informatics Program https://hobi.med.ufl.edu/research-2/biomedical-informatics-3/ Knocean Inc. Knocean Inc. offers consulting and development services for science informatics, in particular in the area of biomedical ontologies and ontology tooling. http://knocean.com/ Critical Path Institute The Critical Path For Alzheimer\u2019s Disease (CPAD) is a public-private partnership aimed at creating new tools and methods that can be applied to increase the efficiency of the development process of new treatments for Alzheimer disease (AD) and related neurodegenerative disorders with impaired cognition and function. https://c-path.org/ Requirements Docker Using the ODK docker image requires Docker Engine version 20.10.8 or greater for v1.3.1. Tips and Tricks Customizing your ODK installation You will likely want to customize the build process, and of course to edit the ontology. We recommend that you do not edit the main Makefile, but instead the supplemental one (e.g. myont.Makefile) is src/ontology An example of how you can customise your imports for example is documented here Migrating an existing ontology repo to the ODK The ODK is designed for creating a new repo for a new ontology. It can also be used to help figure out how to migrate an existing git repository to the ODK structure. There are different ways to do this. Manually compare your ontology against the template folder and make necessary adjustments Run the seed script as if creating a new repo. Manually compare this with your existing repo and use git mv to rearrange, and adding any missing files by copying them across and doing a git add Create a new repo de novo and abandon your existing one, using, for example, github issue mover to move tickets across. Obviously the second method is not ideal as you lose your git history. Note even with git mv history tracking becomes harder. If you have built your ontology using a previous version of ODK, migration of your setup is unfortunately a manual process. In general you do not absolutely need to upgrade your setup, but doing so will bring advantages in terms of aligning with emerging standards ways of doing things. The less customization you do on your repo the easier it should be to migrate. Consult the CHANGELOG.md file for changes made between releases to assist in upgrading. More documentation You will find additional documentation in the src/ontology/README-editors.md file in your repo. The ODK also comes with built in options to generate your own shiny documentation; see for example the PATO documentation here which is almost entirely autogenerated from the ODK. Alternative to Docker You can run the seed script without docker using Python3.6 or higher and Java. See requirements.txt for python requirements. This is, however, not recommended. Running OBO dashboard with ODK Note: this is an highly experimental feature as of ODK version 1.2.24. Note that the display and the scores are under active development and will change considerably in the near future. Example implementation: - https://github.com/obophenotype/obophenotype.github.io ( web ) You need two files to run the ODK dashboard generator: An ODK container wrapper (called odk.sh in the following), similar to the run.sh file in your typical repos src/ontology directory. A dashboard config YAML file (called dashboard-config.yml in the following) With both files, you can then create a dashboard using the following command: sh odk.sh obodash -C dashboard-config.yml The wrapper ( odk.sh ) should contain something like the following: #!/bin/sh # Wrapper script for ODK docker container. # docker run -e ROBOT_JAVA_ARGS='-Xmx4G' -e JAVA_OPTS='-Xmx4G' \\ -v $PWD/dashboard:/tools/OBO-Dashboard/dashboard \\ -v $PWD/dashboard-config.yml:/tools/OBO-Dashboard/dashboard-config.yml \\ -v $PWD/ontologies:/tools/OBO-Dashboard/build/ontologies \\ -v $PWD/sparql:/tools/OBO-Dashboard/sparql \\ -w /work --rm -ti obolibrary/odkfull \"$@\" Note that this essentially binds a few local directories to the running ODK container. The directories serve the following purposes: dashboard : this is where the dashboard is deposited. Look at index.html in your browser. ontologies : this is where ontologies are downloaded to and synced up sparql : an optional directory that allows you to add custom checks on top of the usual OBO profile. This is a minimal example dashboard config for a potential phenotype dashboard: title: OBO Phenotype Dashboard description: Quality control for OBO phenotype ontologies. Under construction. ontologies: custom: - id: wbphenotype - id: dpo base_ns: - http://purl.obolibrary.org/obo/FBcv environment: ROBOT_JAR: /tools/robot.jar ROBOT: robot The ontologies will, if they exist, be retrieved from their OBO purls and evaluated. There are more options potentially of interest: title: OBO Phenotype Dashboard description: Quality control for OBO phenotype ontologies. Under construction. ontologies: custom: - id: myont mirror_from: https://raw.githubusercontent.com/obophenotype/c-elegans-phenotype-ontology/master/wbphenotype-base.owl - id: dpo base_ns: - http://purl.obolibrary.org/obo/FBcv prefer_base: True profile: baseprofile: \"https://raw.githubusercontent.com/ontodev/robot/master/robot-core/src/main/resources/report_profile.txt\" custom: - \"WARN\\tfile:./sparql/missing_xrefs.sparql\" report_truncation_limit: 300 redownload_after_hours: 2 environment: ROBOT_JAR: /tools/robot.jar ROBOT: robot mirror_from allows specifying a download URL other than the default OBO purl base_ns allows specifying the set of namespaces considered to be owned by the ontology (only terms in these namespaces will be evaluated for this ontology. Default is http://purl.obolibrary.org/obo/CAPTIALISEDONTOLOGYID). report_truncation_limit allows truncating long (sometimes HUGE ontology reports) to make them go easier on GITHUB version control. redownload_after_hours : this allows to specify how long to wait before trying to download an ontology (which could be a time consuming process!) again. environment : is currently a necessary parameter but will be made optional in future versions. It allows adding environment variables directly to the config, rather than passing them in as -e parameters to the docker container (both are equivalent though.) profile is an optional parameter that allows specifying your own profile for the quality control (ROBOT) report. By default, this is using the ROBOT report default profile. You can either specify your own profile from scratch, or extend the current default with additional test by using the baseprofile parameter. Find out more about ROBOT profiles here . A fully working example can be found here .","title":"ontology-development-kit"},{"location":"Repositories/ontology-development-kit/#ontology-development-kit","text":"","title":"ontology-development-kit"},{"location":"Repositories/ontology-development-kit/#details","text":"GitHub INCATools/ontology-development-kit Language Jinja Description Ontology lifecycle management","title":"Details"},{"location":"Repositories/ontology-development-kit/#documentation","text":"https://www.wikidata.org/wiki/Q112336713","title":"Documentation"},{"location":"Repositories/ontology-development-kit/#the-ontology-development-kit-odk","text":"Manage your ontology's life cycle with the Ontology Development Kit (ODK)! The ODK is - a toolbox of various ontology related tools such as ROBOT, owltools, dosdp-tools and many more, bundled as a docker image - a set of executable workflows for managing your ontology's continuous integration, quality control, releases and dynamic imports For more details, see 2022 Paper 2018 Article ICBO Workshop Slides 2018 ICBO Workshop Slides 2017","title":"The Ontology Development Kit (ODK)"},{"location":"Repositories/ontology-development-kit/#where-to-get-help","text":"How-to guides : How to create your first repository with the ODK How to add license, title and description to your ontology How to import large ontologies efficiently Reference: Learn about the different kinds of release artefacts Learn about the ODK Project Configuration Schema for allowed parameters in your [project]-odk.yaml Community: If you have issues, file them here: https://github.com/INCATools/ontology-development-kit/issues We also have an active community on Slack; you can request access by making a ticket here as well","title":"Where to get help"},{"location":"Repositories/ontology-development-kit/#steering-committee","text":"@gouttegd Damien Goutte-Gattat (ODK Lead, FlyBase) @matentzn Nicolas Matentzoglu (ODK Deputy, Semanticly) @cmungall Chris Mungall (ODK Founder, LBNL)","title":"Steering Committee"},{"location":"Repositories/ontology-development-kit/#core-team","text":"@anitacaron Anita Caron (Novo Nordisk) @balhoff Jim Balhoff (RENCI) @dosumis David Osumi-Sutherland (Sanger) @ehartley Emily Hartley (Critical Path Institute) @hkir-dev Huseyin Kir (EMBL-EBI) @shawntanzk Shawn Tan (Novo Nordisk) @ubyndr Ismail Ugur Bayindir (EMBL-EBI) Full list of contributors: https://github.com/INCATools/ontology-development-kit/graphs/contributors","title":"Core team"},{"location":"Repositories/ontology-development-kit/#cite","text":"https://doi.org/10.1093/database/baac087","title":"Cite"},{"location":"Repositories/ontology-development-kit/#outstanding-contributions","text":"Outstanding contributors are groups and institutions that have helped with organising the ODK development, providing funding, advice and infrastructure. We are very grateful for all your contributions - the project would not exist without you!","title":"Outstanding contributions"},{"location":"Repositories/ontology-development-kit/#monarch-initiative","text":"The Monarch Initiative is a consortium of medical, biological and computational experts that provide major ontology services such as the Human Phenotype Ontology, Mondo and an integrative data and analytic platform connecting phenotypes to genotypes across species, bridging basic and applied research with semantics-based analysis. https://monarchinitiative.org/","title":"Monarch Initiative"},{"location":"Repositories/ontology-development-kit/#european-bioinformatics-institute","text":"The Samples, Phenotypes and Ontologies (SPOT) team, led by Helen Parkinson, is concerned with high throughput mammalian phenotyping, Semantics as a Service and human genetics resources. Members of the SPOT team including David Osumi-Sutherland have made major contributions to ODK, and provided advice, use cases and funding. https://www.ebi.ac.uk/spot/","title":"European Bioinformatics Institute"},{"location":"Repositories/ontology-development-kit/#university-of-florida-biomedical-informatics-program","text":"https://hobi.med.ufl.edu/research-2/biomedical-informatics-3/","title":"University of Florida Biomedical Informatics Program"},{"location":"Repositories/ontology-development-kit/#knocean-inc","text":"Knocean Inc. offers consulting and development services for science informatics, in particular in the area of biomedical ontologies and ontology tooling. http://knocean.com/","title":"Knocean Inc."},{"location":"Repositories/ontology-development-kit/#critical-path-institute","text":"The Critical Path For Alzheimer\u2019s Disease (CPAD) is a public-private partnership aimed at creating new tools and methods that can be applied to increase the efficiency of the development process of new treatments for Alzheimer disease (AD) and related neurodegenerative disorders with impaired cognition and function. https://c-path.org/","title":"Critical Path Institute"},{"location":"Repositories/ontology-development-kit/#requirements","text":"","title":"Requirements"},{"location":"Repositories/ontology-development-kit/#docker","text":"Using the ODK docker image requires Docker Engine version 20.10.8 or greater for v1.3.1.","title":"Docker"},{"location":"Repositories/ontology-development-kit/#tips-and-tricks","text":"","title":"Tips and Tricks"},{"location":"Repositories/ontology-development-kit/#customizing-your-odk-installation","text":"You will likely want to customize the build process, and of course to edit the ontology. We recommend that you do not edit the main Makefile, but instead the supplemental one (e.g. myont.Makefile) is src/ontology An example of how you can customise your imports for example is documented here","title":"Customizing your ODK installation"},{"location":"Repositories/ontology-development-kit/#migrating-an-existing-ontology-repo-to-the-odk","text":"The ODK is designed for creating a new repo for a new ontology. It can also be used to help figure out how to migrate an existing git repository to the ODK structure. There are different ways to do this. Manually compare your ontology against the template folder and make necessary adjustments Run the seed script as if creating a new repo. Manually compare this with your existing repo and use git mv to rearrange, and adding any missing files by copying them across and doing a git add Create a new repo de novo and abandon your existing one, using, for example, github issue mover to move tickets across. Obviously the second method is not ideal as you lose your git history. Note even with git mv history tracking becomes harder. If you have built your ontology using a previous version of ODK, migration of your setup is unfortunately a manual process. In general you do not absolutely need to upgrade your setup, but doing so will bring advantages in terms of aligning with emerging standards ways of doing things. The less customization you do on your repo the easier it should be to migrate. Consult the CHANGELOG.md file for changes made between releases to assist in upgrading.","title":"Migrating an existing ontology repo to the ODK"},{"location":"Repositories/ontology-development-kit/#more-documentation","text":"You will find additional documentation in the src/ontology/README-editors.md file in your repo. The ODK also comes with built in options to generate your own shiny documentation; see for example the PATO documentation here which is almost entirely autogenerated from the ODK.","title":"More documentation"},{"location":"Repositories/ontology-development-kit/#alternative-to-docker","text":"You can run the seed script without docker using Python3.6 or higher and Java. See requirements.txt for python requirements. This is, however, not recommended.","title":"Alternative to Docker"},{"location":"Repositories/ontology-development-kit/#running-obo-dashboard-with-odk","text":"Note: this is an highly experimental feature as of ODK version 1.2.24. Note that the display and the scores are under active development and will change considerably in the near future. Example implementation: - https://github.com/obophenotype/obophenotype.github.io ( web ) You need two files to run the ODK dashboard generator: An ODK container wrapper (called odk.sh in the following), similar to the run.sh file in your typical repos src/ontology directory. A dashboard config YAML file (called dashboard-config.yml in the following) With both files, you can then create a dashboard using the following command: sh odk.sh obodash -C dashboard-config.yml The wrapper ( odk.sh ) should contain something like the following: #!/bin/sh # Wrapper script for ODK docker container. # docker run -e ROBOT_JAVA_ARGS='-Xmx4G' -e JAVA_OPTS='-Xmx4G' \\ -v $PWD/dashboard:/tools/OBO-Dashboard/dashboard \\ -v $PWD/dashboard-config.yml:/tools/OBO-Dashboard/dashboard-config.yml \\ -v $PWD/ontologies:/tools/OBO-Dashboard/build/ontologies \\ -v $PWD/sparql:/tools/OBO-Dashboard/sparql \\ -w /work --rm -ti obolibrary/odkfull \"$@\" Note that this essentially binds a few local directories to the running ODK container. The directories serve the following purposes: dashboard : this is where the dashboard is deposited. Look at index.html in your browser. ontologies : this is where ontologies are downloaded to and synced up sparql : an optional directory that allows you to add custom checks on top of the usual OBO profile. This is a minimal example dashboard config for a potential phenotype dashboard: title: OBO Phenotype Dashboard description: Quality control for OBO phenotype ontologies. Under construction. ontologies: custom: - id: wbphenotype - id: dpo base_ns: - http://purl.obolibrary.org/obo/FBcv environment: ROBOT_JAR: /tools/robot.jar ROBOT: robot The ontologies will, if they exist, be retrieved from their OBO purls and evaluated. There are more options potentially of interest: title: OBO Phenotype Dashboard description: Quality control for OBO phenotype ontologies. Under construction. ontologies: custom: - id: myont mirror_from: https://raw.githubusercontent.com/obophenotype/c-elegans-phenotype-ontology/master/wbphenotype-base.owl - id: dpo base_ns: - http://purl.obolibrary.org/obo/FBcv prefer_base: True profile: baseprofile: \"https://raw.githubusercontent.com/ontodev/robot/master/robot-core/src/main/resources/report_profile.txt\" custom: - \"WARN\\tfile:./sparql/missing_xrefs.sparql\" report_truncation_limit: 300 redownload_after_hours: 2 environment: ROBOT_JAR: /tools/robot.jar ROBOT: robot mirror_from allows specifying a download URL other than the default OBO purl base_ns allows specifying the set of namespaces considered to be owned by the ontology (only terms in these namespaces will be evaluated for this ontology. Default is http://purl.obolibrary.org/obo/CAPTIALISEDONTOLOGYID). report_truncation_limit allows truncating long (sometimes HUGE ontology reports) to make them go easier on GITHUB version control. redownload_after_hours : this allows to specify how long to wait before trying to download an ontology (which could be a time consuming process!) again. environment : is currently a necessary parameter but will be made optional in future versions. It allows adding environment variables directly to the config, rather than passing them in as -e parameters to the docker container (both are equivalent though.) profile is an optional parameter that allows specifying your own profile for the quality control (ROBOT) report. By default, this is using the ROBOT report default profile. You can either specify your own profile from scratch, or extend the current default with additional test by using the baseprofile parameter. Find out more about ROBOT profiles here . A fully working example can be found here .","title":"Running OBO dashboard with ODK"},{"location":"Repositories/phenopacket-schema/","text":"phenopacket-schema Details GitHub phenopackets/phenopacket-schema Language Java Description Repository for the GA4GH phenopacket schema","title":"phenopacket-schema"},{"location":"Repositories/phenopacket-schema/#phenopacket-schema","text":"","title":"phenopacket-schema"},{"location":"Repositories/phenopacket-schema/#details","text":"GitHub phenopackets/phenopacket-schema Language Java Description Repository for the GA4GH phenopacket schema","title":"Details"},{"location":"Repositories/phenopacket-tools/","text":"phenopacket-tools Details GitHub phenopackets/phenopacket-tools Language Java Description An app and library for building, conversion, and validation of GA4GH Phenopackets. Documentation Phenopacket-tools Phenopacket-tools is an open-source Java library and command-line interface (CLI) application for construction, conversion, and validation of phenopackets. The library simplifies construction of phenopackets by providing concise builders, programmatic shortcuts, and predefined building blocks (ontology classes) for commonly used elements such as anatomical organs, age of onset, biospecimen type, and clinical modifiers. The library validates the basic syntax and semantic requirements of the Phenopacket Schema as well as the adherence to additional user-defined requirements. Availability CLI application A ZIP file with prebuilt CLI application is available for download from the Releases page . Alternatively, the application can be built from source, as described in the library user guide (see the links below). Library We provide phenopacket-tools library for use in JVM-based applications. We publish the JAR artifacts to public Maven central repository, and we make the Javadoc API documentation available for the latest release as well as the bleeding edge code. Documentation We provide documentation with a Tutorial showing how to use the CLI, a comprehensive CLI user guide , a Library user guide , and the Javadoc API documentation . The documentation is published in two documentation branches: - stable : corresponds to the latest published release, and generally also to the last commit of the main Git branch - Tutorial - CLI user guide - Library user guide - Javadoc API documentation - latest : corresponds to the bleeding edge code that is on the develop Git branch - Tutorial - CLI user guide - Library user guide - Javadoc API documentation Issues Comments, questions or issues? Feel free to submit a ticket to our GitHub tracker .","title":"phenopacket-tools"},{"location":"Repositories/phenopacket-tools/#phenopacket-tools","text":"","title":"phenopacket-tools"},{"location":"Repositories/phenopacket-tools/#details","text":"GitHub phenopackets/phenopacket-tools Language Java Description An app and library for building, conversion, and validation of GA4GH Phenopackets.","title":"Details"},{"location":"Repositories/phenopacket-tools/#documentation","text":"","title":"Documentation"},{"location":"Repositories/phenopacket-tools/#phenopacket-tools_1","text":"Phenopacket-tools is an open-source Java library and command-line interface (CLI) application for construction, conversion, and validation of phenopackets. The library simplifies construction of phenopackets by providing concise builders, programmatic shortcuts, and predefined building blocks (ontology classes) for commonly used elements such as anatomical organs, age of onset, biospecimen type, and clinical modifiers. The library validates the basic syntax and semantic requirements of the Phenopacket Schema as well as the adherence to additional user-defined requirements.","title":"Phenopacket-tools"},{"location":"Repositories/phenopacket-tools/#availability","text":"","title":"Availability"},{"location":"Repositories/phenopacket-tools/#cli-application","text":"A ZIP file with prebuilt CLI application is available for download from the Releases page . Alternatively, the application can be built from source, as described in the library user guide (see the links below).","title":"CLI application"},{"location":"Repositories/phenopacket-tools/#library","text":"We provide phenopacket-tools library for use in JVM-based applications. We publish the JAR artifacts to public Maven central repository, and we make the Javadoc API documentation available for the latest release as well as the bleeding edge code.","title":"Library"},{"location":"Repositories/phenopacket-tools/#documentation_1","text":"We provide documentation with a Tutorial showing how to use the CLI, a comprehensive CLI user guide , a Library user guide , and the Javadoc API documentation . The documentation is published in two documentation branches: - stable : corresponds to the latest published release, and generally also to the last commit of the main Git branch - Tutorial - CLI user guide - Library user guide - Javadoc API documentation - latest : corresponds to the bleeding edge code that is on the develop Git branch - Tutorial - CLI user guide - Library user guide - Javadoc API documentation","title":"Documentation"},{"location":"Repositories/phenopacket-tools/#issues","text":"Comments, questions or issues? Feel free to submit a ticket to our GitHub tracker .","title":"Issues"},{"location":"Repositories/phenopacket2prompt/","text":"phenopacket2prompt Details GitHub P2GX/phenopacket2prompt Language Java Description GA4GH Phenopacket to LLM prompt Documentation phenopacket2prompt GA4GH Phenopacket to LLM prompt Prompts generated with this code base have been used for: - A benchmark of some large language models against a differential diagnostics tool, Exomiser (code here ). Our evidence shows Exomiser outperforms the LLMs as per our preprint , data at this zenodo . - A comparison of gpt-4o's and Meditron3-70B ability to carry out differential diagnosis when prompted in 10 different languages, results at this medRxiv or zenodo (see also this related link for some more data).","title":"phenopacket2prompt"},{"location":"Repositories/phenopacket2prompt/#phenopacket2prompt","text":"","title":"phenopacket2prompt"},{"location":"Repositories/phenopacket2prompt/#details","text":"GitHub P2GX/phenopacket2prompt Language Java Description GA4GH Phenopacket to LLM prompt","title":"Details"},{"location":"Repositories/phenopacket2prompt/#documentation","text":"","title":"Documentation"},{"location":"Repositories/phenopacket2prompt/#phenopacket2prompt_1","text":"GA4GH Phenopacket to LLM prompt Prompts generated with this code base have been used for: - A benchmark of some large language models against a differential diagnostics tool, Exomiser (code here ). Our evidence shows Exomiser outperforms the LLMs as per our preprint , data at this zenodo . - A comparison of gpt-4o's and Meditron3-70B ability to carry out differential diagnosis when prompted in 10 different languages, results at this medRxiv or zenodo (see also this related link for some more data).","title":"phenopacket2prompt"},{"location":"Repositories/phenotype2phenopacket/","text":"phenotype2phenopacket Details GitHub monarch-initiative/phenotype2phenopacket Language Python Description Phenotype2Phenopacket is a command-line tool that converts a phenotype annotation into GA4GH Phenopackets, facilitating standardised phenotypic data representation. Dependencies External Dependencies Package Version python >=3.10,<4.0 pandas ^2.0.0 phenopackets ^2.0.2 oaklib ^0.5.1 click ^8.1.3 pheval ^0.5.8 Documentation Phenotype2Phenopacket Phenotype2Phenopacket is a command-line interface (CLI) application for the construction of phenopackets from a phenotype annotation file. Installation Phenotype2Phenopacket can be installed from PyPi. pip install phenotype2phenopacket Usages To convert all OMIM diseases in a phenotype annotation file to disease phenopackets, where all phenotypes are retained: p2p convert --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir To convert all OMIM diseases in a phenotype annotation file to lightweight disease phenopackets (without phenotypic features): p2p convert --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir --skip-phenotypic-features To create synthetic patient disease phenopackets, where the dataset is more variable and frequencies are taken into account and constrained noise is applied : p2p create --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir You can also limit the number of disease phenopackets converted/created: p2p convert --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir --num-diseases 100 Or limit for a specific OMIM disease: p2p create --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir --omim-id OMIM:619340 Or limit for a list of OMIM IDs specified in a text file, with each ID separated by a new line: p2p create --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir --omim-id-list /path/to/list.txt To add known gene-to-phenotype relationships to phenopackets: p2p add-genes --phenopacket-dir /path/to/synthetic-phenopackets --genes-to-disease /path/to/genes_to_disease.txt --hgnc-data /path/to/hgnc_complete_set.txt --output-dir /path/to/output-dir NOTE: To add known gene-to-phenotype the genes_to_disease.txt is expected. It can be downloaded here .","title":"phenotype2phenopacket"},{"location":"Repositories/phenotype2phenopacket/#phenotype2phenopacket","text":"","title":"phenotype2phenopacket"},{"location":"Repositories/phenotype2phenopacket/#details","text":"GitHub monarch-initiative/phenotype2phenopacket Language Python Description Phenotype2Phenopacket is a command-line tool that converts a phenotype annotation into GA4GH Phenopackets, facilitating standardised phenotypic data representation.","title":"Details"},{"location":"Repositories/phenotype2phenopacket/#dependencies","text":"External Dependencies Package Version python >=3.10,<4.0 pandas ^2.0.0 phenopackets ^2.0.2 oaklib ^0.5.1 click ^8.1.3 pheval ^0.5.8","title":"Dependencies"},{"location":"Repositories/phenotype2phenopacket/#documentation","text":"","title":"Documentation"},{"location":"Repositories/phenotype2phenopacket/#phenotype2phenopacket_1","text":"Phenotype2Phenopacket is a command-line interface (CLI) application for the construction of phenopackets from a phenotype annotation file.","title":"Phenotype2Phenopacket"},{"location":"Repositories/phenotype2phenopacket/#installation","text":"Phenotype2Phenopacket can be installed from PyPi. pip install phenotype2phenopacket","title":"Installation"},{"location":"Repositories/phenotype2phenopacket/#usages","text":"To convert all OMIM diseases in a phenotype annotation file to disease phenopackets, where all phenotypes are retained: p2p convert --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir To convert all OMIM diseases in a phenotype annotation file to lightweight disease phenopackets (without phenotypic features): p2p convert --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir --skip-phenotypic-features To create synthetic patient disease phenopackets, where the dataset is more variable and frequencies are taken into account and constrained noise is applied : p2p create --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir You can also limit the number of disease phenopackets converted/created: p2p convert --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir --num-diseases 100 Or limit for a specific OMIM disease: p2p create --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir --omim-id OMIM:619340 Or limit for a list of OMIM IDs specified in a text file, with each ID separated by a new line: p2p create --phenotype-annotation /path/to/phenotype.hpoa --output-dir /path/to/output-dir --omim-id-list /path/to/list.txt To add known gene-to-phenotype relationships to phenopackets: p2p add-genes --phenopacket-dir /path/to/synthetic-phenopackets --genes-to-disease /path/to/genes_to_disease.txt --hgnc-data /path/to/hgnc_complete_set.txt --output-dir /path/to/output-dir NOTE: To add known gene-to-phenotype the genes_to_disease.txt is expected. It can be downloaded here .","title":"Usages"},{"location":"Repositories/pheval.ai_marrvel/","text":"pheval.ai_marrvel Details GitHub monarch-initiative/pheval.ai_marrvel Language Python Description A PhEval plugin for integrating AI-MARRVEL, enabling variant prioritisation based on phenotypic data in a standardised pipeline. Dependencies External Dependencies Package Version python ^3.10 docker ^7.1.0 pheval ^0.5.2 Documentation AI-MARRVEL Runner for PhEval This is the AI-MARRVEL plugin for PhEval. With this plugin, you can leverage the tool, AI-MARRVEL, to run the PhEval pipeline seamlessly. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here. Installation git clone https://github.com/yaseminbridges/pheval.ai_marrvel.git cd pheval.ai_marrvel poetry install poetry shell Alternative install with pip pip install pheval-ai-marrvel Configuring a single run: Setting up the input directory A config.yaml should be located in the input directory and formatted like so: tool : AI-MARRVEL tool_version : 1.0.0 variant_analysis : True gene_analysis : True disease_analysis : False tool_specific_configuration_options : environment : nextflow # either apptainer/docker/nextflow The AI-MARRVEL data dependencies should also be unpacked into the input directory. The overall structure of the input directory should look something like: . \u251c\u2500\u2500 annotate \u251c\u2500\u2500 bcf_annotate \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 filter_vep \u251c\u2500\u2500 merge_expand \u251c\u2500\u2500 mod5_diffusion \u251c\u2500\u2500 model_inputs \u251c\u2500\u2500 omim_annotate \u251c\u2500\u2500 phrank \u251c\u2500\u2500 predict_new \u251c\u2500\u2500 var_tier \u2514\u2500\u2500 vep The testdata directory should include the subdirectory named phenopackets - which should contain phenopackets and vcf - which should contain the gzipped VCF files. e.g., \u251c\u2500\u2500 testdata_dir \u251c\u2500\u2500 phenopackets \u2514\u2500\u2500 vcf Run command pheval run --input-dir /path/to/input_dir \\ --runner aimarrvelrunner \\ --output-dir /path/to/output_dir \\ --testdata-dir /path/to/testdata_dir","title":"pheval.ai_marrvel"},{"location":"Repositories/pheval.ai_marrvel/#phevalai_marrvel","text":"","title":"pheval.ai_marrvel"},{"location":"Repositories/pheval.ai_marrvel/#details","text":"GitHub monarch-initiative/pheval.ai_marrvel Language Python Description A PhEval plugin for integrating AI-MARRVEL, enabling variant prioritisation based on phenotypic data in a standardised pipeline.","title":"Details"},{"location":"Repositories/pheval.ai_marrvel/#dependencies","text":"External Dependencies Package Version python ^3.10 docker ^7.1.0 pheval ^0.5.2","title":"Dependencies"},{"location":"Repositories/pheval.ai_marrvel/#documentation","text":"","title":"Documentation"},{"location":"Repositories/pheval.ai_marrvel/#ai-marrvel-runner-for-pheval","text":"This is the AI-MARRVEL plugin for PhEval. With this plugin, you can leverage the tool, AI-MARRVEL, to run the PhEval pipeline seamlessly. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here.","title":"AI-MARRVEL Runner for PhEval"},{"location":"Repositories/pheval.ai_marrvel/#installation","text":"git clone https://github.com/yaseminbridges/pheval.ai_marrvel.git cd pheval.ai_marrvel poetry install poetry shell Alternative install with pip pip install pheval-ai-marrvel","title":"Installation"},{"location":"Repositories/pheval.ai_marrvel/#configuring-a-single-run","text":"","title":"Configuring a single run:"},{"location":"Repositories/pheval.ai_marrvel/#setting-up-the-input-directory","text":"A config.yaml should be located in the input directory and formatted like so: tool : AI-MARRVEL tool_version : 1.0.0 variant_analysis : True gene_analysis : True disease_analysis : False tool_specific_configuration_options : environment : nextflow # either apptainer/docker/nextflow The AI-MARRVEL data dependencies should also be unpacked into the input directory. The overall structure of the input directory should look something like: . \u251c\u2500\u2500 annotate \u251c\u2500\u2500 bcf_annotate \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 filter_vep \u251c\u2500\u2500 merge_expand \u251c\u2500\u2500 mod5_diffusion \u251c\u2500\u2500 model_inputs \u251c\u2500\u2500 omim_annotate \u251c\u2500\u2500 phrank \u251c\u2500\u2500 predict_new \u251c\u2500\u2500 var_tier \u2514\u2500\u2500 vep The testdata directory should include the subdirectory named phenopackets - which should contain phenopackets and vcf - which should contain the gzipped VCF files. e.g., \u251c\u2500\u2500 testdata_dir \u251c\u2500\u2500 phenopackets \u2514\u2500\u2500 vcf","title":"Setting up the input directory"},{"location":"Repositories/pheval.ai_marrvel/#run-command","text":"pheval run --input-dir /path/to/input_dir \\ --runner aimarrvelrunner \\ --output-dir /path/to/output_dir \\ --testdata-dir /path/to/testdata_dir","title":"Run command"},{"location":"Repositories/pheval.exomiser/","text":"pheval.exomiser Details GitHub monarch-initiative/pheval.exomiser Language Python Description Exomiser plugin for PhEval. Dependencies External Dependencies Package Version python >=3.10,<4.0.0 click ^8.1.3 phenopackets ^2.0.2 google ^3.0.0 pyaml ^21.10.1 oaklib ^0.5.12 docker ^6.0.1 pydantic ^2.7.1 numpy <2 pheval ^0.6.1 Documentation Exomiser Runner for PhEval This is the Exomiser plugin for PhEval. With this plugin, you can leverage the variant prioritisation tool, Exomiser, to run the PhEval pipeline seamlessly. Detailed documentation on how to set up and run the PhEval Makefile pipeline with the Exomiser runner can be found here . The setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here. Installation You can install the Exomiser directly with PyPi (recommended): pip install pheval.exomiser Alternatively you can clone the pheval.exomiser repo and set up the poetry environment: git clone https://github.com/monarch-initiative/pheval.exomiser.git cd pheval.exomiser poetry shell poetry install Configuring a single run: Setting up the input directory A config.yaml should be located in the input directory and formatted like so: tool : exomiser tool_version : 13.2.0 variant_analysis : True gene_analysis : True disease_analysis : False tool_specific_configuration_options : environment : local exomiser_software_directory : exomiser-cli-13.2.0 analysis_configuration_file : preset-exome-analysis.yml max_jobs : 0 application_properties : remm_version : cadd_version : hg19_data_version : 2302 hg19_local_frequency_path : # name of hg19 local frequency file hg19_whitelist_path : 2302_hg19_clinvar_whitelist.tsv.gz # only required for Exomiser v13.3.0 and earlier, can be left blank for Exomiser v14.0.0 onwards. hg38_data_version : 2302 hg38_local_frequency_path : # name of hg38 local frequency file hg38_whitelist_path : phenotype_data_version : 2302 cache_type : cache_caffeine_spec : output_formats : [ JSON , HTML ] # options include HTML, JSON, TSV_VARIANT, TSV_GENE, VCF post_process : score_name : combinedScore sort_order : DESCENDING The bare minimum fields are filled to give an idea on the requirements. This is so that the application.properties for Exomiser can be correctly configured. An example config has been provided pheval.exomiser/config.yaml . The Exomiser input data directories (phenotype database and variant database) should also be located in the input directory - or a symlink pointing to the location. The exomiser_software_directory points to the name of the Exomiser distribution directory located in the input directory. The analysis configuration file (in this case: preset-exome-analysis.yml ) should be located within the input directory. The whitelist paths for the hg19 and hg38 dbs need only be specified for Exomiser v13.3.0 and earlier (unless specifying your own whitelist), as Exomiser v14.0.0 now includes this in the db. To save on diskspace we recommend limiting the Exomiser output to JSON, this can be specified by setting the output_formats field in the config.yaml to [JSON] If using optional databases, such as REMM/CADD/local frequency the optional data input should look like so in the input directory: \u251c\u2500\u2500 cadd \u2502 \u2514\u2500\u2500 {{CADD-VERSION}} \u2502 \u251c\u2500\u2500 hg19 \u2502 \u2502 \u251c\u2500\u2500 InDels.tsv.gz \u2502 \u2502 \u2514\u2500\u2500 whole_genome_SNVs.tsv.gz \u2502 \u2514\u2500\u2500 hg38 \u2502 \u251c\u2500\u2500 InDels.tsv.gz \u2502 \u2514\u2500\u2500 whole_genome_SNVs.tsv.gz \u251c\u2500\u2500 local \u2502 \u251c\u2500\u2500 local_frequency_test_hg19.tsv.gz \u2502 \u2514\u2500\u2500 local_frequency_test_hg38.tsv.gz \u2514\u2500\u2500 remm \u251c\u2500\u2500 ReMM.v{{REMM-VERSION}}.hg19.tsv.gz \u2514\u2500\u2500 ReMM.v{{REMM-VERSION}}.hg38.tsv.gz The overall structure of the input directory should look like this with the cadd, local and remm directories being optional, depending on the exomiser configuration: . \u251c\u2500\u2500 2302_hg19 \u2502 \u251c\u2500\u2500 2302_hg19_clinvar_whitelist.tsv.gz \u2502 \u251c\u2500\u2500 2302_hg19_clinvar_whitelist.tsv.gz.tbi \u2502 \u251c\u2500\u2500 2302_hg19_genome.h2.db \u2502 \u251c\u2500\u2500 2302_hg19_transcripts_ensembl.ser \u2502 \u251c\u2500\u2500 2302_hg19_transcripts_refseq.ser \u2502 \u251c\u2500\u2500 2302_hg19_transcripts_ucsc.ser \u2502 \u2514\u2500\u2500 2302_hg19_variants.mv.db \u251c\u2500\u2500 2302_phenotype \u2502 \u251c\u2500\u2500 2302_phenotype.h2.db \u2502 \u251c\u2500\u2500 hp.obo \u2502 \u251c\u2500\u2500 phenix \u2502 \u2502 \u251c\u2500\u2500 ALL_SOURCES_ALL_FREQUENCIES_genes_to_phenotype.txt \u2502 \u2502 \u251c\u2500\u2500 hp.obo \u2502 \u2502 \u2514\u2500\u2500 out \u2502 \u2514\u2500\u2500 rw_string_10.mv \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 exomiser-cli-13.2.0 \u2502 \u251c\u2500\u2500 lib \u2502 \u2514\u2500\u2500 exomiser-cli-13.2.0.jar \u251c\u2500\u2500 preset-exome-analysis.yml \u251c\u2500\u2500 cadd \u2502 \u2514\u2500\u2500 {{CADD-VERSION}} \u2502 \u251c\u2500\u2500 hg19 \u2502 \u2502 \u251c\u2500\u2500 InDels.tsv.gz \u2502 \u2502 \u2514\u2500\u2500 whole_genome_SNVs.tsv.gz \u2502 \u2514\u2500\u2500 hg38 \u2502 \u251c\u2500\u2500 InDels.tsv.gz \u2502 \u2514\u2500\u2500 whole_genome_SNVs.tsv.gz \u251c\u2500\u2500 local \u2502 \u251c\u2500\u2500 local_frequency_test_hg19.tsv.gz \u2502 \u2514\u2500\u2500 local_frequency_test_hg38.tsv.gz \u2514\u2500\u2500 remm \u251c\u2500\u2500 ReMM.v{{REMM-VERSION}}.hg19.tsv.gz \u2514\u2500\u2500 ReMM.v{{REMM-VERSION}}.hg38.tsv.gz Setting up the testdata directory The Exomiser plugin for PhEval accepts phenopackets and vcf files as an input for running Exomiser. The plugin can be run in phenotype_only mode, where only phenopackets are required as an input, however, this must be specified in the config.yaml by setting variant_analysis: False The testdata directory should include subdirectories named phenopackets and vcf if running with variant prioritisation. e.g., \u251c\u2500\u2500 testdata_dir \u251c\u2500\u2500 phenopackets \u2514\u2500\u2500 vcf [!IMPORTANT] If a vcf directory is not found in the testdata directory then the path to the VCF will be taken from the phenopacket if variant_analysis is set to True. Run command Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner exomiserphevalrunner \\ --output-dir /path/to/output_dir \\ --version 13 .2.0 Common errors You may see an error that is related to the current setuptools being used: pkg_resources.extern.packaging.requirements.InvalidRequirement: Expected closing RIGHT_PARENTHESIS requests ( < 3 ,> = 2 .12.* ) ; extra == 'parse' ~~~~~~~~~~^ To fix the error, setuptools needs to be downgraded to version 66: pip uninstall setuptools pip install -U setuptools == \"66\"","title":"pheval.exomiser"},{"location":"Repositories/pheval.exomiser/#phevalexomiser","text":"","title":"pheval.exomiser"},{"location":"Repositories/pheval.exomiser/#details","text":"GitHub monarch-initiative/pheval.exomiser Language Python Description Exomiser plugin for PhEval.","title":"Details"},{"location":"Repositories/pheval.exomiser/#dependencies","text":"External Dependencies Package Version python >=3.10,<4.0.0 click ^8.1.3 phenopackets ^2.0.2 google ^3.0.0 pyaml ^21.10.1 oaklib ^0.5.12 docker ^6.0.1 pydantic ^2.7.1 numpy <2 pheval ^0.6.1","title":"Dependencies"},{"location":"Repositories/pheval.exomiser/#documentation","text":"","title":"Documentation"},{"location":"Repositories/pheval.exomiser/#exomiser-runner-for-pheval","text":"This is the Exomiser plugin for PhEval. With this plugin, you can leverage the variant prioritisation tool, Exomiser, to run the PhEval pipeline seamlessly. Detailed documentation on how to set up and run the PhEval Makefile pipeline with the Exomiser runner can be found here . The setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here.","title":"Exomiser Runner for PhEval"},{"location":"Repositories/pheval.exomiser/#installation","text":"You can install the Exomiser directly with PyPi (recommended): pip install pheval.exomiser Alternatively you can clone the pheval.exomiser repo and set up the poetry environment: git clone https://github.com/monarch-initiative/pheval.exomiser.git cd pheval.exomiser poetry shell poetry install","title":"Installation"},{"location":"Repositories/pheval.exomiser/#configuring-a-single-run","text":"","title":"Configuring a single run:"},{"location":"Repositories/pheval.exomiser/#setting-up-the-input-directory","text":"A config.yaml should be located in the input directory and formatted like so: tool : exomiser tool_version : 13.2.0 variant_analysis : True gene_analysis : True disease_analysis : False tool_specific_configuration_options : environment : local exomiser_software_directory : exomiser-cli-13.2.0 analysis_configuration_file : preset-exome-analysis.yml max_jobs : 0 application_properties : remm_version : cadd_version : hg19_data_version : 2302 hg19_local_frequency_path : # name of hg19 local frequency file hg19_whitelist_path : 2302_hg19_clinvar_whitelist.tsv.gz # only required for Exomiser v13.3.0 and earlier, can be left blank for Exomiser v14.0.0 onwards. hg38_data_version : 2302 hg38_local_frequency_path : # name of hg38 local frequency file hg38_whitelist_path : phenotype_data_version : 2302 cache_type : cache_caffeine_spec : output_formats : [ JSON , HTML ] # options include HTML, JSON, TSV_VARIANT, TSV_GENE, VCF post_process : score_name : combinedScore sort_order : DESCENDING The bare minimum fields are filled to give an idea on the requirements. This is so that the application.properties for Exomiser can be correctly configured. An example config has been provided pheval.exomiser/config.yaml . The Exomiser input data directories (phenotype database and variant database) should also be located in the input directory - or a symlink pointing to the location. The exomiser_software_directory points to the name of the Exomiser distribution directory located in the input directory. The analysis configuration file (in this case: preset-exome-analysis.yml ) should be located within the input directory. The whitelist paths for the hg19 and hg38 dbs need only be specified for Exomiser v13.3.0 and earlier (unless specifying your own whitelist), as Exomiser v14.0.0 now includes this in the db. To save on diskspace we recommend limiting the Exomiser output to JSON, this can be specified by setting the output_formats field in the config.yaml to [JSON] If using optional databases, such as REMM/CADD/local frequency the optional data input should look like so in the input directory: \u251c\u2500\u2500 cadd \u2502 \u2514\u2500\u2500 {{CADD-VERSION}} \u2502 \u251c\u2500\u2500 hg19 \u2502 \u2502 \u251c\u2500\u2500 InDels.tsv.gz \u2502 \u2502 \u2514\u2500\u2500 whole_genome_SNVs.tsv.gz \u2502 \u2514\u2500\u2500 hg38 \u2502 \u251c\u2500\u2500 InDels.tsv.gz \u2502 \u2514\u2500\u2500 whole_genome_SNVs.tsv.gz \u251c\u2500\u2500 local \u2502 \u251c\u2500\u2500 local_frequency_test_hg19.tsv.gz \u2502 \u2514\u2500\u2500 local_frequency_test_hg38.tsv.gz \u2514\u2500\u2500 remm \u251c\u2500\u2500 ReMM.v{{REMM-VERSION}}.hg19.tsv.gz \u2514\u2500\u2500 ReMM.v{{REMM-VERSION}}.hg38.tsv.gz The overall structure of the input directory should look like this with the cadd, local and remm directories being optional, depending on the exomiser configuration: . \u251c\u2500\u2500 2302_hg19 \u2502 \u251c\u2500\u2500 2302_hg19_clinvar_whitelist.tsv.gz \u2502 \u251c\u2500\u2500 2302_hg19_clinvar_whitelist.tsv.gz.tbi \u2502 \u251c\u2500\u2500 2302_hg19_genome.h2.db \u2502 \u251c\u2500\u2500 2302_hg19_transcripts_ensembl.ser \u2502 \u251c\u2500\u2500 2302_hg19_transcripts_refseq.ser \u2502 \u251c\u2500\u2500 2302_hg19_transcripts_ucsc.ser \u2502 \u2514\u2500\u2500 2302_hg19_variants.mv.db \u251c\u2500\u2500 2302_phenotype \u2502 \u251c\u2500\u2500 2302_phenotype.h2.db \u2502 \u251c\u2500\u2500 hp.obo \u2502 \u251c\u2500\u2500 phenix \u2502 \u2502 \u251c\u2500\u2500 ALL_SOURCES_ALL_FREQUENCIES_genes_to_phenotype.txt \u2502 \u2502 \u251c\u2500\u2500 hp.obo \u2502 \u2502 \u2514\u2500\u2500 out \u2502 \u2514\u2500\u2500 rw_string_10.mv \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 exomiser-cli-13.2.0 \u2502 \u251c\u2500\u2500 lib \u2502 \u2514\u2500\u2500 exomiser-cli-13.2.0.jar \u251c\u2500\u2500 preset-exome-analysis.yml \u251c\u2500\u2500 cadd \u2502 \u2514\u2500\u2500 {{CADD-VERSION}} \u2502 \u251c\u2500\u2500 hg19 \u2502 \u2502 \u251c\u2500\u2500 InDels.tsv.gz \u2502 \u2502 \u2514\u2500\u2500 whole_genome_SNVs.tsv.gz \u2502 \u2514\u2500\u2500 hg38 \u2502 \u251c\u2500\u2500 InDels.tsv.gz \u2502 \u2514\u2500\u2500 whole_genome_SNVs.tsv.gz \u251c\u2500\u2500 local \u2502 \u251c\u2500\u2500 local_frequency_test_hg19.tsv.gz \u2502 \u2514\u2500\u2500 local_frequency_test_hg38.tsv.gz \u2514\u2500\u2500 remm \u251c\u2500\u2500 ReMM.v{{REMM-VERSION}}.hg19.tsv.gz \u2514\u2500\u2500 ReMM.v{{REMM-VERSION}}.hg38.tsv.gz","title":"Setting up the input directory"},{"location":"Repositories/pheval.exomiser/#setting-up-the-testdata-directory","text":"The Exomiser plugin for PhEval accepts phenopackets and vcf files as an input for running Exomiser. The plugin can be run in phenotype_only mode, where only phenopackets are required as an input, however, this must be specified in the config.yaml by setting variant_analysis: False The testdata directory should include subdirectories named phenopackets and vcf if running with variant prioritisation. e.g., \u251c\u2500\u2500 testdata_dir \u251c\u2500\u2500 phenopackets \u2514\u2500\u2500 vcf [!IMPORTANT] If a vcf directory is not found in the testdata directory then the path to the VCF will be taken from the phenopacket if variant_analysis is set to True.","title":"Setting up the testdata directory"},{"location":"Repositories/pheval.exomiser/#run-command","text":"Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner exomiserphevalrunner \\ --output-dir /path/to/output_dir \\ --version 13 .2.0","title":"Run command"},{"location":"Repositories/pheval.exomiser/#common-errors","text":"You may see an error that is related to the current setuptools being used: pkg_resources.extern.packaging.requirements.InvalidRequirement: Expected closing RIGHT_PARENTHESIS requests ( < 3 ,> = 2 .12.* ) ; extra == 'parse' ~~~~~~~~~~^ To fix the error, setuptools needs to be downgraded to version 66: pip uninstall setuptools pip install -U setuptools == \"66\"","title":"Common errors"},{"location":"Repositories/pheval.gado/","text":"pheval.gado Details GitHub monarch-initiative/pheval.gado Language Python Description A PhEval plugin for integrating GADO, enabling gene prioritisation based on phenotypic data in a standardised pipeline. Dependencies External Dependencies Package Version python ^3.10 pheval ^0.5.2 Documentation GADO Runner for PhEval This is the GADO plugin for PhEval. With this plugin, you can leverage the gene prioritisation tool, GADO, to run the PhEval pipeline seamlessly. The setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here. Installation Clone the pheval.gado repo and set up the poetry environment: git clone https://github.com/monarch-initiative/pheval.gado.git cd pheval.gado poetry shell poetry install or install with PyPi: pip install pheval.gado Configuring a single run Setting up the input directory A config.yaml should be located in the input directory and formatted like so: tool : GADO tool_version : 1.0.1 variant_analysis : False gene_analysis : True disease_analysis : False tool_specific_configuration_options : gado_jar : GadoCommandline-1.0.1/GADO.jar hpo_ontology : hp.obo hpo_predictions_info : predictions_auc_bonf.txt genes : hpo_prediction_genes.txt hpo_predictions : genenetwork_bonf_spiked/genenetwork_bonf_spiked.dat The bare minimum fields are filled to give an idea on the requirements, as GADO is gene prioritisation tool, only gene_analysis should be set to True in the config. An example config has been provided pheval.gado/config.yaml. All GADO input data files required for running (specified in the tool_specific_configuration_options ) should be located in the input directory. The gado_jar points to the name of the GADO jar file which should also be located in the input directory. The overall structure of the input directory should look something like so: . \u251c\u2500\u2500 GadoCommandline-1.0.1 \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 predictions_auc_bonf.txt \u251c\u2500\u2500 hp.obo \u251c\u2500\u2500 hpo_prediction_genes.txt \u2514\u2500\u2500 genenetwork_bonf_spiked \u2514\u2500\u2500 genenetwork_bonf_spiked.dat Setting up the testdata directory The GADO plugin for PhEval accepts phenopackets as an input for running GADO. The testdata directory should include a subdirectory named phenopackets: \u251c\u2500\u2500 testdata_dir \u2514\u2500\u2500 phenopackets Run command Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner gadophevalrunner \\ --output-dir /path/to/output_dir \\ --version 1 .0.1","title":"pheval.gado"},{"location":"Repositories/pheval.gado/#phevalgado","text":"","title":"pheval.gado"},{"location":"Repositories/pheval.gado/#details","text":"GitHub monarch-initiative/pheval.gado Language Python Description A PhEval plugin for integrating GADO, enabling gene prioritisation based on phenotypic data in a standardised pipeline.","title":"Details"},{"location":"Repositories/pheval.gado/#dependencies","text":"External Dependencies Package Version python ^3.10 pheval ^0.5.2","title":"Dependencies"},{"location":"Repositories/pheval.gado/#documentation","text":"","title":"Documentation"},{"location":"Repositories/pheval.gado/#gado-runner-for-pheval","text":"This is the GADO plugin for PhEval. With this plugin, you can leverage the gene prioritisation tool, GADO, to run the PhEval pipeline seamlessly. The setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here.","title":"GADO Runner for PhEval"},{"location":"Repositories/pheval.gado/#installation","text":"Clone the pheval.gado repo and set up the poetry environment: git clone https://github.com/monarch-initiative/pheval.gado.git cd pheval.gado poetry shell poetry install or install with PyPi: pip install pheval.gado","title":"Installation"},{"location":"Repositories/pheval.gado/#configuring-a-single-run","text":"","title":"Configuring a single run"},{"location":"Repositories/pheval.gado/#setting-up-the-input-directory","text":"A config.yaml should be located in the input directory and formatted like so: tool : GADO tool_version : 1.0.1 variant_analysis : False gene_analysis : True disease_analysis : False tool_specific_configuration_options : gado_jar : GadoCommandline-1.0.1/GADO.jar hpo_ontology : hp.obo hpo_predictions_info : predictions_auc_bonf.txt genes : hpo_prediction_genes.txt hpo_predictions : genenetwork_bonf_spiked/genenetwork_bonf_spiked.dat The bare minimum fields are filled to give an idea on the requirements, as GADO is gene prioritisation tool, only gene_analysis should be set to True in the config. An example config has been provided pheval.gado/config.yaml. All GADO input data files required for running (specified in the tool_specific_configuration_options ) should be located in the input directory. The gado_jar points to the name of the GADO jar file which should also be located in the input directory. The overall structure of the input directory should look something like so: . \u251c\u2500\u2500 GadoCommandline-1.0.1 \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 predictions_auc_bonf.txt \u251c\u2500\u2500 hp.obo \u251c\u2500\u2500 hpo_prediction_genes.txt \u2514\u2500\u2500 genenetwork_bonf_spiked \u2514\u2500\u2500 genenetwork_bonf_spiked.dat","title":"Setting up the input directory"},{"location":"Repositories/pheval.gado/#setting-up-the-testdata-directory","text":"The GADO plugin for PhEval accepts phenopackets as an input for running GADO. The testdata directory should include a subdirectory named phenopackets: \u251c\u2500\u2500 testdata_dir \u2514\u2500\u2500 phenopackets","title":"Setting up the testdata directory"},{"location":"Repositories/pheval.gado/#run-command","text":"Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner gadophevalrunner \\ --output-dir /path/to/output_dir \\ --version 1 .0.1","title":"Run command"},{"location":"Repositories/pheval.lirical/","text":"pheval.lirical Details GitHub monarch-initiative/pheval.lirical Language Python Description A PhEval plugin integrating LIRICAL for efficient phenotype and variant prioritisation in a standardised pipeline. Dependencies External Dependencies Package Version python >=3.10,<4.0.0 click ^8.1.3 phenopackets ^2.0.2 google ^3.0.0 pyaml ^21.10.1 oaklib >=0.5.6 docker ^6.0.1 pheval ^0.5.2 Documentation LIRICAL Runner for PhEval This is the LIRICAL plugin for PhEval. With this plugin, you can leverage the prioritisation tool, LIRICAL, to run the PhEval pipeline seamlessly. he setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here. Installation Install with pip: pip install pheval.lirical Alternatively clone the pheval.lirical repo and set up the poetry environment: git clone https://github.com/monarch-initiative/pheval.lirical.git cd pheval.lirical poetry shell poetry install Configuring a single run: Setting up the input directory A config.yaml should be located in the input directory and formatted like so: tool : LIRICAL tool_version : 2.0.0-RC2 variant_analysis : True gene_analysis : True disease_analysis : True tool_specific_configuration_options : mode : phenopacket lirical_jar_executable : lirical-cli-2.0.0-RC2/lirical-cli-2.0.0-RC2.jar exomiser_db_configurations : exomiser_database : exomiser_hg19_database : 2302_hg19_variants.mv.db exomiser_hg38_database : post_process : sort_order : descending The bare minimum fields are filled to give an idea on the requirements. The mode should specify the mode you want to run LIRICAL in (either manual or phenopacket) both of these options require phenopackets as an input. The LIRICAL data files should be located in the input directory under a subdirectory named data If running LIRICAL with variant and/or gene analysis set to true, you will need to provide the relevant exomiser hg19/hg38 databases. The lirical jar executable points to the location in the input directory. The input directory should look something like so (removed some files for clarity): . \u251c\u2500\u2500 2302_hg19_variants.mv.db \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 hg19_refseq.ser \u2502 \u251c\u2500\u2500 hg19_ucsc.ser \u2502 \u251c\u2500\u2500 hg38_refseq.ser \u2502 \u251c\u2500\u2500 hg38_ucsc.ser \u2502 \u251c\u2500\u2500 hgnc_complete_set.txt \u2502 \u251c\u2500\u2500 hp.json \u2502 \u251c\u2500\u2500 mim2gene_medgen \u2502 \u2514\u2500\u2500 phenotype.hpoa \u2514\u2500\u2500 lirical-cli-2.0.0-RC2 \u2514\u2500\u2500 lirical-cli-2.0.0-RC2.jar Setting up the testdata directory The LIRICAL plugin for PhEval accepts phenopackets and vcf files as an input. The plugin can be run in only disease_analysis mode, where only phenopackets are required as an input, however, this must be specified in the config.yaml . The testdata directory should include subdirectories named phenopackets and vcf if running with gene/variant prioritisation. e.g., \u251c\u2500\u2500 testdata_dir \u251c\u2500\u2500 phenopackets \u2514\u2500\u2500 vcf Run command Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner liricalphevalrunner \\ --output-dir /path/to/output_dir \\ --version 13 .2.0 Common errors You may see an error that is related to the current setuptools being used: pkg_resources.extern.packaging.requirements.InvalidRequirement: Expected closing RIGHT_PARENTHESIS requests ( < 3 ,> = 2 .12.* ) ; extra == 'parse' ~~~~~~~~~~^ To fix the error, setuptools needs to be downgraded to version 66: pip uninstall setuptools pip install -U setuptools == \"66\"","title":"pheval.lirical"},{"location":"Repositories/pheval.lirical/#phevallirical","text":"","title":"pheval.lirical"},{"location":"Repositories/pheval.lirical/#details","text":"GitHub monarch-initiative/pheval.lirical Language Python Description A PhEval plugin integrating LIRICAL for efficient phenotype and variant prioritisation in a standardised pipeline.","title":"Details"},{"location":"Repositories/pheval.lirical/#dependencies","text":"External Dependencies Package Version python >=3.10,<4.0.0 click ^8.1.3 phenopackets ^2.0.2 google ^3.0.0 pyaml ^21.10.1 oaklib >=0.5.6 docker ^6.0.1 pheval ^0.5.2","title":"Dependencies"},{"location":"Repositories/pheval.lirical/#documentation","text":"","title":"Documentation"},{"location":"Repositories/pheval.lirical/#lirical-runner-for-pheval","text":"This is the LIRICAL plugin for PhEval. With this plugin, you can leverage the prioritisation tool, LIRICAL, to run the PhEval pipeline seamlessly. he setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here.","title":"LIRICAL Runner for PhEval"},{"location":"Repositories/pheval.lirical/#installation","text":"Install with pip: pip install pheval.lirical Alternatively clone the pheval.lirical repo and set up the poetry environment: git clone https://github.com/monarch-initiative/pheval.lirical.git cd pheval.lirical poetry shell poetry install","title":"Installation"},{"location":"Repositories/pheval.lirical/#configuring-a-single-run","text":"","title":"Configuring a single run:"},{"location":"Repositories/pheval.lirical/#setting-up-the-input-directory","text":"A config.yaml should be located in the input directory and formatted like so: tool : LIRICAL tool_version : 2.0.0-RC2 variant_analysis : True gene_analysis : True disease_analysis : True tool_specific_configuration_options : mode : phenopacket lirical_jar_executable : lirical-cli-2.0.0-RC2/lirical-cli-2.0.0-RC2.jar exomiser_db_configurations : exomiser_database : exomiser_hg19_database : 2302_hg19_variants.mv.db exomiser_hg38_database : post_process : sort_order : descending The bare minimum fields are filled to give an idea on the requirements. The mode should specify the mode you want to run LIRICAL in (either manual or phenopacket) both of these options require phenopackets as an input. The LIRICAL data files should be located in the input directory under a subdirectory named data If running LIRICAL with variant and/or gene analysis set to true, you will need to provide the relevant exomiser hg19/hg38 databases. The lirical jar executable points to the location in the input directory. The input directory should look something like so (removed some files for clarity): . \u251c\u2500\u2500 2302_hg19_variants.mv.db \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 hg19_refseq.ser \u2502 \u251c\u2500\u2500 hg19_ucsc.ser \u2502 \u251c\u2500\u2500 hg38_refseq.ser \u2502 \u251c\u2500\u2500 hg38_ucsc.ser \u2502 \u251c\u2500\u2500 hgnc_complete_set.txt \u2502 \u251c\u2500\u2500 hp.json \u2502 \u251c\u2500\u2500 mim2gene_medgen \u2502 \u2514\u2500\u2500 phenotype.hpoa \u2514\u2500\u2500 lirical-cli-2.0.0-RC2 \u2514\u2500\u2500 lirical-cli-2.0.0-RC2.jar","title":"Setting up the input directory"},{"location":"Repositories/pheval.lirical/#setting-up-the-testdata-directory","text":"The LIRICAL plugin for PhEval accepts phenopackets and vcf files as an input. The plugin can be run in only disease_analysis mode, where only phenopackets are required as an input, however, this must be specified in the config.yaml . The testdata directory should include subdirectories named phenopackets and vcf if running with gene/variant prioritisation. e.g., \u251c\u2500\u2500 testdata_dir \u251c\u2500\u2500 phenopackets \u2514\u2500\u2500 vcf","title":"Setting up the testdata directory"},{"location":"Repositories/pheval.lirical/#run-command","text":"Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner liricalphevalrunner \\ --output-dir /path/to/output_dir \\ --version 13 .2.0","title":"Run command"},{"location":"Repositories/pheval.lirical/#common-errors","text":"You may see an error that is related to the current setuptools being used: pkg_resources.extern.packaging.requirements.InvalidRequirement: Expected closing RIGHT_PARENTHESIS requests ( < 3 ,> = 2 .12.* ) ; extra == 'parse' ~~~~~~~~~~^ To fix the error, setuptools needs to be downgraded to version 66: pip uninstall setuptools pip install -U setuptools == \"66\"","title":"Common errors"},{"location":"Repositories/pheval.llm/","text":"pheval.llm Details GitHub monarch-initiative/pheval.llm Language Python Description Analysis of LLMs for Clinical Observations Dependencies External Dependencies Package Version python ^3.11 pheval ^0.3.2 setuptools ^69.5.1 shelved-cache ^0.3.1 curategpt ^0.2.2 psutil ^6.1.0 autopep8 ^2.3.1 openpyxl ^3.1.5 metapub ^0.5.12 phenopacket-store-toolkit ^0.1.4 Documentation pheval.llm Evaluate LLMs' capability at performing differential diagnosis for rare genetic diseases through medical-vignette-like prompts created with phenopacket2prompt . Description To systematically assess and evaluate an LLM's ability to perform differential diagnostics tasks, we employed prompts programatically created with phenopacket2prompt , thereby avoiding any patient privacy issues. The original data are phenopackets located at phenopacket-store . A programmatic approach for scoring and grounding results is also developed, made possible thanks to the ontological structure of the Mondo Disease Ontology . Two main analyses are carried out: - A benchmark of some openAI GPT-models against a state of the art tool for differential diagnostics, Exomiser . The bottom line, Exomiser clearly outperforms the LLMs . - A comparison of gpt-4o's ability to carry out differential diagnosis when prompted in different languages. Formerly MALCO, Multilingual Analysis of LLMs for Clinical Observations. Built using the PhEval runner template. Usage Before starting a run take care of editing the run parameters as follows: - The first line contains a non-empty comma-separated list of (supported) language codes between double quotation marks in which one wishes to prompt. - The second line contains a non-empty comma-separated list of (supported) model names between double quotation marks which one wishes to prompt. - The third line contains two comma-separated binary entries, represented by 0 (false) and 1 (true). The first set to true runs the prompting and grounding, i.e. the run step, the second one executes the scoring and the rest of the analysis, i.e. the post processing step. At this point one can install and run the code by doing poetry install poetry shell mkdir outputdirectory cp -r /path/to/promptdir inputdir/ pheval run -i inputdir -r \"malcorunner\" -o outputdirectory -t tests","title":"pheval.llm"},{"location":"Repositories/pheval.llm/#phevalllm","text":"","title":"pheval.llm"},{"location":"Repositories/pheval.llm/#details","text":"GitHub monarch-initiative/pheval.llm Language Python Description Analysis of LLMs for Clinical Observations","title":"Details"},{"location":"Repositories/pheval.llm/#dependencies","text":"External Dependencies Package Version python ^3.11 pheval ^0.3.2 setuptools ^69.5.1 shelved-cache ^0.3.1 curategpt ^0.2.2 psutil ^6.1.0 autopep8 ^2.3.1 openpyxl ^3.1.5 metapub ^0.5.12 phenopacket-store-toolkit ^0.1.4","title":"Dependencies"},{"location":"Repositories/pheval.llm/#documentation","text":"","title":"Documentation"},{"location":"Repositories/pheval.llm/#phevalllm_1","text":"","title":"pheval.llm"},{"location":"Repositories/pheval.llm/#evaluate-llms-capability-at-performing-differential-diagnosis-for-rare-genetic-diseases-through-medical-vignette-like-prompts-created-with-phenopacket2prompt","text":"","title":"Evaluate LLMs' capability at performing differential diagnosis for rare genetic diseases through medical-vignette-like prompts created with phenopacket2prompt."},{"location":"Repositories/pheval.llm/#description","text":"To systematically assess and evaluate an LLM's ability to perform differential diagnostics tasks, we employed prompts programatically created with phenopacket2prompt , thereby avoiding any patient privacy issues. The original data are phenopackets located at phenopacket-store . A programmatic approach for scoring and grounding results is also developed, made possible thanks to the ontological structure of the Mondo Disease Ontology . Two main analyses are carried out: - A benchmark of some openAI GPT-models against a state of the art tool for differential diagnostics, Exomiser . The bottom line, Exomiser clearly outperforms the LLMs . - A comparison of gpt-4o's ability to carry out differential diagnosis when prompted in different languages. Formerly MALCO, Multilingual Analysis of LLMs for Clinical Observations. Built using the PhEval runner template.","title":"Description"},{"location":"Repositories/pheval.llm/#usage","text":"Before starting a run take care of editing the run parameters as follows: - The first line contains a non-empty comma-separated list of (supported) language codes between double quotation marks in which one wishes to prompt. - The second line contains a non-empty comma-separated list of (supported) model names between double quotation marks which one wishes to prompt. - The third line contains two comma-separated binary entries, represented by 0 (false) and 1 (true). The first set to true runs the prompting and grounding, i.e. the run step, the second one executes the scoring and the rest of the analysis, i.e. the post processing step. At this point one can install and run the code by doing poetry install poetry shell mkdir outputdirectory cp -r /path/to/promptdir inputdir/ pheval run -i inputdir -r \"malcorunner\" -o outputdirectory -t tests","title":"Usage"},{"location":"Repositories/pheval/","text":"pheval Details GitHub monarch-initiative/pheval Language Python Description A framework for empirical evaluation of phenotype matching and prioritisation Dependencies External Dependencies Package Version python >=3.10,<4.0.0 jaydebeapi >=1.2.3 tqdm >=4.64.1 pandas >=1.5.1 deprecation >=2.1.0 click >=8.1.3 class-resolver >=0.4.2 phenopackets ^2.0.2 oaklib >=0.5.6 google ^3.0.0 pyaml ^21.10.1 plotly ^5.13.0 seaborn ^0.12.2 matplotlib ^3.7.0 pyserde ^0.9.8 polars ^1.23 scikit-learn ^1.4.0 duckdb ^1.0.0 pyarrow ^19.0.1 Documentation PhEval - Phenotypic Inference Evaluation Framework Overview The absence of standardised benchmarks and data standardisation for Variant and Gene Prioritisation Algorithms (VGPAs) presents a significant challenge in the field of genomic research. To address this, we developed PhEval, a novel framework designed to streamline the evaluation of VGPAs that incorporate phenotypic data. PhEval offers several key benefits: Automated Processes: Reduces manual effort by automating various evaluation tasks, thus enhancing efficiency. Standardisation: Ensures consistency and comparability in evaluation methodologies, leading to more reliable and standardised assessments. Reproducibility: Facilitates reproducibility in research by providing a standardised platform, allowing for consistent validation of algorithms. Comprehensive Benchmarking: Enables thorough benchmarking of algorithms, providing well-founded comparisons and deeper insights into their performance. PhEval is a valuable tool for researchers looking to improve the accuracy and reliability of VGPA evaluations through a structured and standardised approach. For more information please see the full documentation . Download and Installation Ensure you have Python 3.10 or greater installed. Install with pip : pip install pheval See list of all PhEval utility commands: pheval-utils --help Usage The PhEval CLI offers a variety of commands categorised into two main types: Runner Implementations and Utility Commands . Below is an overview of each category, detailing how they can be utilised to perform various tasks within PhEval. Runner Implementations The primary command used within PhEval is pheval run . This command is responsible for executing concrete VGPA runner implementations, that we sometimes term as plugins. By using pheval run, users can leverage these runner implementations to: execute the VGPA on a set of test corpora, produce tool-specific result outputs, and post-process tool-specific outputs to PhEval standardised TSV outputs. Some concrete PhEval runner implementations include the Exomiser runner and the Phen2Gene runner . The full list of currently implemented runners can be found here Please read the documentation for a step-by-step for creating your own PhEval plugin. Utility Commands In addition to the main run command, PhEval provides a set of utility commands designed to enhance the overall functionality of the CLI. These commands can be used to set up and configure experiments, streamline data preparation, and benchmark the performance of various VGPA runner implementations. By utilising these utilities, users can optimise their experimental workflows, ensure reproducibility, and compare the efficiency and accuracy of different approaches. The utility commands offer a range of options that facilitate the customisation and fine-tuning to suit diverse research objectives. Example Usage To add noise to an existing corpus of phenopackets, this could be used to assess the robustness of VGPAs when less relevant or unreliable phenotype data is introduced: pheval-utils scramble-phenopackets --phenopacket-dir /phenopackets --scramble-factor 0 .5 --output-dir /scrambled_phenopackets_0.5 To update the gene symbols and identifiers to a specific namespace: pheval-utils update-phenopackets --phenopacket-dir /phenopackets --output-dir /updated_phenopackets --gene-identifier ensembl_id To prepare VCF files for a corpus of phenopackets, spiking in the known causative variants: pheval-utils create-spiked-vcfs --phenopacket-dir /phenopackets --hg19-template-vcf /template_hg19.vcf --hg38-template-vcf /template_hg38.vcf --output-dir /vcf Alternatively, you can wrap all corpus preparatory commands into a single step. Specifying --variant-analysis / --gene-analysis / --disease-analysis will check the phenopackets for complete records documenting the known entities. If template vcf(s) are provided this will spike VCFs with the known variant for the corpus. If a --gene-identifier is specified then the corpus of phenopackets is updated. pheval-utils prepare-corpus \\ --phenopacket-dir /phenopackets \\ --variant-analysis \\ --gene-analysis \\ --gene-identifier ensembl_id \\ --hg19-template-vcf /template_hg19.vcf \\ --hg38-template-vcf /template_hg38.vcf \\ --output-dir /vcf See the documentation for instructions on benchmarking and evaluating the performance of various VGPAs.","title":"pheval"},{"location":"Repositories/pheval/#pheval","text":"","title":"pheval"},{"location":"Repositories/pheval/#details","text":"GitHub monarch-initiative/pheval Language Python Description A framework for empirical evaluation of phenotype matching and prioritisation","title":"Details"},{"location":"Repositories/pheval/#dependencies","text":"External Dependencies Package Version python >=3.10,<4.0.0 jaydebeapi >=1.2.3 tqdm >=4.64.1 pandas >=1.5.1 deprecation >=2.1.0 click >=8.1.3 class-resolver >=0.4.2 phenopackets ^2.0.2 oaklib >=0.5.6 google ^3.0.0 pyaml ^21.10.1 plotly ^5.13.0 seaborn ^0.12.2 matplotlib ^3.7.0 pyserde ^0.9.8 polars ^1.23 scikit-learn ^1.4.0 duckdb ^1.0.0 pyarrow ^19.0.1","title":"Dependencies"},{"location":"Repositories/pheval/#documentation","text":"","title":"Documentation"},{"location":"Repositories/pheval/#pheval-phenotypic-inference-evaluation-framework","text":"","title":"PhEval - Phenotypic Inference Evaluation Framework"},{"location":"Repositories/pheval/#overview","text":"The absence of standardised benchmarks and data standardisation for Variant and Gene Prioritisation Algorithms (VGPAs) presents a significant challenge in the field of genomic research. To address this, we developed PhEval, a novel framework designed to streamline the evaluation of VGPAs that incorporate phenotypic data. PhEval offers several key benefits: Automated Processes: Reduces manual effort by automating various evaluation tasks, thus enhancing efficiency. Standardisation: Ensures consistency and comparability in evaluation methodologies, leading to more reliable and standardised assessments. Reproducibility: Facilitates reproducibility in research by providing a standardised platform, allowing for consistent validation of algorithms. Comprehensive Benchmarking: Enables thorough benchmarking of algorithms, providing well-founded comparisons and deeper insights into their performance. PhEval is a valuable tool for researchers looking to improve the accuracy and reliability of VGPA evaluations through a structured and standardised approach. For more information please see the full documentation .","title":"Overview"},{"location":"Repositories/pheval/#download-and-installation","text":"Ensure you have Python 3.10 or greater installed. Install with pip : pip install pheval See list of all PhEval utility commands: pheval-utils --help","title":"Download and Installation"},{"location":"Repositories/pheval/#usage","text":"The PhEval CLI offers a variety of commands categorised into two main types: Runner Implementations and Utility Commands . Below is an overview of each category, detailing how they can be utilised to perform various tasks within PhEval.","title":"Usage"},{"location":"Repositories/pheval/#runner-implementations","text":"The primary command used within PhEval is pheval run . This command is responsible for executing concrete VGPA runner implementations, that we sometimes term as plugins. By using pheval run, users can leverage these runner implementations to: execute the VGPA on a set of test corpora, produce tool-specific result outputs, and post-process tool-specific outputs to PhEval standardised TSV outputs. Some concrete PhEval runner implementations include the Exomiser runner and the Phen2Gene runner . The full list of currently implemented runners can be found here Please read the documentation for a step-by-step for creating your own PhEval plugin.","title":"Runner Implementations"},{"location":"Repositories/pheval/#utility-commands","text":"In addition to the main run command, PhEval provides a set of utility commands designed to enhance the overall functionality of the CLI. These commands can be used to set up and configure experiments, streamline data preparation, and benchmark the performance of various VGPA runner implementations. By utilising these utilities, users can optimise their experimental workflows, ensure reproducibility, and compare the efficiency and accuracy of different approaches. The utility commands offer a range of options that facilitate the customisation and fine-tuning to suit diverse research objectives.","title":"Utility Commands"},{"location":"Repositories/pheval/#example-usage","text":"To add noise to an existing corpus of phenopackets, this could be used to assess the robustness of VGPAs when less relevant or unreliable phenotype data is introduced: pheval-utils scramble-phenopackets --phenopacket-dir /phenopackets --scramble-factor 0 .5 --output-dir /scrambled_phenopackets_0.5 To update the gene symbols and identifiers to a specific namespace: pheval-utils update-phenopackets --phenopacket-dir /phenopackets --output-dir /updated_phenopackets --gene-identifier ensembl_id To prepare VCF files for a corpus of phenopackets, spiking in the known causative variants: pheval-utils create-spiked-vcfs --phenopacket-dir /phenopackets --hg19-template-vcf /template_hg19.vcf --hg38-template-vcf /template_hg38.vcf --output-dir /vcf Alternatively, you can wrap all corpus preparatory commands into a single step. Specifying --variant-analysis / --gene-analysis / --disease-analysis will check the phenopackets for complete records documenting the known entities. If template vcf(s) are provided this will spike VCFs with the known variant for the corpus. If a --gene-identifier is specified then the corpus of phenopackets is updated. pheval-utils prepare-corpus \\ --phenopacket-dir /phenopackets \\ --variant-analysis \\ --gene-analysis \\ --gene-identifier ensembl_id \\ --hg19-template-vcf /template_hg19.vcf \\ --hg38-template-vcf /template_hg38.vcf \\ --output-dir /vcf See the documentation for instructions on benchmarking and evaluating the performance of various VGPAs.","title":"Example Usage"},{"location":"Repositories/pheval.phen2gene/","text":"pheval.phen2gene Details GitHub monarch-initiative/pheval.phen2gene Language Python Description A PhEval plugin for integrating Phen2Gene, enabling gene prioritisation based on phenotypic data in a standardised pipeline. Dependencies External Dependencies Package Version python >=3.10,<4.0.0 click ^8.1.3 pandas ^1.5.2 oaklib >=0.5.6 docker ^6.0.1 matplotlib ^3.7.1 numpy ^1.24.2 wheel ^0.40.0 pheval ^0.5.1 Documentation Phen2Gene Runner for PhEval This is the Phen2Gene plugin for PhEval. With this plugin, you can leverage the gene prioritisation tool, Phen2Gene, to run the PhEval pipeline seamlessly. The setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here. Installation Clone the pheval.phen2gene repo and set up the poetry environment: git clone https://github.com/monarch-initiative/pheval.phen2gene.git cd pheval.phen2gene poetry shell poetry install or install with PyPi: pip install pheval.phen2gene Configuring a single run Setting up the input directory A config.yaml should be located in the input directory and formatted like so: tool : phen2gene tool_version : 1.2.3 variant_analysis : False gene_analysis : True disease_analysis : False tool_specific_configuration_options : environment : local phen2gene_python_executable : Phen2Gene/phen2gene.py post_process : score_order : descending The bare minimum fields are filled to give an idea on the requirements, as Phen2Gene is gene prioritisation tool, only gene_analysis should be set to True in the config. An example config has been provided pheval.phen2gene/config.yaml. The Phen2Gene input data directory should also be located in the input directory - or a symlink pointing to the location in a directory named lib . The phen2gene_python_executable points to the name of the Phen2Gene python executable file - this is usually located within the Phen2Gene directory within the input directory. The overall structure of the input directory should look something like so (omitting files in the lib for clarity): . \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 lib \u2502 \u251c\u2500\u2500 Knowledgebase \u2502 \u251c\u2500\u2500 lib \u2502 \u251c\u2500\u2500 phen2gene.py \u2502 \u251c\u2500\u2500 skewness \u2502 \u2514\u2500\u2500 weights \u2514\u2500\u2500 Phen2Gene \u251c\u2500\u2500 accuracy.py \u251c\u2500\u2500 accuracy.sh \u251c\u2500\u2500 calcs \u251c\u2500\u2500 Dockerfile \u251c\u2500\u2500 environment.yml \u251c\u2500\u2500 example \u251c\u2500\u2500 generate_ranking_data.py \u251c\u2500\u2500 getbenchmark.sh \u251c\u2500\u2500 lib \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 phen2gene.py \u251c\u2500\u2500 README.md \u251c\u2500\u2500 requirements.txt \u251c\u2500\u2500 runtest.sh \u251c\u2500\u2500 setup.sh \u2514\u2500\u2500 test Setting up the testdata directory The Phen2Gene plugin for PhEval accepts phenopackets as an input for running Phen2Gene. The testdata directory should include a subdirectory named phenopackets: \u251c\u2500\u2500 testdata_dir \u2514\u2500\u2500 phenopackets Run command Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner phen2genephevalrunner \\ --output-dir /path/to/output_dir \\ --version 1 .2.3","title":"pheval.phen2gene"},{"location":"Repositories/pheval.phen2gene/#phevalphen2gene","text":"","title":"pheval.phen2gene"},{"location":"Repositories/pheval.phen2gene/#details","text":"GitHub monarch-initiative/pheval.phen2gene Language Python Description A PhEval plugin for integrating Phen2Gene, enabling gene prioritisation based on phenotypic data in a standardised pipeline.","title":"Details"},{"location":"Repositories/pheval.phen2gene/#dependencies","text":"External Dependencies Package Version python >=3.10,<4.0.0 click ^8.1.3 pandas ^1.5.2 oaklib >=0.5.6 docker ^6.0.1 matplotlib ^3.7.1 numpy ^1.24.2 wheel ^0.40.0 pheval ^0.5.1","title":"Dependencies"},{"location":"Repositories/pheval.phen2gene/#documentation","text":"","title":"Documentation"},{"location":"Repositories/pheval.phen2gene/#phen2gene-runner-for-pheval","text":"This is the Phen2Gene plugin for PhEval. With this plugin, you can leverage the gene prioritisation tool, Phen2Gene, to run the PhEval pipeline seamlessly. The setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here.","title":"Phen2Gene Runner for PhEval"},{"location":"Repositories/pheval.phen2gene/#installation","text":"Clone the pheval.phen2gene repo and set up the poetry environment: git clone https://github.com/monarch-initiative/pheval.phen2gene.git cd pheval.phen2gene poetry shell poetry install or install with PyPi: pip install pheval.phen2gene","title":"Installation"},{"location":"Repositories/pheval.phen2gene/#configuring-a-single-run","text":"","title":"Configuring a single run"},{"location":"Repositories/pheval.phen2gene/#setting-up-the-input-directory","text":"A config.yaml should be located in the input directory and formatted like so: tool : phen2gene tool_version : 1.2.3 variant_analysis : False gene_analysis : True disease_analysis : False tool_specific_configuration_options : environment : local phen2gene_python_executable : Phen2Gene/phen2gene.py post_process : score_order : descending The bare minimum fields are filled to give an idea on the requirements, as Phen2Gene is gene prioritisation tool, only gene_analysis should be set to True in the config. An example config has been provided pheval.phen2gene/config.yaml. The Phen2Gene input data directory should also be located in the input directory - or a symlink pointing to the location in a directory named lib . The phen2gene_python_executable points to the name of the Phen2Gene python executable file - this is usually located within the Phen2Gene directory within the input directory. The overall structure of the input directory should look something like so (omitting files in the lib for clarity): . \u251c\u2500\u2500 config.yaml \u251c\u2500\u2500 lib \u2502 \u251c\u2500\u2500 Knowledgebase \u2502 \u251c\u2500\u2500 lib \u2502 \u251c\u2500\u2500 phen2gene.py \u2502 \u251c\u2500\u2500 skewness \u2502 \u2514\u2500\u2500 weights \u2514\u2500\u2500 Phen2Gene \u251c\u2500\u2500 accuracy.py \u251c\u2500\u2500 accuracy.sh \u251c\u2500\u2500 calcs \u251c\u2500\u2500 Dockerfile \u251c\u2500\u2500 environment.yml \u251c\u2500\u2500 example \u251c\u2500\u2500 generate_ranking_data.py \u251c\u2500\u2500 getbenchmark.sh \u251c\u2500\u2500 lib \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 phen2gene.py \u251c\u2500\u2500 README.md \u251c\u2500\u2500 requirements.txt \u251c\u2500\u2500 runtest.sh \u251c\u2500\u2500 setup.sh \u2514\u2500\u2500 test","title":"Setting up the input directory"},{"location":"Repositories/pheval.phen2gene/#setting-up-the-testdata-directory","text":"The Phen2Gene plugin for PhEval accepts phenopackets as an input for running Phen2Gene. The testdata directory should include a subdirectory named phenopackets: \u251c\u2500\u2500 testdata_dir \u2514\u2500\u2500 phenopackets","title":"Setting up the testdata directory"},{"location":"Repositories/pheval.phen2gene/#run-command","text":"Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner phen2genephevalrunner \\ --output-dir /path/to/output_dir \\ --version 1 .2.3","title":"Run command"},{"location":"Repositories/pheval.phenogenius/","text":"pheval.phenogenius Details GitHub monarch-initiative/pheval.phenogenius Language Python Description A PhEval plugin for integrating PhenoGenius, enabling gene prioritisation based on phenotypic data in a standardised pipeline. Dependencies External Dependencies Package Version python >=3.11,<4.0.0 click * importlib-metadata >=8.2.0 pheval ^0.4.0 phenogenius-cli {'git': 'https://github.com/kyauy/PhenoGeniusCli.git'} Documentation PhEval Runner for PhenoGenius This is the PhenoGenius plugin for PhEval. With this plugin, you can leverage the gene prioritisation tool, PhenoGenius, to run the PhEval pipeline seamlessly. The setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here. Installation Clone the pheval.phenogenius repo and set up the poetry environment: git clone https://github.com/yaseminbridges/pheval.phenogenius.git cd pheval.genius poetry shell poetry install Configuring a single run Setting up the input directory A config.yaml should be located in the input directory and formatted like so: tool : PhenoGenius tool_version : 0.1.0 variant_analysis : False gene_analysis : True disease_analysis : False tool_specific_configuration_options : The bare minimum fields are filled to give an idea on the requirements, as PhenoGenius is gene prioritisation tool, only gene_analysis should be set to True in the config. An example config has been provided pheval.phenogenius/config.yaml. You will need to clone the PhenoGeniusCli into the input directory: git clone https://github.com/kyauy/PhenoGeniusCli.git The overall structure of the input directory should look something like so: . \u251c\u2500\u2500 PhenoGeniusCli \u2502 \u251c\u2500\u2500 PKD1.tsv \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 data \u2502 \u2502 \u251c\u2500\u2500 graph \u2502 \u2502 \u2502 \u251c\u2500\u2500 390groups.gexf \u2502 \u2502 \u2502 \u251c\u2500\u2500 group_image.png \u2502 \u2502 \u2502 \u251c\u2500\u2500 onto_image.png \u2502 \u2502 \u2502 \u2514\u2500\u2500 ontology.gexf \u2502 \u2502 \u251c\u2500\u2500 img \u2502 \u2502 \u2502 \u251c\u2500\u2500 logo-chuga.png \u2502 \u2502 \u2502 \u251c\u2500\u2500 logo-seqone.png \u2502 \u2502 \u2502 \u251c\u2500\u2500 logo-uga.png \u2502 \u2502 \u2502 \u251c\u2500\u2500 logoMIAI-rvb.png \u2502 \u2502 \u2502 \u2514\u2500\u2500 phenogenius.png \u2502 \u2502 \u2514\u2500\u2500 resources \u2502 \u2502 \u251c\u2500\u2500 Homo_sapiens.gene_info.gz \u2502 \u2502 \u251c\u2500\u2500 hp_2024.obo \u2502 \u2502 \u251c\u2500\u2500 hpo_obo_2024.json \u2502 \u2502 \u251c\u2500\u2500 ohe_all_thesaurus_weighted_2024.tsv.gz \u2502 \u2502 \u251c\u2500\u2500 pheno_NMF_390_matrix_42_2024.pkl \u2502 \u2502 \u251c\u2500\u2500 pheno_NMF_390_model_42_2024.pkl \u2502 \u2502 \u2514\u2500\u2500 similarity_dict_threshold_80_2024.json \u2502 \u251c\u2500\u2500 phenogenius_cli.py \u2502 \u251c\u2500\u2500 poetry.lock \u2502 \u2514\u2500\u2500 pyproject.toml \u2514\u2500\u2500 config.yaml Setting up the testdata directory The PhenoGenius plugin for PhEval accepts phenopackets as an input for running PhenoGenius. The testdata directory should include a subdirectory named phenopackets: \u251c\u2500\u2500 testdata_dir \u2514\u2500\u2500 phenopackets Run command Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner phenogeniusphevalrunner \\ --output-dir /path/to/output_dir \\ --version 1 .0.1 Docs https://yaseminbridges.github.io/pheval.phenogenius/ Acknowledgements This cookiecutter project was developed from the pheval-runner-template template and will be kept up-to-date using cruft .","title":"pheval.phenogenius"},{"location":"Repositories/pheval.phenogenius/#phevalphenogenius","text":"","title":"pheval.phenogenius"},{"location":"Repositories/pheval.phenogenius/#details","text":"GitHub monarch-initiative/pheval.phenogenius Language Python Description A PhEval plugin for integrating PhenoGenius, enabling gene prioritisation based on phenotypic data in a standardised pipeline.","title":"Details"},{"location":"Repositories/pheval.phenogenius/#dependencies","text":"External Dependencies Package Version python >=3.11,<4.0.0 click * importlib-metadata >=8.2.0 pheval ^0.4.0 phenogenius-cli {'git': 'https://github.com/kyauy/PhenoGeniusCli.git'}","title":"Dependencies"},{"location":"Repositories/pheval.phenogenius/#documentation","text":"","title":"Documentation"},{"location":"Repositories/pheval.phenogenius/#pheval-runner-for-phenogenius","text":"This is the PhenoGenius plugin for PhEval. With this plugin, you can leverage the gene prioritisation tool, PhenoGenius, to run the PhEval pipeline seamlessly. The setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here.","title":"PhEval Runner for PhenoGenius"},{"location":"Repositories/pheval.phenogenius/#installation","text":"Clone the pheval.phenogenius repo and set up the poetry environment: git clone https://github.com/yaseminbridges/pheval.phenogenius.git cd pheval.genius poetry shell poetry install","title":"Installation"},{"location":"Repositories/pheval.phenogenius/#configuring-a-single-run","text":"","title":"Configuring a single run"},{"location":"Repositories/pheval.phenogenius/#setting-up-the-input-directory","text":"A config.yaml should be located in the input directory and formatted like so: tool : PhenoGenius tool_version : 0.1.0 variant_analysis : False gene_analysis : True disease_analysis : False tool_specific_configuration_options : The bare minimum fields are filled to give an idea on the requirements, as PhenoGenius is gene prioritisation tool, only gene_analysis should be set to True in the config. An example config has been provided pheval.phenogenius/config.yaml. You will need to clone the PhenoGeniusCli into the input directory: git clone https://github.com/kyauy/PhenoGeniusCli.git The overall structure of the input directory should look something like so: . \u251c\u2500\u2500 PhenoGeniusCli \u2502 \u251c\u2500\u2500 PKD1.tsv \u2502 \u251c\u2500\u2500 README.md \u2502 \u251c\u2500\u2500 data \u2502 \u2502 \u251c\u2500\u2500 graph \u2502 \u2502 \u2502 \u251c\u2500\u2500 390groups.gexf \u2502 \u2502 \u2502 \u251c\u2500\u2500 group_image.png \u2502 \u2502 \u2502 \u251c\u2500\u2500 onto_image.png \u2502 \u2502 \u2502 \u2514\u2500\u2500 ontology.gexf \u2502 \u2502 \u251c\u2500\u2500 img \u2502 \u2502 \u2502 \u251c\u2500\u2500 logo-chuga.png \u2502 \u2502 \u2502 \u251c\u2500\u2500 logo-seqone.png \u2502 \u2502 \u2502 \u251c\u2500\u2500 logo-uga.png \u2502 \u2502 \u2502 \u251c\u2500\u2500 logoMIAI-rvb.png \u2502 \u2502 \u2502 \u2514\u2500\u2500 phenogenius.png \u2502 \u2502 \u2514\u2500\u2500 resources \u2502 \u2502 \u251c\u2500\u2500 Homo_sapiens.gene_info.gz \u2502 \u2502 \u251c\u2500\u2500 hp_2024.obo \u2502 \u2502 \u251c\u2500\u2500 hpo_obo_2024.json \u2502 \u2502 \u251c\u2500\u2500 ohe_all_thesaurus_weighted_2024.tsv.gz \u2502 \u2502 \u251c\u2500\u2500 pheno_NMF_390_matrix_42_2024.pkl \u2502 \u2502 \u251c\u2500\u2500 pheno_NMF_390_model_42_2024.pkl \u2502 \u2502 \u2514\u2500\u2500 similarity_dict_threshold_80_2024.json \u2502 \u251c\u2500\u2500 phenogenius_cli.py \u2502 \u251c\u2500\u2500 poetry.lock \u2502 \u2514\u2500\u2500 pyproject.toml \u2514\u2500\u2500 config.yaml","title":"Setting up the input directory"},{"location":"Repositories/pheval.phenogenius/#setting-up-the-testdata-directory","text":"The PhenoGenius plugin for PhEval accepts phenopackets as an input for running PhenoGenius. The testdata directory should include a subdirectory named phenopackets: \u251c\u2500\u2500 testdata_dir \u2514\u2500\u2500 phenopackets","title":"Setting up the testdata directory"},{"location":"Repositories/pheval.phenogenius/#run-command","text":"Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner phenogeniusphevalrunner \\ --output-dir /path/to/output_dir \\ --version 1 .0.1","title":"Run command"},{"location":"Repositories/pheval.phenogenius/#docs","text":"https://yaseminbridges.github.io/pheval.phenogenius/","title":"Docs"},{"location":"Repositories/pheval.phenogenius/#acknowledgements","text":"This cookiecutter project was developed from the pheval-runner-template template and will be kept up-to-date using cruft .","title":"Acknowledgements"},{"location":"Repositories/pheval.svanna/","text":"pheval.svanna Details GitHub monarch-initiative/pheval.svanna Language Python Description A PhEval plugin for integrating SvAnna, enabling structural variant prioritisation in a standardised pipeline. Dependencies External Dependencies Package Version python >=3.10,<4.0.0 pheval ^0.5.2 Documentation SvAnna Runner for PhEval This is the SvAnna plugin for PhEval. With this plugin, you can leverage the structural variant prioritisation tool, SvAnna, to run the PhEval pipeline seamlessly. The setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here. Installation Clone the pheval.svanna repo and set up the poetry environment: git clone https://github.com/monarch-initiative/pheval.svanna.git cd pheval.svanna poetry shell poetry install or install with PyPi: pip install pheval.svanna Configuring a single run: Setting up the input directory A config.yaml should be located in the input directory and formatted like so: tool : svanna tool_version : 1.0.3 variant_analysis : True gene_analysis : False disease_analysis : False tool_specific_configuration_options : svanna_jar_executable : svanna-cli-1.0.3/svanna-cli-1.0.3.jar post_process : sort_order : descending The bare minimum fields are filled to give an idea on the requirements, as SvAnna is variant prioritisation tool, only variant_analysis should be set to True in the config. An example config has been provided pheval.svanna/config.yaml. The svanna_jar_executable points to the location of the Svanna jar executable in the input directory. Setting up the testdata directory The SvAnna plugin for PhEval accepts phenopackets and vcf files as an input. The testdata directory should include subdirectories named phenopackets and vcf . e.g., \u251c\u2500\u2500 testdata_dir \u251c\u2500\u2500 phenopackets \u2514\u2500\u2500 vcf Run command Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner svannaphevalrunner \\ --output-dir /path/to/output_dir \\ --version 1 .0.3 Common errors You may see an error that is related to the current setuptools being used: pkg_resources.extern.packaging.requirements.InvalidRequirement: Expected closing RIGHT_PARENTHESIS requests ( < 3 ,> = 2 .12.* ) ; extra == 'parse' ~~~~~~~~~~^ To fix the error, setuptools needs to be downgraded to version 66: pip uninstall setuptools pip install -U setuptools == \"66\"","title":"pheval.svanna"},{"location":"Repositories/pheval.svanna/#phevalsvanna","text":"","title":"pheval.svanna"},{"location":"Repositories/pheval.svanna/#details","text":"GitHub monarch-initiative/pheval.svanna Language Python Description A PhEval plugin for integrating SvAnna, enabling structural variant prioritisation in a standardised pipeline.","title":"Details"},{"location":"Repositories/pheval.svanna/#dependencies","text":"External Dependencies Package Version python >=3.10,<4.0.0 pheval ^0.5.2","title":"Dependencies"},{"location":"Repositories/pheval.svanna/#documentation","text":"","title":"Documentation"},{"location":"Repositories/pheval.svanna/#svanna-runner-for-pheval","text":"This is the SvAnna plugin for PhEval. With this plugin, you can leverage the structural variant prioritisation tool, SvAnna, to run the PhEval pipeline seamlessly. The setup process for running the full PhEval Makefile pipeline differs from setting up for a single run. The Makefile pipeline creates directory structures for corpora and configurations to handle multiple run configurations. Detailed instructions on setting up the appropriate directory layout, including the input directory and test data directory, can be found here.","title":"SvAnna Runner for PhEval"},{"location":"Repositories/pheval.svanna/#installation","text":"Clone the pheval.svanna repo and set up the poetry environment: git clone https://github.com/monarch-initiative/pheval.svanna.git cd pheval.svanna poetry shell poetry install or install with PyPi: pip install pheval.svanna","title":"Installation"},{"location":"Repositories/pheval.svanna/#configuring-a-single-run","text":"","title":"Configuring a single run:"},{"location":"Repositories/pheval.svanna/#setting-up-the-input-directory","text":"A config.yaml should be located in the input directory and formatted like so: tool : svanna tool_version : 1.0.3 variant_analysis : True gene_analysis : False disease_analysis : False tool_specific_configuration_options : svanna_jar_executable : svanna-cli-1.0.3/svanna-cli-1.0.3.jar post_process : sort_order : descending The bare minimum fields are filled to give an idea on the requirements, as SvAnna is variant prioritisation tool, only variant_analysis should be set to True in the config. An example config has been provided pheval.svanna/config.yaml. The svanna_jar_executable points to the location of the Svanna jar executable in the input directory.","title":"Setting up the input directory"},{"location":"Repositories/pheval.svanna/#setting-up-the-testdata-directory","text":"The SvAnna plugin for PhEval accepts phenopackets and vcf files as an input. The testdata directory should include subdirectories named phenopackets and vcf . e.g., \u251c\u2500\u2500 testdata_dir \u251c\u2500\u2500 phenopackets \u2514\u2500\u2500 vcf","title":"Setting up the testdata directory"},{"location":"Repositories/pheval.svanna/#run-command","text":"Once the testdata and input directories are correctly configured for the run, the pheval run command can be executed. pheval run --input-dir /path/to/input_dir \\ --testdata-dir /path/to/testdata_dir \\ --runner svannaphevalrunner \\ --output-dir /path/to/output_dir \\ --version 1 .0.3","title":"Run command"},{"location":"Repositories/pheval.svanna/#common-errors","text":"You may see an error that is related to the current setuptools being used: pkg_resources.extern.packaging.requirements.InvalidRequirement: Expected closing RIGHT_PARENTHESIS requests ( < 3 ,> = 2 .12.* ) ; extra == 'parse' ~~~~~~~~~~^ To fix the error, setuptools needs to be downgraded to version 66: pip uninstall setuptools pip install -U setuptools == \"66\"","title":"Common errors"},{"location":"Repositories/prefixmaps/","text":"prefixmaps Details GitHub linkml/prefixmaps Language Python Description Semantic prefix map registry Dependencies External Dependencies Package Version python ^3.8 pyyaml >=5.3.1 curies >=0.5.3 Documentation prefixmaps A Python library for retrieving semantic prefix maps. A semantic prefix map will map a a prefix (e.g. skos ) to a namespace (e.g http://www.w3.org/2004/02/skos/core# ). This repository and the corresponding library is designed to satisfy the following requirements: generation of prefix maps in headers of RDF documents use in tools that expand CURIEs and short-form identifiers to URIs that can be used as subjects of RDF triples coverage of prefixes from multiple different domains no single authoritative source of either prefixes or prefix-namespace mappings (clash-resilient) preferred semantic namespace is prioritized over web URLs authority preferred prefix is prioritized where possible each individual prefix map is case-insensitive bijective prefix map composition and custom ordering of prefixmaps lightweight / low footprint fast (TODO) network-independence / versioned prefix maps optional ability to retrieve latest from external authority on network What this is NOT intended for: a general source of metadata about either prefixes or namespaces a mechanism for resolving identifiers to web URLs for humans to find information Installation pip install prefixmaps Usage To use in combination with curies library: from prefixmaps import load_converter from curies import Converter converter : Converter = load_converter ([ \"obo\" , \"bioregistry.upper\" , \"linked_data\" , \"prefixcc\" ]) >>> converter . expand ( \"CHEBI:1\" ) 'http://purl.obolibrary.org/obo/CHEBI_1' >>> converter . expand ( \"GEO:1\" ) 'http://purl.obolibrary.org/obo/GEO_1' >>> converter . expand ( \"owl:Class\" ) 'http://www.w3.org/2002/07/owl#Class' >>> converter . expand ( \"FlyBase:FBgn123\" ) 'http://identifiers.org/fb/FBgn123' Alternate orderings / clash resilience prefix.cc uses the prefix geo for geosparql http://www.opengis.net/ont/geosparql# OBO uses prefix GEO for the Geographical Entity Ontology , expanding to http://purl.obolibrary.org/obo/GEO_ the Bioregistry uses the prefix geo for NCBI GEO, and \"re-mints\" a geogeo prefix for the OBO ontology If we prioritize prefix.cc the OBO prefix is ignored: converter = load_converter ([ \"prefixcc\" , \"obo\" ]) >>> converter . expand ( \"GEO:1\" ) >>> converter . expand ( \"geo:1\" ) 'http://www.opengis.net/ont/geosparql#1' Even though prefix expansion is case-sensitive, we intentionally block conflicts that differ only in case. If we push bioregistry at the start of the list then GEOGEO can be used as the prefix for the OBO ontology: converter = load_converter ([ \"bioregistry\" , \"prefixcc\" , \"obo\" ]) >>> converter . expand ( \"geo:1\" ) 'http://identifiers.org/geo/1' >>> converter . expand ( \"GEO:1\" ) >>> converter . expand ( \"GEOGEO:1\" ) 'http://purl.obolibrary.org/obo/GEO_1' Note that from the OBO perspective, GEOGEO is non-canonical. We get similar results using the upper-normalized variant of bioregistry : converter = load_converter ([ \"bioregistry.upper\" , \"prefixcc\" , \"obo\" ]) >>> converter . expand ( \"GEO:1\" ) 'http://identifiers.org/geo/1' >>> converter . expand ( \"geo:1\" ) >>> converter . expand ( \"GEOGEO:1\" ) 'http://purl.obolibrary.org/obo/GEO_1' Users of OBO ontologies will want to place OBO at the start of the list: converter = load_converter ([ \"obo\" , \"bioregistry.upper\" , \"prefixcc\" ]) >>> converter . expand ( \"geo:1\" ) >>> converter . expand ( \"GEO:1\" ) 'http://purl.obolibrary.org/obo/GEO_1' >>> converter . expand ( \"GEOGEO:1\" ) Note under this ordering there is no prefix for NCBI GEO. This is not a major limitation as there is no canonical semantic rendering of NCBI GEO. This could be added in future with a unique OBO prefix. You can use the ready-made \"merged\" prefix set, which prioritizes OBO: converter = load_converter ( \"merged\" ) >>> converter . expand ( \"GEOGEO:1\" ) >>> converter . expand ( \"GEO:1\" ) 'http://purl.obolibrary.org/obo/GEO_1' >>> converter . expand ( \"geo:1\" ) Network independence and requesting latest versions By default, this will make use of metadata distributed alongside the package. This has certain advantages in terms of reproducibility, but it means if a new ontology or prefix is added to an upstream source you won't see this. To refresh and use the latest upstream: converter = load_converter ( \"obo\" , refresh = True ) This will perform a fetch from http://obofoundry.org/registry/obo_prefixes.ttl Context Metadata See contexts.curated.yaml See the description fields Repository organization Data files containing pre-build prefix maps using sources like OBO and Bioregistry are distributed alongside the python Location: src/prefixmaps/data CSV field descriptions context: a unique handle for this context. This MUST be the same as the basename of the file prefix: corresponds to http://www.w3.org/ns/shacl#prefix namespace: corresponds to http://www.w3.org/ns/shacl#namespace canonical: true if this satisfies bijectivity Refreshing the Data The data can be refreshed in several ways: Locally, you can use tox with: pip install tox tox-poetry tox -e refresh 2. Manually running and automatically committing via this GitHub Actions workflow . 3. Running makefile (warning, this requires some pre-configuration ```shell make etl ``` TODO: make a github action that auto-releases new versions Note that PRs should not be made against the individual CSV files. These are generated from upstream sources. We temporarily house a small number of curated prefixmaps such as linked_data.yaml , with the CSV generated from the YAML. Our goal is to ultimately cede these to upstream sources. Requesting new prefixes This repo is NOT a prefix registry. Its job is simply to aggregate different prefix maps. Request changes upstream.","title":"prefixmaps"},{"location":"Repositories/prefixmaps/#prefixmaps","text":"","title":"prefixmaps"},{"location":"Repositories/prefixmaps/#details","text":"GitHub linkml/prefixmaps Language Python Description Semantic prefix map registry","title":"Details"},{"location":"Repositories/prefixmaps/#dependencies","text":"External Dependencies Package Version python ^3.8 pyyaml >=5.3.1 curies >=0.5.3","title":"Dependencies"},{"location":"Repositories/prefixmaps/#documentation","text":"","title":"Documentation"},{"location":"Repositories/prefixmaps/#prefixmaps_1","text":"A Python library for retrieving semantic prefix maps. A semantic prefix map will map a a prefix (e.g. skos ) to a namespace (e.g http://www.w3.org/2004/02/skos/core# ). This repository and the corresponding library is designed to satisfy the following requirements: generation of prefix maps in headers of RDF documents use in tools that expand CURIEs and short-form identifiers to URIs that can be used as subjects of RDF triples coverage of prefixes from multiple different domains no single authoritative source of either prefixes or prefix-namespace mappings (clash-resilient) preferred semantic namespace is prioritized over web URLs authority preferred prefix is prioritized where possible each individual prefix map is case-insensitive bijective prefix map composition and custom ordering of prefixmaps lightweight / low footprint fast (TODO) network-independence / versioned prefix maps optional ability to retrieve latest from external authority on network What this is NOT intended for: a general source of metadata about either prefixes or namespaces a mechanism for resolving identifiers to web URLs for humans to find information","title":"prefixmaps"},{"location":"Repositories/prefixmaps/#installation","text":"pip install prefixmaps","title":"Installation"},{"location":"Repositories/prefixmaps/#usage","text":"To use in combination with curies library: from prefixmaps import load_converter from curies import Converter converter : Converter = load_converter ([ \"obo\" , \"bioregistry.upper\" , \"linked_data\" , \"prefixcc\" ]) >>> converter . expand ( \"CHEBI:1\" ) 'http://purl.obolibrary.org/obo/CHEBI_1' >>> converter . expand ( \"GEO:1\" ) 'http://purl.obolibrary.org/obo/GEO_1' >>> converter . expand ( \"owl:Class\" ) 'http://www.w3.org/2002/07/owl#Class' >>> converter . expand ( \"FlyBase:FBgn123\" ) 'http://identifiers.org/fb/FBgn123'","title":"Usage"},{"location":"Repositories/prefixmaps/#alternate-orderings-clash-resilience","text":"prefix.cc uses the prefix geo for geosparql http://www.opengis.net/ont/geosparql# OBO uses prefix GEO for the Geographical Entity Ontology , expanding to http://purl.obolibrary.org/obo/GEO_ the Bioregistry uses the prefix geo for NCBI GEO, and \"re-mints\" a geogeo prefix for the OBO ontology If we prioritize prefix.cc the OBO prefix is ignored: converter = load_converter ([ \"prefixcc\" , \"obo\" ]) >>> converter . expand ( \"GEO:1\" ) >>> converter . expand ( \"geo:1\" ) 'http://www.opengis.net/ont/geosparql#1' Even though prefix expansion is case-sensitive, we intentionally block conflicts that differ only in case. If we push bioregistry at the start of the list then GEOGEO can be used as the prefix for the OBO ontology: converter = load_converter ([ \"bioregistry\" , \"prefixcc\" , \"obo\" ]) >>> converter . expand ( \"geo:1\" ) 'http://identifiers.org/geo/1' >>> converter . expand ( \"GEO:1\" ) >>> converter . expand ( \"GEOGEO:1\" ) 'http://purl.obolibrary.org/obo/GEO_1' Note that from the OBO perspective, GEOGEO is non-canonical. We get similar results using the upper-normalized variant of bioregistry : converter = load_converter ([ \"bioregistry.upper\" , \"prefixcc\" , \"obo\" ]) >>> converter . expand ( \"GEO:1\" ) 'http://identifiers.org/geo/1' >>> converter . expand ( \"geo:1\" ) >>> converter . expand ( \"GEOGEO:1\" ) 'http://purl.obolibrary.org/obo/GEO_1' Users of OBO ontologies will want to place OBO at the start of the list: converter = load_converter ([ \"obo\" , \"bioregistry.upper\" , \"prefixcc\" ]) >>> converter . expand ( \"geo:1\" ) >>> converter . expand ( \"GEO:1\" ) 'http://purl.obolibrary.org/obo/GEO_1' >>> converter . expand ( \"GEOGEO:1\" ) Note under this ordering there is no prefix for NCBI GEO. This is not a major limitation as there is no canonical semantic rendering of NCBI GEO. This could be added in future with a unique OBO prefix. You can use the ready-made \"merged\" prefix set, which prioritizes OBO: converter = load_converter ( \"merged\" ) >>> converter . expand ( \"GEOGEO:1\" ) >>> converter . expand ( \"GEO:1\" ) 'http://purl.obolibrary.org/obo/GEO_1' >>> converter . expand ( \"geo:1\" )","title":"Alternate orderings / clash resilience"},{"location":"Repositories/prefixmaps/#network-independence-and-requesting-latest-versions","text":"By default, this will make use of metadata distributed alongside the package. This has certain advantages in terms of reproducibility, but it means if a new ontology or prefix is added to an upstream source you won't see this. To refresh and use the latest upstream: converter = load_converter ( \"obo\" , refresh = True ) This will perform a fetch from http://obofoundry.org/registry/obo_prefixes.ttl","title":"Network independence and requesting latest versions"},{"location":"Repositories/prefixmaps/#context-metadata","text":"See contexts.curated.yaml See the description fields","title":"Context Metadata"},{"location":"Repositories/prefixmaps/#repository-organization","text":"Data files containing pre-build prefix maps using sources like OBO and Bioregistry are distributed alongside the python Location: src/prefixmaps/data","title":"Repository organization"},{"location":"Repositories/prefixmaps/#csv-field-descriptions","text":"context: a unique handle for this context. This MUST be the same as the basename of the file prefix: corresponds to http://www.w3.org/ns/shacl#prefix namespace: corresponds to http://www.w3.org/ns/shacl#namespace canonical: true if this satisfies bijectivity","title":"CSV field descriptions"},{"location":"Repositories/prefixmaps/#refreshing-the-data","text":"The data can be refreshed in several ways: Locally, you can use tox with: pip install tox tox-poetry tox -e refresh 2. Manually running and automatically committing via this GitHub Actions workflow . 3. Running makefile (warning, this requires some pre-configuration ```shell make etl ``` TODO: make a github action that auto-releases new versions Note that PRs should not be made against the individual CSV files. These are generated from upstream sources. We temporarily house a small number of curated prefixmaps such as linked_data.yaml , with the CSV generated from the YAML. Our goal is to ultimately cede these to upstream sources.","title":"Refreshing the Data"},{"location":"Repositories/prefixmaps/#requesting-new-prefixes","text":"This repo is NOT a prefix registry. Its job is simply to aggregate different prefix maps. Request changes upstream.","title":"Requesting new prefixes"},{"location":"Repositories/pyphetools/","text":"pyphetools Details GitHub monarch-initiative/pyphetools Language Python Description Python Phenopacket Tools Documentation pyphetools Python Phenopacket Tools This package currently is designed to test how to use the Python version of the phenopackets package together with pandas to create phenopackets from typical supplemental tables. Development goals include making builder code similar to the Java package to create valid phenopackets and to perform JSON Schema-based validation. Documentation See the tutorial and detailed documentation here . PyPI We have made the package available in the Python Package Index (pypi) at pyphetools .","title":"pyphetools"},{"location":"Repositories/pyphetools/#pyphetools","text":"","title":"pyphetools"},{"location":"Repositories/pyphetools/#details","text":"GitHub monarch-initiative/pyphetools Language Python Description Python Phenopacket Tools","title":"Details"},{"location":"Repositories/pyphetools/#documentation","text":"","title":"Documentation"},{"location":"Repositories/pyphetools/#pyphetools_1","text":"Python Phenopacket Tools This package currently is designed to test how to use the Python version of the phenopackets package together with pandas to create phenopackets from typical supplemental tables. Development goals include making builder code similar to the Java package to create valid phenopackets and to perform JSON Schema-based validation.","title":"pyphetools"},{"location":"Repositories/pyphetools/#documentation_1","text":"See the tutorial and detailed documentation here .","title":"Documentation"},{"location":"Repositories/pyphetools/#pypi","text":"We have made the package available in the Python Package Index (pypi) at pyphetools .","title":"PyPI"},{"location":"Repositories/relation-graph/","text":"relation-graph Details GitHub INCATools/relation-graph Language Scala Description Materialize OWL existential relations Documentation relation-graph Materialize OWL existential relations Run relation-graph --ontology-file uberon.owl --output-file relations.ttl --mode rdf --property 'http://purl.obolibrary.org/obo/BFO_0000050' --property 'http://purl.obolibrary.org/obo/BFO_0000051' --properties-file more_properties.txt You can leave off the property and properties-file arguments; in that case all OWL object properties are used. The default mode is rdf ; alternatively, the owl mode will output RDF, but as a valid OWL structure. The properties-file should look like this: http://purl.obolibrary.org/obo/BFO_0000050 http://purl.obolibrary.org/obo/BFO_0000051 Note: Before running, you may need to increase the amount of memory available for Java. On UNIX style systems, this is done by setting the JAVA_OPTS environment variable. For example, to set the amount of memory to 16G , you would use this command: export JAVA_OPTS=-Xmx16G . Full options Usage: relation-graph [options] --usage <bool> Print usage and exit --help | -h <bool> Print help message and exit --ontology-file <filename> Input OWL ontology --output-file <filename> File to stream output triples to. --mode <RDF|OWL|TSV> Configure style of triples to be output. RDF mode is the default; each existential relation is collapsed to a single direct triple. TSV mode outputs the same triples as RDF mode, but as TSV, compacting IRIs using an optional prefixes file. --property <IRI> Property to restrict output relations to. Provide option multiple times for multiple properties. If no properties are provided (via CLI or file), then all properties found in the ontology will be used. --properties-file <filename> File containing line-separated property IRIs to restrict output relations to. If no properties are provided (via CLI or file), then all properties found in the ontology will be used. --output-subclasses <bool> Include entailed rdfs:subClassOf or owl:equivalentClass relations in output (default false) --reflexive-subclasses <bool> When outputting rdfs:subClassOf, include relations to self for every class (default true) --equivalence-as-subclass <bool> When outputting equivalent classes, output reciprocal rdfs:subClassOf triples instead of owl:equivalentClass triples (default true) --output-classes <bool> Output any triples where classes are subjects (default true) --output-individuals <bool> Output triples where individuals are subjects, with classes as objects (default false) --disable-owl-nothing <bool> Disable inference of unsatisfiable classes by the whelk reasoner (default false) --prefixes <filename> Prefix mappings to use for TSV output (YAML dictionary --obo-prefixes <bool> Compact OBO-style IRIs regardless of inclusion in prefixes file --verbose <bool> Set log level to INFO Build Install sbt (Scala Build Tool) on your system. For Mac OS X, it is easily done using Homebrew : brew install sbt . sbt requires a working Java installation, but you do not need to otherwise install Scala. After sbt is installed, run sbt stage to create the executable. The executable is created in your cli/target/universal/stage/bin directory.","title":"relation-graph"},{"location":"Repositories/relation-graph/#relation-graph","text":"","title":"relation-graph"},{"location":"Repositories/relation-graph/#details","text":"GitHub INCATools/relation-graph Language Scala Description Materialize OWL existential relations","title":"Details"},{"location":"Repositories/relation-graph/#documentation","text":"","title":"Documentation"},{"location":"Repositories/relation-graph/#relation-graph_1","text":"Materialize OWL existential relations","title":"relation-graph"},{"location":"Repositories/relation-graph/#run","text":"relation-graph --ontology-file uberon.owl --output-file relations.ttl --mode rdf --property 'http://purl.obolibrary.org/obo/BFO_0000050' --property 'http://purl.obolibrary.org/obo/BFO_0000051' --properties-file more_properties.txt You can leave off the property and properties-file arguments; in that case all OWL object properties are used. The default mode is rdf ; alternatively, the owl mode will output RDF, but as a valid OWL structure. The properties-file should look like this: http://purl.obolibrary.org/obo/BFO_0000050 http://purl.obolibrary.org/obo/BFO_0000051 Note: Before running, you may need to increase the amount of memory available for Java. On UNIX style systems, this is done by setting the JAVA_OPTS environment variable. For example, to set the amount of memory to 16G , you would use this command: export JAVA_OPTS=-Xmx16G .","title":"Run"},{"location":"Repositories/relation-graph/#full-options","text":"Usage: relation-graph [options] --usage <bool> Print usage and exit --help | -h <bool> Print help message and exit --ontology-file <filename> Input OWL ontology --output-file <filename> File to stream output triples to. --mode <RDF|OWL|TSV> Configure style of triples to be output. RDF mode is the default; each existential relation is collapsed to a single direct triple. TSV mode outputs the same triples as RDF mode, but as TSV, compacting IRIs using an optional prefixes file. --property <IRI> Property to restrict output relations to. Provide option multiple times for multiple properties. If no properties are provided (via CLI or file), then all properties found in the ontology will be used. --properties-file <filename> File containing line-separated property IRIs to restrict output relations to. If no properties are provided (via CLI or file), then all properties found in the ontology will be used. --output-subclasses <bool> Include entailed rdfs:subClassOf or owl:equivalentClass relations in output (default false) --reflexive-subclasses <bool> When outputting rdfs:subClassOf, include relations to self for every class (default true) --equivalence-as-subclass <bool> When outputting equivalent classes, output reciprocal rdfs:subClassOf triples instead of owl:equivalentClass triples (default true) --output-classes <bool> Output any triples where classes are subjects (default true) --output-individuals <bool> Output triples where individuals are subjects, with classes as objects (default false) --disable-owl-nothing <bool> Disable inference of unsatisfiable classes by the whelk reasoner (default false) --prefixes <filename> Prefix mappings to use for TSV output (YAML dictionary --obo-prefixes <bool> Compact OBO-style IRIs regardless of inclusion in prefixes file --verbose <bool> Set log level to INFO","title":"Full options"},{"location":"Repositories/relation-graph/#build","text":"Install sbt (Scala Build Tool) on your system. For Mac OS X, it is easily done using Homebrew : brew install sbt . sbt requires a working Java installation, but you do not need to otherwise install Scala. After sbt is installed, run sbt stage to create the executable. The executable is created in your cli/target/universal/stage/bin directory.","title":"Build"},{"location":"Repositories/semantic-sql/","text":"semantic-sql Details GitHub INCATools/semantic-sql Language Python Description SQL and SQLite builds of OWL ontologies Dependencies External Dependencies Package Version python ^3.8.1 linkml-runtime ^1.2.15 SQLAlchemy-Utils ^0.38.2 click ^8.1.3 Documentation SemSQL: standard SQL views for RDF/OWL ontologies This project provides a standard collection of SQL tables/views for ontologies, such that you can make queries like this, to find all terms starting with Abnormality in HPO . $ sqlite db / hp . db sqlite > SELECT * FROM rdfs_label_statement WHERE value LIKE 'Abnormality of %' ; stanza subject predicate object value datatype language HP:0000002 HP:0000002 rdfs:label Abnormality of body height xsd:string HP:0000014 HP:0000014 rdfs:label Abnormality of the bladder xsd:string HP:0000022 HP:0000022 rdfs:label Abnormality of male internal genitalia xsd:string HP:0000032 HP:0000032 rdfs:label Abnormality of male external genitalia xsd:string Ready-made SQLite3 builds can also be downloaded for any ontology in OBO , using URLs such as https://s3.amazonaws.com/bbop-sqlite/hp.db.gz relation-graph is used to pre-generate tables of entailed edges . For example, all is-a and part-of ancestors of finger in Uberon: $ sqlite db / uberon . db sqlite > SELECT * FROM entailed_edge WHERE subject = 'UBERON:0002389' and predicate IN ( 'rdfs:subClassOf' , 'BFO:0000050' ); subject, predicate, object UBERON:0002389, BFO:0000050, UBERON:0015212 UBERON:0002389, BFO:0000050, UBERON:5002389 UBERON:0002389, BFO:0000050, UBERON:5002544 UBERON:0002389, rdfs:subClassOf, UBERON:0000061 UBERON:0002389, rdfs:subClassOf, UBERON:0000465 UBERON:0002389, rdfs:subClassOf, UBERON:0000475 SQLite provides many advantages files can be downloaded and subsequently queried without network latency compared to querying a static rdf, owl, or obo file, there is no startup/parse delay robust and performant excellent support in many languages Although the focus is on SQLite, this library can also be used for other DBMSs like PostgreSQL, MySQL, Oracle, etc Tutorials SemSQL: notebooks/SemanticSQL-Tutorial.ipynb Using OAK: part 7 of OAK tutorial Installation SemSQL comes with a helper Python library. Use of this is optional. To install: pip install semsql Download ready-made SQLite databases Pre-generated SQLite database are created weekly for all OBO ontologies and a selection of others (see ontologies.yaml ) To download: semsql download obi -o obi.db Or simply download using URL of the form: https://s3.amazonaws.com/bbop-sqlite/hp.db.gz Attaching databases If you are using sqlite3, then databases can be attached to facilitate cross-database joins. For example, many ontologies use ORCID URIs as the object of dcterms:contributor and dcterms:creator statements, but these are left \"dangling\". Metadata about these orcids are available in the semsql orcid database instance (derived from wikidata-orcid-ontology ), in the Orcid table . You can use ATTACH DATABASE to connect two databases, for example: $ sqlite3 db / cl . dl sqlite > attach 'db/orcid.db' as orcid_db ; sqlite > select * from contributor inner join orcid_db . orcid on ( orcid . id = contributor . object ) where orcid . label like 'Chris%' ; obo : cl . owl | obo : cl . owl | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall CL : 0010001 | CL : 0010001 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall CL : 0010002 | CL : 0010002 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall CL : 0010003 | CL : 0010003 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall CL : 0010004 | CL : 0010004 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000093 | UBERON : 0000093 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000094 | UBERON : 0000094 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000095 | UBERON : 0000095 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000179 | UBERON : 0000179 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000201 | UBERON : 0000201 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000202 | UBERON : 0000202 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000203 | UBERON : 0000203 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000204 | UBERON : 0000204 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall Creating a SQLite database from an OWL file There are two protocols for doing this: install build dependencies use Docker In either case: The input MUST be in RDF/XML serialization and have the suffix .owl : use robot to convert if format is different We are planning to simplify this process in future. 1. Build a SQLite database directly This requires some basic technical knowledge about how to install things on your machine and how to put things in your PATH. It does not require Docker. Requirements: rdftab.rs relation-graph 2.3.1 or higher After installing these and putting both relation-graph and rdftab.rs in your path: semsql make foo.db This assumes foo.owl is in the same folder 2. Use Docker There are two docker images that can be used: ODK semantic-sql The ODK image may lag behind docker run -v $PWD :/work -w /work -ti linkml/semantic-sql semsql make foo.db Schema See Schema Documentation The source schema is in LinkML - this is then compiled down to SQL Tables and Views The basic idea is as follows: There are a small number of \"base tables\": statements prefix entailed_edge - populated by relation-graph All other tables are actually views (derived tables), and are provided for convenience. ORM Layer A SemSQL relational database can be accessed in exactly the same way as any other SQLdb For convenience, we provide a Python Object-Relational Mapping (ORM) layer using SQL Alchemy. This allows for code uchlike the following, which joins RdfsSubclassOfStatement and existential restrictions : engine = create_engine ( f \"sqlite:////path/to/go.db\" ) SessionClass = sessionmaker ( bind = engine ) session = SessionClass () q = session . query ( RdfsSubclassOfStatement ) q = q . add_entity ( OwlSomeValuesFrom ) q = q . join ( OwlSomeValuesFrom , RdfsSubclassOfStatement . object == OwlSomeValuesFrom . id ) lines = [] for ax , ex in q . all (): line = f ' { ax . subject } subClassOf { ex . on_property } SOME { ex . filler } ' logging . info ( line ) lines . append ( line ) (this example is just for illustration - to do the same thing there is a simpler Edge relation) Applications The semsql python library is intentionally low level - we recommend using the ontology-access-kit For example: runoak -i db/envo.db search t~biome You can also pass in an OWL file and have the sqlite be made on the fly runoak -i sqlite:envo.owl search t~biome Even if using OAK, it can be useful to access SQL tables directly to do complex multi-join queries in a performant way. Optimization poetry run semsql view2table edge --full-index | sqlite3 $db /mydb.db See indexes for some ready-made indexes","title":"semantic-sql"},{"location":"Repositories/semantic-sql/#semantic-sql","text":"","title":"semantic-sql"},{"location":"Repositories/semantic-sql/#details","text":"GitHub INCATools/semantic-sql Language Python Description SQL and SQLite builds of OWL ontologies","title":"Details"},{"location":"Repositories/semantic-sql/#dependencies","text":"External Dependencies Package Version python ^3.8.1 linkml-runtime ^1.2.15 SQLAlchemy-Utils ^0.38.2 click ^8.1.3","title":"Dependencies"},{"location":"Repositories/semantic-sql/#documentation","text":"","title":"Documentation"},{"location":"Repositories/semantic-sql/#semsql-standard-sql-views-for-rdfowl-ontologies","text":"This project provides a standard collection of SQL tables/views for ontologies, such that you can make queries like this, to find all terms starting with Abnormality in HPO . $ sqlite db / hp . db sqlite > SELECT * FROM rdfs_label_statement WHERE value LIKE 'Abnormality of %' ; stanza subject predicate object value datatype language HP:0000002 HP:0000002 rdfs:label Abnormality of body height xsd:string HP:0000014 HP:0000014 rdfs:label Abnormality of the bladder xsd:string HP:0000022 HP:0000022 rdfs:label Abnormality of male internal genitalia xsd:string HP:0000032 HP:0000032 rdfs:label Abnormality of male external genitalia xsd:string Ready-made SQLite3 builds can also be downloaded for any ontology in OBO , using URLs such as https://s3.amazonaws.com/bbop-sqlite/hp.db.gz relation-graph is used to pre-generate tables of entailed edges . For example, all is-a and part-of ancestors of finger in Uberon: $ sqlite db / uberon . db sqlite > SELECT * FROM entailed_edge WHERE subject = 'UBERON:0002389' and predicate IN ( 'rdfs:subClassOf' , 'BFO:0000050' ); subject, predicate, object UBERON:0002389, BFO:0000050, UBERON:0015212 UBERON:0002389, BFO:0000050, UBERON:5002389 UBERON:0002389, BFO:0000050, UBERON:5002544 UBERON:0002389, rdfs:subClassOf, UBERON:0000061 UBERON:0002389, rdfs:subClassOf, UBERON:0000465 UBERON:0002389, rdfs:subClassOf, UBERON:0000475 SQLite provides many advantages files can be downloaded and subsequently queried without network latency compared to querying a static rdf, owl, or obo file, there is no startup/parse delay robust and performant excellent support in many languages Although the focus is on SQLite, this library can also be used for other DBMSs like PostgreSQL, MySQL, Oracle, etc","title":"SemSQL: standard SQL views for RDF/OWL ontologies"},{"location":"Repositories/semantic-sql/#tutorials","text":"SemSQL: notebooks/SemanticSQL-Tutorial.ipynb Using OAK: part 7 of OAK tutorial","title":"Tutorials"},{"location":"Repositories/semantic-sql/#installation","text":"SemSQL comes with a helper Python library. Use of this is optional. To install: pip install semsql","title":"Installation"},{"location":"Repositories/semantic-sql/#download-ready-made-sqlite-databases","text":"Pre-generated SQLite database are created weekly for all OBO ontologies and a selection of others (see ontologies.yaml ) To download: semsql download obi -o obi.db Or simply download using URL of the form: https://s3.amazonaws.com/bbop-sqlite/hp.db.gz","title":"Download ready-made SQLite databases"},{"location":"Repositories/semantic-sql/#attaching-databases","text":"If you are using sqlite3, then databases can be attached to facilitate cross-database joins. For example, many ontologies use ORCID URIs as the object of dcterms:contributor and dcterms:creator statements, but these are left \"dangling\". Metadata about these orcids are available in the semsql orcid database instance (derived from wikidata-orcid-ontology ), in the Orcid table . You can use ATTACH DATABASE to connect two databases, for example: $ sqlite3 db / cl . dl sqlite > attach 'db/orcid.db' as orcid_db ; sqlite > select * from contributor inner join orcid_db . orcid on ( orcid . id = contributor . object ) where orcid . label like 'Chris%' ; obo : cl . owl | obo : cl . owl | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall CL : 0010001 | CL : 0010001 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall CL : 0010002 | CL : 0010002 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall CL : 0010003 | CL : 0010003 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall CL : 0010004 | CL : 0010004 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000093 | UBERON : 0000093 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000094 | UBERON : 0000094 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000095 | UBERON : 0000095 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000179 | UBERON : 0000179 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000201 | UBERON : 0000201 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000202 | UBERON : 0000202 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000203 | UBERON : 0000203 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall UBERON : 0000204 | UBERON : 0000204 | dcterms : contributor | orcid : 0000 - 0002 - 6601 - 2165 |||| orcid : 0000 - 0002 - 6601 - 2165 | Christopher J . Mungall","title":"Attaching databases"},{"location":"Repositories/semantic-sql/#creating-a-sqlite-database-from-an-owl-file","text":"There are two protocols for doing this: install build dependencies use Docker In either case: The input MUST be in RDF/XML serialization and have the suffix .owl : use robot to convert if format is different We are planning to simplify this process in future.","title":"Creating a SQLite database from an OWL file"},{"location":"Repositories/semantic-sql/#1-build-a-sqlite-database-directly","text":"This requires some basic technical knowledge about how to install things on your machine and how to put things in your PATH. It does not require Docker. Requirements: rdftab.rs relation-graph 2.3.1 or higher After installing these and putting both relation-graph and rdftab.rs in your path: semsql make foo.db This assumes foo.owl is in the same folder","title":"1. Build a SQLite database directly"},{"location":"Repositories/semantic-sql/#2-use-docker","text":"There are two docker images that can be used: ODK semantic-sql The ODK image may lag behind docker run -v $PWD :/work -w /work -ti linkml/semantic-sql semsql make foo.db","title":"2. Use Docker"},{"location":"Repositories/semantic-sql/#schema","text":"See Schema Documentation The source schema is in LinkML - this is then compiled down to SQL Tables and Views The basic idea is as follows: There are a small number of \"base tables\": statements prefix entailed_edge - populated by relation-graph All other tables are actually views (derived tables), and are provided for convenience.","title":"Schema"},{"location":"Repositories/semantic-sql/#orm-layer","text":"A SemSQL relational database can be accessed in exactly the same way as any other SQLdb For convenience, we provide a Python Object-Relational Mapping (ORM) layer using SQL Alchemy. This allows for code uchlike the following, which joins RdfsSubclassOfStatement and existential restrictions : engine = create_engine ( f \"sqlite:////path/to/go.db\" ) SessionClass = sessionmaker ( bind = engine ) session = SessionClass () q = session . query ( RdfsSubclassOfStatement ) q = q . add_entity ( OwlSomeValuesFrom ) q = q . join ( OwlSomeValuesFrom , RdfsSubclassOfStatement . object == OwlSomeValuesFrom . id ) lines = [] for ax , ex in q . all (): line = f ' { ax . subject } subClassOf { ex . on_property } SOME { ex . filler } ' logging . info ( line ) lines . append ( line ) (this example is just for illustration - to do the same thing there is a simpler Edge relation)","title":"ORM Layer"},{"location":"Repositories/semantic-sql/#applications","text":"The semsql python library is intentionally low level - we recommend using the ontology-access-kit For example: runoak -i db/envo.db search t~biome You can also pass in an OWL file and have the sqlite be made on the fly runoak -i sqlite:envo.owl search t~biome Even if using OAK, it can be useful to access SQL tables directly to do complex multi-join queries in a performant way.","title":"Applications"},{"location":"Repositories/semantic-sql/#optimization","text":"poetry run semsql view2table edge --full-index | sqlite3 $db /mydb.db See indexes for some ready-made indexes","title":"Optimization"},{"location":"Repositories/semsim/","text":"semsim Details GitHub Knowledge-Graph-Hub/semsim Language Jupyter Notebook Description Write out file with semantic similarity of all pairs of ontology terms in a given ontology Dependencies External Dependencies Package Version python ^3.9 grape ^0.1.10 pandas ^1.4.3 tox ^3.25.1 click ^8.1.3 tqdm ^4.64.0 Documentation Write out file with semantic similarity of all pairs of HP terms Workflow: - download HPOA file in order to calculate frequencies for each term - download HPO - turn HPO into DAG - drop singletons - drop non-HP terms - confirm DAG-ness - load graph into Ensmallen - make Resnik model, calculate all by all Resnik similarity - make Jaccard model, calculate all by all Jaccard similarity - pandas join tables - write out to file - upload file to S3 (KG-Hub?) # decide on this later","title":"semsim"},{"location":"Repositories/semsim/#semsim","text":"","title":"semsim"},{"location":"Repositories/semsim/#details","text":"GitHub Knowledge-Graph-Hub/semsim Language Jupyter Notebook Description Write out file with semantic similarity of all pairs of ontology terms in a given ontology","title":"Details"},{"location":"Repositories/semsim/#dependencies","text":"External Dependencies Package Version python ^3.9 grape ^0.1.10 pandas ^1.4.3 tox ^3.25.1 click ^8.1.3 tqdm ^4.64.0","title":"Dependencies"},{"location":"Repositories/semsim/#documentation","text":"Write out file with semantic similarity of all pairs of HP terms Workflow: - download HPOA file in order to calculate frequencies for each term - download HPO - turn HPO into DAG - drop singletons - drop non-HP terms - confirm DAG-ness - load graph into Ensmallen - make Resnik model, calculate all by all Resnik similarity - make Jaccard model, calculate all by all Jaccard similarity - pandas join tables - write out to file - upload file to S3 (KG-Hub?) # decide on this later","title":"Documentation"},{"location":"Repositories/semsimian/","text":"semsimian Details GitHub monarch-initiative/semsimian Language Jupyter Notebook Description Simple rust implementation of semantic similarity Documentation semsimian Semsimian is a package to provide fast semantic similarity calculations for ontologies. It is a Rust library with a Python interface. This includes implementation of Jaccard and Resnik similarity of terms in an ontology, as well as a method to calculate the similarity of two sets of terms (so-called termset similarity). Other methods will be added in the future. Semsimian is currently integrated into OAK and the Monarch app to provide fast semantic similarity calculations. Installation Set up your virtual environment of choice. cd semsimian (home directory of this project) pip install maturin maturin develop python Python 3.9.16 (main, Jan 11 2023, 10:02:19) [Clang 14.0.6 ] :: Anaconda, Inc. on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> from semsimian import Semsimian >>> s = Semsimian([('banana', 'is_a', 'fruit'), ('cherry', 'is_a', 'fruit')]) >>> s.jaccard_similarity('banana', 'cherry') This should yield a value of 1.0. Releases As of version 0.2.11, the semsimian source is released on GitHub , with a corresponding set of Python wheels released to PyPi and a corresponding release in crates.io . To trigger a new set of builds, first update the version number in Cargo.toml , then create a new release . Wheels are prepared for the following environments and architectures: OS Architectures Python Versions Linux x86_64, x86_64-unknown-linux-musl, aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl 3.8, 3.9, 3.10, 3.11, 3.12 MacOS x86_64, universal2 3.8, 3.9, 3.10, 3.11, 3.12 Windows x86_64 3.8, 3.9, 3.10, 3.11, 3.12 Troubleshooting Building for Mac ARM M1 architectures If a import semsimian results in a ImportError warning about incompatible architecture, try the following: - Install conda . This guide may be helpful. - Set up a virtual environment with conda so that your Python build is aligned with your processor architecture (in this case, ARM). Try something like: $ conda create -n myenv python=3.9 ...setup happens... $ conda activate myenv and then proceed as above. Code Coverage via Docker Build a docker image: docker build -t my-rust-app . Run your tests inside a Docker container and generate coverage: docker run -v \"$(pwd)\":/usr/src/app -t my-rust-app bash -c \"CARGO_INCREMENTAL=0 RUSTFLAGS='-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort' cargo test && grcov . -s . --binary-path ./target/debug/ -t html --branch --ignore-not-existing -o ./target/debug/coverage/\" Get Coverage report from: open ./target/debug/coverage/index.html","title":"semsimian"},{"location":"Repositories/semsimian/#semsimian","text":"","title":"semsimian"},{"location":"Repositories/semsimian/#details","text":"GitHub monarch-initiative/semsimian Language Jupyter Notebook Description Simple rust implementation of semantic similarity","title":"Details"},{"location":"Repositories/semsimian/#documentation","text":"","title":"Documentation"},{"location":"Repositories/semsimian/#semsimian_1","text":"Semsimian is a package to provide fast semantic similarity calculations for ontologies. It is a Rust library with a Python interface. This includes implementation of Jaccard and Resnik similarity of terms in an ontology, as well as a method to calculate the similarity of two sets of terms (so-called termset similarity). Other methods will be added in the future. Semsimian is currently integrated into OAK and the Monarch app to provide fast semantic similarity calculations.","title":"semsimian"},{"location":"Repositories/semsimian/#installation","text":"Set up your virtual environment of choice. cd semsimian (home directory of this project) pip install maturin maturin develop python Python 3.9.16 (main, Jan 11 2023, 10:02:19) [Clang 14.0.6 ] :: Anaconda, Inc. on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> from semsimian import Semsimian >>> s = Semsimian([('banana', 'is_a', 'fruit'), ('cherry', 'is_a', 'fruit')]) >>> s.jaccard_similarity('banana', 'cherry') This should yield a value of 1.0.","title":"Installation"},{"location":"Repositories/semsimian/#releases","text":"As of version 0.2.11, the semsimian source is released on GitHub , with a corresponding set of Python wheels released to PyPi and a corresponding release in crates.io . To trigger a new set of builds, first update the version number in Cargo.toml , then create a new release . Wheels are prepared for the following environments and architectures: OS Architectures Python Versions Linux x86_64, x86_64-unknown-linux-musl, aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl 3.8, 3.9, 3.10, 3.11, 3.12 MacOS x86_64, universal2 3.8, 3.9, 3.10, 3.11, 3.12 Windows x86_64 3.8, 3.9, 3.10, 3.11, 3.12","title":"Releases"},{"location":"Repositories/semsimian/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"Repositories/semsimian/#building-for-mac-arm-m1-architectures","text":"If a import semsimian results in a ImportError warning about incompatible architecture, try the following: - Install conda . This guide may be helpful. - Set up a virtual environment with conda so that your Python build is aligned with your processor architecture (in this case, ARM). Try something like: $ conda create -n myenv python=3.9 ...setup happens... $ conda activate myenv and then proceed as above.","title":"Building for Mac ARM M1 architectures"},{"location":"Repositories/semsimian/#code-coverage-via-docker","text":"Build a docker image: docker build -t my-rust-app . Run your tests inside a Docker container and generate coverage: docker run -v \"$(pwd)\":/usr/src/app -t my-rust-app bash -c \"CARGO_INCREMENTAL=0 RUSTFLAGS='-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort' cargo test && grcov . -s . --binary-path ./target/debug/ -t html --branch --ignore-not-existing -o ./target/debug/coverage/\" Get Coverage report from: open ./target/debug/coverage/index.html","title":"Code Coverage via Docker"},{"location":"Repositories/sssom-py/","text":"sssom-py Details GitHub mapping-commons/sssom-py Language Python Description Python toolkit for SSSOM mapping format Dependencies External Dependencies Package Version python >=3.9,<4.0.0 click >=8.1.6 curies >=0.10.18 linkml-runtime ^1.7.5 linkml >1.7.10 pandas >1.0.3 pansql {'version': '>=0.0.1', 'extras': ['pansql']} sssom-schema ^1.0.0 networkx {'version': '>=3.1', 'extras': ['networkx']} sparqlwrapper >=2.0.0 validators >=0.20.0 deprecation ^2.1.0 pyyaml ^6.0.1 rdflib >=6.0.0 scipy {'version': '*', 'extras': ['scipy']} importlib-resources ^6.1.1 Documentation Python Utilities for SSSOM A Python library and command line interface (CLI) for working with SSSOM (Simple Standard for Sharing Ontology Mappings) . Getting Started A SSSOM TSV can be parsed with import sssom # other SSSOM files can be found on https://mapping-commons.github.io url = \"https://raw.githubusercontent.com/mapping-commons/mh_mapping_initiative/master/mappings/mp_hp_eye_impc.sssom.tsv\" # TSV can be parsed into a mapping set dataframe object, # which includes a pandas DataFrame, a curies.Converter, # and metadata msdf = sssom . parse_tsv ( url ) # SSSOM comes with several \"write\" functions sssom . write_tsv ( msdf , \"test.tsv\" ) sssom . write_json ( msdf , \"test.json\" ) sssom . write_owl ( msdf , \"test.owl\" ) sssom . write_rdf ( msdf , \"test.ttl\" ) [!WARNING] The export formats (json, rdf) of sssom-py are not yet finalised! Expect changes in future releases. Documentation See documentation Deploy documentation $ make sphinx $ make deploy-docs Schema See the schema/ folder for source schema in YAML, plus derivations to JSON-Schema, ShEx, etc. Testing tox is similar to make , but specific for Python software projects. Its configuration is stored in tox.ini in different \"environments\" whose headers look like [testenv:...] . All tests can be run with: $ pip install tox $ tox A specific environment can be run using the -e flag, such as tox -e lint to run the linting environment. Outstanding Contributors Outstanding contributors are groups and institutions that have helped with organising the SSSOM Python package's development, providing funding, advice and infrastructure. We are very grateful for all your contribution - the project would not exist without you! Harvard Medical School The INDRA Lab , a part of the Laboratory of Systems Pharmacology and the Harvard Program in Therapeutic Science (HiTS) , is interested in natural language processing and large-scale knowledge assembly. Their work on SSSOM is funded by the DARPA Young Faculty Award W911NF2010255 (PI: Benjamin M. Gyori). https://indralab.github.io Citation SSSOM itself can be cited with: @article { 10.1093/database/baac035 , author = {Matentzoglu, Nicolas and Balhoff, James P and Bello, Susan M and Bizon, Chris and Brush, Matthew and Callahan, Tiffany J and Chute, Christopher G and Duncan, William D and Evelo, Chris T and Gabriel, Davera and Graybeal, John and Gray, Alasdair and Gyori, Benjamin M and Haendel, Melissa and Harmse, Henriette and Harris, Nomi L and Harrow, Ian and Hegde, Harshad B and Hoyt, Amelia L and Hoyt, Charles T and Jiao, Dazhi and Jim\u00e9nez-Ruiz, Ernesto and Jupp, Simon and Kim, Hyeongsik and Koehler, Sebastian and Liener, Thomas and Long, Qinqin and Malone, James and McLaughlin, James A and McMurry, Julie A and Moxon, Sierra and Munoz-Torres, Monica C and Osumi-Sutherland, David and Overton, James A and Peters, Bjoern and Putman, Tim and Queralt-Rosinach, N\u00faria and Shefchek, Kent and Solbrig, Harold and Thessen, Anne and Tudorache, Tania and Vasilevsky, Nicole and Wagner, Alex H and Mungall, Christopher J} , title = {A Simple Standard for Sharing Ontological Mappings (SSSOM)} , journal = {Database} , volume = {2022} , pages = {baac035} , year = {2022} , month = {05} , issn = {1758-0463} , doi = {10.1093/database/baac035} , url = {https://doi.org/10.1093/database/baac035} , eprint = {https://academic.oup.com/database/article-pdf/doi/10.1093/database/baac035/43832024/baac035.pdf} , } To cite the SSSOM-py software package specifically, use: @software { sssom-py , author = {Harshad Hegde and Nico Matentzoglu and Charles Tapley Hoyt and Chris Mungall and Joe Flack and Benjamin M. Gyori and Damien Goutte-Gattat and Glass and Syphax Bouazzouni} , title = {mapping-commons/sssom-py: v0.4.15 release (minor fixes) } , month = dec , year = 2024 , publisher = {Zenodo} , version = {v0.4.15} , doi = {10.5281/zenodo.14296666} , url = {https://doi.org/10.5281/zenodo.14296666} , }","title":"sssom-py"},{"location":"Repositories/sssom-py/#sssom-py","text":"","title":"sssom-py"},{"location":"Repositories/sssom-py/#details","text":"GitHub mapping-commons/sssom-py Language Python Description Python toolkit for SSSOM mapping format","title":"Details"},{"location":"Repositories/sssom-py/#dependencies","text":"External Dependencies Package Version python >=3.9,<4.0.0 click >=8.1.6 curies >=0.10.18 linkml-runtime ^1.7.5 linkml >1.7.10 pandas >1.0.3 pansql {'version': '>=0.0.1', 'extras': ['pansql']} sssom-schema ^1.0.0 networkx {'version': '>=3.1', 'extras': ['networkx']} sparqlwrapper >=2.0.0 validators >=0.20.0 deprecation ^2.1.0 pyyaml ^6.0.1 rdflib >=6.0.0 scipy {'version': '*', 'extras': ['scipy']} importlib-resources ^6.1.1","title":"Dependencies"},{"location":"Repositories/sssom-py/#documentation","text":"","title":"Documentation"},{"location":"Repositories/sssom-py/#python-utilities-for-sssom","text":"A Python library and command line interface (CLI) for working with SSSOM (Simple Standard for Sharing Ontology Mappings) .","title":"Python Utilities for SSSOM"},{"location":"Repositories/sssom-py/#getting-started","text":"A SSSOM TSV can be parsed with import sssom # other SSSOM files can be found on https://mapping-commons.github.io url = \"https://raw.githubusercontent.com/mapping-commons/mh_mapping_initiative/master/mappings/mp_hp_eye_impc.sssom.tsv\" # TSV can be parsed into a mapping set dataframe object, # which includes a pandas DataFrame, a curies.Converter, # and metadata msdf = sssom . parse_tsv ( url ) # SSSOM comes with several \"write\" functions sssom . write_tsv ( msdf , \"test.tsv\" ) sssom . write_json ( msdf , \"test.json\" ) sssom . write_owl ( msdf , \"test.owl\" ) sssom . write_rdf ( msdf , \"test.ttl\" ) [!WARNING] The export formats (json, rdf) of sssom-py are not yet finalised! Expect changes in future releases.","title":"Getting Started"},{"location":"Repositories/sssom-py/#documentation_1","text":"See documentation","title":"Documentation"},{"location":"Repositories/sssom-py/#deploy-documentation","text":"$ make sphinx $ make deploy-docs","title":"Deploy documentation"},{"location":"Repositories/sssom-py/#schema","text":"See the schema/ folder for source schema in YAML, plus derivations to JSON-Schema, ShEx, etc.","title":"Schema"},{"location":"Repositories/sssom-py/#testing","text":"tox is similar to make , but specific for Python software projects. Its configuration is stored in tox.ini in different \"environments\" whose headers look like [testenv:...] . All tests can be run with: $ pip install tox $ tox A specific environment can be run using the -e flag, such as tox -e lint to run the linting environment.","title":"Testing"},{"location":"Repositories/sssom-py/#outstanding-contributors","text":"Outstanding contributors are groups and institutions that have helped with organising the SSSOM Python package's development, providing funding, advice and infrastructure. We are very grateful for all your contribution - the project would not exist without you!","title":"Outstanding Contributors"},{"location":"Repositories/sssom-py/#harvard-medical-school","text":"The INDRA Lab , a part of the Laboratory of Systems Pharmacology and the Harvard Program in Therapeutic Science (HiTS) , is interested in natural language processing and large-scale knowledge assembly. Their work on SSSOM is funded by the DARPA Young Faculty Award W911NF2010255 (PI: Benjamin M. Gyori). https://indralab.github.io","title":"Harvard Medical School"},{"location":"Repositories/sssom-py/#citation","text":"SSSOM itself can be cited with: @article { 10.1093/database/baac035 , author = {Matentzoglu, Nicolas and Balhoff, James P and Bello, Susan M and Bizon, Chris and Brush, Matthew and Callahan, Tiffany J and Chute, Christopher G and Duncan, William D and Evelo, Chris T and Gabriel, Davera and Graybeal, John and Gray, Alasdair and Gyori, Benjamin M and Haendel, Melissa and Harmse, Henriette and Harris, Nomi L and Harrow, Ian and Hegde, Harshad B and Hoyt, Amelia L and Hoyt, Charles T and Jiao, Dazhi and Jim\u00e9nez-Ruiz, Ernesto and Jupp, Simon and Kim, Hyeongsik and Koehler, Sebastian and Liener, Thomas and Long, Qinqin and Malone, James and McLaughlin, James A and McMurry, Julie A and Moxon, Sierra and Munoz-Torres, Monica C and Osumi-Sutherland, David and Overton, James A and Peters, Bjoern and Putman, Tim and Queralt-Rosinach, N\u00faria and Shefchek, Kent and Solbrig, Harold and Thessen, Anne and Tudorache, Tania and Vasilevsky, Nicole and Wagner, Alex H and Mungall, Christopher J} , title = {A Simple Standard for Sharing Ontological Mappings (SSSOM)} , journal = {Database} , volume = {2022} , pages = {baac035} , year = {2022} , month = {05} , issn = {1758-0463} , doi = {10.1093/database/baac035} , url = {https://doi.org/10.1093/database/baac035} , eprint = {https://academic.oup.com/database/article-pdf/doi/10.1093/database/baac035/43832024/baac035.pdf} , } To cite the SSSOM-py software package specifically, use: @software { sssom-py , author = {Harshad Hegde and Nico Matentzoglu and Charles Tapley Hoyt and Chris Mungall and Joe Flack and Benjamin M. Gyori and Damien Goutte-Gattat and Glass and Syphax Bouazzouni} , title = {mapping-commons/sssom-py: v0.4.15 release (minor fixes) } , month = dec , year = 2024 , publisher = {Zenodo} , version = {v0.4.15} , doi = {10.5281/zenodo.14296666} , url = {https://doi.org/10.5281/zenodo.14296666} , }","title":"Citation"},{"location":"Repositories/sssom/","text":"sssom Details GitHub mapping-commons/sssom Language Python Description Simple Standard for Sharing Ontology Mappings Dependencies External Dependencies Package Version python ^3.8.1 Documentation A Simple Standard for Sharing Ontological Mappings (SSSOM) SSSOM is a Simple Standard for Sharing Ontological Mappings, providing a TSV-based representation for ontology term mappings a comprehensive set of standard metadata elements to describe mappings and a standard translation between the TSV and the Web Ontology Language (OWL). The SSSOM TSV format in particular is geared towards the needs of the wider bioinformatics community as a way to safely exchange mappings in an easily readable yet semantically well-specified manner. Consider this example of a simple mapping file: subject_id predicate_id object_id mapping_justification subject_label object_label HP:0009124 skos:exactMatch MP:0000003 semapv:LexicalMatching Abnormal adipose tissue morphology abnormal adipose tissue morphology HP:0008551 skos:exactMatch MP:0000018 semapv:LexicalMatching Microtia small ears HP:0000411 skos:exactMatch MP:0000021 semapv:LexicalMatching Protruding ear prominent ears SSSOM specifies all its metadata elements: subject_id predicate_id object_id mapping_justification ( NOTE: Since June 2022 match_type is being replaced by mapping_justification see here ) subject_label object_label including clear definitions, examples of use and controlled vocabulary where necessary, along with 30 other optional metadata elements to provide additional provenance. SSSOM further provides a standard way to - augment the TSV file with mapping set - level metadata, such as creator_id, mapping_date or license and - translate a SSSOM compliant TSV files into OWL reified axioms . This will allow the easy loading, and merging of SSSOM mapping tables into existing ontologies using standard tools such as ROBOT (under development). Note that SSSOM is currently under development and subject to change. Please leave us a comment on the issue tracker if you want to be involved. The full specification can be found here . Citation If you have found SSSOM to be helpful in your work, please consider citing: Nicolas Matentzoglu, James P Balhoff, Susan M Bello, Chris Bizon, Matthew Brush, Tiffany J Callahan, Christopher G Chute, William D Duncan, Chris T Evelo, Davera Gabriel, John Graybeal, Alasdair Gray, Benjamin M Gyori, Melissa Haendel, Henriette Harmse, Nomi L Harris, Ian Harrow, Harshad B Hegde, Amelia L Hoyt, Charles T Hoyt, Dazhi Jiao, Ernesto Jim\u00e9nez-Ruiz, Simon Jupp, Hyeongsik Kim, Sebastian Koehler, Thomas Liener, Qinqin Long, James Malone, James A McLaughlin, Julie A McMurry, Sierra Moxon, Monica C Munoz-Torres, David Osumi-Sutherland, James A Overton, Bjoern Peters, Tim Putman, N\u00faria Queralt-Rosinach, Kent Shefchek, Harold Solbrig, Anne Thessen, Tania Tudorache, Nicole Vasilevsky, Alex H Wagner, Christopher J Mungall, A Simple Standard for Sharing Ontological Mappings (SSSOM), Database, Volume 2022, 2022, baac035, https://doi.org/10.1093/database/baac035 @article { 10.1093/database/baac035 , author = {Matentzoglu, Nicolas and Balhoff, James P and Bello, Susan M and Bizon, Chris and Brush, Matthew and Callahan, Tiffany J and Chute, Christopher G and Duncan, William D and Evelo, Chris T and Gabriel, Davera and Graybeal, John and Gray, Alasdair and Gyori, Benjamin M and Haendel, Melissa and Harmse, Henriette and Harris, Nomi L and Harrow, Ian and Hegde, Harshad B and Hoyt, Amelia L and Hoyt, Charles T and Jiao, Dazhi and Jim\u00e9nez-Ruiz, Ernesto and Jupp, Simon and Kim, Hyeongsik and Koehler, Sebastian and Liener, Thomas and Long, Qinqin and Malone, James and McLaughlin, James A and McMurry, Julie A and Moxon, Sierra and Munoz-Torres, Monica C and Osumi-Sutherland, David and Overton, James A and Peters, Bjoern and Putman, Tim and Queralt-Rosinach, N\u00faria and Shefchek, Kent and Solbrig, Harold and Thessen, Anne and Tudorache, Tania and Vasilevsky, Nicole and Wagner, Alex H and Mungall, Christopher J} , title = \"{A Simple Standard for Sharing Ontological Mappings (SSSOM)}\" , journal = {Database} , volume = {2022} , year = {2022} , month = {05} , abstract = \"{Despite progress in the development of standards for describing and exchanging scientific information, the lack of easy-to-use standards for mapping between different representations of the same or similar objects in different databases poses a major impediment to data integration and interoperability. Mappings often lack the metadata needed to be correctly interpreted and applied. For example, are two terms equivalent or merely related? Are they narrow or broad matches? Or are they associated in some other way? Such relationships between the mapped terms are often not documented, which leads to incorrect assumptions and makes them hard to use in scenarios that require a high degree of precision (such as diagnostics or risk prediction). Furthermore, the lack of descriptions of how mappings were done makes it hard to combine and reconcile mappings, particularly curated and automated ones. We have developed the Simple Standard for Sharing Ontological Mappings (SSSOM) which addresses these problems by: (i) Introducing a machine-readable and extensible vocabulary to describe metadata that makes imprecision, inaccuracy and incompleteness in mappings explicit. (ii) Defining an easy-to-use simple table-based format that can be integrated into existing data science pipelines without the need to parse or query ontologies, and that integrates seamlessly with Linked Data principles. (iii) Implementing open and community-driven collaborative workflows that are designed to evolve the standard continuously to address changing requirements and mapping practices. (iv) Providing reference tools and software libraries for working with the standard. In this paper, we present the SSSOM standard, describe several use cases in detail and survey some of the existing work on standardizing the exchange of mappings, with the goal of making mappings Findable, Accessible, Interoperable and Reusable (FAIR). The SSSOM specification can be found at http://w3id.org/sssom/spec.Database URL: http://w3id.org/sssom/spec}\" , issn = {1758-0463} , doi = {10.1093/database/baac035} , url = {https://doi.org/10.1093/database/baac035} , note = {baac035} , eprint = {https://academic.oup.com/database/article-pdf/doi/10.1093/database/baac035/43832024/baac035.pdf} , } A second report with updates since the primary SSSOM publication above was published as part of the proceedings of the Ontology Matching Workshop 2022. Copying SSSOM is distributed under the terms of the 3-clause BSD license, as included in the LICENSE file of the source distribution. By exception, the following files are not covered by the 3-clause BSD license: sssom-banner.png : That file may only be used by members of the internal Monarch team and collaborators on Monarch flagship products.","title":"sssom"},{"location":"Repositories/sssom/#sssom","text":"","title":"sssom"},{"location":"Repositories/sssom/#details","text":"GitHub mapping-commons/sssom Language Python Description Simple Standard for Sharing Ontology Mappings","title":"Details"},{"location":"Repositories/sssom/#dependencies","text":"External Dependencies Package Version python ^3.8.1","title":"Dependencies"},{"location":"Repositories/sssom/#documentation","text":"","title":"Documentation"},{"location":"Repositories/sssom/#a-simple-standard-for-sharing-ontological-mappings-sssom","text":"SSSOM is a Simple Standard for Sharing Ontological Mappings, providing a TSV-based representation for ontology term mappings a comprehensive set of standard metadata elements to describe mappings and a standard translation between the TSV and the Web Ontology Language (OWL). The SSSOM TSV format in particular is geared towards the needs of the wider bioinformatics community as a way to safely exchange mappings in an easily readable yet semantically well-specified manner. Consider this example of a simple mapping file: subject_id predicate_id object_id mapping_justification subject_label object_label HP:0009124 skos:exactMatch MP:0000003 semapv:LexicalMatching Abnormal adipose tissue morphology abnormal adipose tissue morphology HP:0008551 skos:exactMatch MP:0000018 semapv:LexicalMatching Microtia small ears HP:0000411 skos:exactMatch MP:0000021 semapv:LexicalMatching Protruding ear prominent ears SSSOM specifies all its metadata elements: subject_id predicate_id object_id mapping_justification ( NOTE: Since June 2022 match_type is being replaced by mapping_justification see here ) subject_label object_label including clear definitions, examples of use and controlled vocabulary where necessary, along with 30 other optional metadata elements to provide additional provenance. SSSOM further provides a standard way to - augment the TSV file with mapping set - level metadata, such as creator_id, mapping_date or license and - translate a SSSOM compliant TSV files into OWL reified axioms . This will allow the easy loading, and merging of SSSOM mapping tables into existing ontologies using standard tools such as ROBOT (under development). Note that SSSOM is currently under development and subject to change. Please leave us a comment on the issue tracker if you want to be involved. The full specification can be found here .","title":"A Simple Standard for Sharing Ontological Mappings (SSSOM)"},{"location":"Repositories/sssom/#citation","text":"If you have found SSSOM to be helpful in your work, please consider citing: Nicolas Matentzoglu, James P Balhoff, Susan M Bello, Chris Bizon, Matthew Brush, Tiffany J Callahan, Christopher G Chute, William D Duncan, Chris T Evelo, Davera Gabriel, John Graybeal, Alasdair Gray, Benjamin M Gyori, Melissa Haendel, Henriette Harmse, Nomi L Harris, Ian Harrow, Harshad B Hegde, Amelia L Hoyt, Charles T Hoyt, Dazhi Jiao, Ernesto Jim\u00e9nez-Ruiz, Simon Jupp, Hyeongsik Kim, Sebastian Koehler, Thomas Liener, Qinqin Long, James Malone, James A McLaughlin, Julie A McMurry, Sierra Moxon, Monica C Munoz-Torres, David Osumi-Sutherland, James A Overton, Bjoern Peters, Tim Putman, N\u00faria Queralt-Rosinach, Kent Shefchek, Harold Solbrig, Anne Thessen, Tania Tudorache, Nicole Vasilevsky, Alex H Wagner, Christopher J Mungall, A Simple Standard for Sharing Ontological Mappings (SSSOM), Database, Volume 2022, 2022, baac035, https://doi.org/10.1093/database/baac035 @article { 10.1093/database/baac035 , author = {Matentzoglu, Nicolas and Balhoff, James P and Bello, Susan M and Bizon, Chris and Brush, Matthew and Callahan, Tiffany J and Chute, Christopher G and Duncan, William D and Evelo, Chris T and Gabriel, Davera and Graybeal, John and Gray, Alasdair and Gyori, Benjamin M and Haendel, Melissa and Harmse, Henriette and Harris, Nomi L and Harrow, Ian and Hegde, Harshad B and Hoyt, Amelia L and Hoyt, Charles T and Jiao, Dazhi and Jim\u00e9nez-Ruiz, Ernesto and Jupp, Simon and Kim, Hyeongsik and Koehler, Sebastian and Liener, Thomas and Long, Qinqin and Malone, James and McLaughlin, James A and McMurry, Julie A and Moxon, Sierra and Munoz-Torres, Monica C and Osumi-Sutherland, David and Overton, James A and Peters, Bjoern and Putman, Tim and Queralt-Rosinach, N\u00faria and Shefchek, Kent and Solbrig, Harold and Thessen, Anne and Tudorache, Tania and Vasilevsky, Nicole and Wagner, Alex H and Mungall, Christopher J} , title = \"{A Simple Standard for Sharing Ontological Mappings (SSSOM)}\" , journal = {Database} , volume = {2022} , year = {2022} , month = {05} , abstract = \"{Despite progress in the development of standards for describing and exchanging scientific information, the lack of easy-to-use standards for mapping between different representations of the same or similar objects in different databases poses a major impediment to data integration and interoperability. Mappings often lack the metadata needed to be correctly interpreted and applied. For example, are two terms equivalent or merely related? Are they narrow or broad matches? Or are they associated in some other way? Such relationships between the mapped terms are often not documented, which leads to incorrect assumptions and makes them hard to use in scenarios that require a high degree of precision (such as diagnostics or risk prediction). Furthermore, the lack of descriptions of how mappings were done makes it hard to combine and reconcile mappings, particularly curated and automated ones. We have developed the Simple Standard for Sharing Ontological Mappings (SSSOM) which addresses these problems by: (i) Introducing a machine-readable and extensible vocabulary to describe metadata that makes imprecision, inaccuracy and incompleteness in mappings explicit. (ii) Defining an easy-to-use simple table-based format that can be integrated into existing data science pipelines without the need to parse or query ontologies, and that integrates seamlessly with Linked Data principles. (iii) Implementing open and community-driven collaborative workflows that are designed to evolve the standard continuously to address changing requirements and mapping practices. (iv) Providing reference tools and software libraries for working with the standard. In this paper, we present the SSSOM standard, describe several use cases in detail and survey some of the existing work on standardizing the exchange of mappings, with the goal of making mappings Findable, Accessible, Interoperable and Reusable (FAIR). The SSSOM specification can be found at http://w3id.org/sssom/spec.Database URL: http://w3id.org/sssom/spec}\" , issn = {1758-0463} , doi = {10.1093/database/baac035} , url = {https://doi.org/10.1093/database/baac035} , note = {baac035} , eprint = {https://academic.oup.com/database/article-pdf/doi/10.1093/database/baac035/43832024/baac035.pdf} , } A second report with updates since the primary SSSOM publication above was published as part of the proceedings of the Ontology Matching Workshop 2022.","title":"Citation"},{"location":"Repositories/sssom/#copying","text":"SSSOM is distributed under the terms of the 3-clause BSD license, as included in the LICENSE file of the source distribution. By exception, the following files are not covered by the 3-clause BSD license: sssom-banner.png : That file may only be used by members of the internal Monarch team and collaborators on Monarch flagship products.","title":"Copying"},{"location":"Repositories/universalizer/","text":"universalizer Details GitHub Knowledge-Graph-Hub/universalizer Language Python Description The KG-Hub Universalizer provides functions for knowledge graph cleanup and identifier normalization. Dependencies External Dependencies Package Version python >=3.9,<3.13 click ^8.1.3 kgx >=2.0.0 oaklib >=0.5.10 prefixmaps >=0.2.5 Documentation universalizer The KG-Hub Universalizer provides functions for knowledge graph cleanup and identifier normalization. Installation Install with pip : pip install universalizer OR Install with Poetry. git clone https://github.com/Knowledge-Graph-Hub/universalizer.git cd universalizer poetry install Usage With KGX format node and edge files in the same directory: universalizer run path/to/directory Or, if they're in a single tar.gz file: universalizer run -c graph.tar.gz ID and category mapping SSSOM-format maps are supported. Use a single map file: univeralizer run -m poro-mp-exact-1.0.sssom.tsv path/to/directory or a whole directory of them: univeralizer run -m path/to/mapfiles path/to/directory To map node categories as well as identifiers, use the -u flag: univeralizer run -m path/to/mapfiles path/to/directory -u For SSSOM maps from subject_id to object_id , subject node IDs will be remapped to object IDs. If the object_category value is specified the node's category ID will be remapped as well. Note that this will complete node normalization and ID remapping. Maps should use the normalized form (e.g., specify \"FBbt:00005201\", not \"FBBT:00005201\", even if the latter form is in the input graph.)","title":"universalizer"},{"location":"Repositories/universalizer/#universalizer","text":"","title":"universalizer"},{"location":"Repositories/universalizer/#details","text":"GitHub Knowledge-Graph-Hub/universalizer Language Python Description The KG-Hub Universalizer provides functions for knowledge graph cleanup and identifier normalization.","title":"Details"},{"location":"Repositories/universalizer/#dependencies","text":"External Dependencies Package Version python >=3.9,<3.13 click ^8.1.3 kgx >=2.0.0 oaklib >=0.5.10 prefixmaps >=0.2.5","title":"Dependencies"},{"location":"Repositories/universalizer/#documentation","text":"","title":"Documentation"},{"location":"Repositories/universalizer/#universalizer_1","text":"The KG-Hub Universalizer provides functions for knowledge graph cleanup and identifier normalization.","title":"universalizer"},{"location":"Repositories/universalizer/#installation","text":"Install with pip : pip install universalizer OR Install with Poetry. git clone https://github.com/Knowledge-Graph-Hub/universalizer.git cd universalizer poetry install","title":"Installation"},{"location":"Repositories/universalizer/#usage","text":"With KGX format node and edge files in the same directory: universalizer run path/to/directory Or, if they're in a single tar.gz file: universalizer run -c graph.tar.gz","title":"Usage"},{"location":"Repositories/universalizer/#id-and-category-mapping","text":"SSSOM-format maps are supported. Use a single map file: univeralizer run -m poro-mp-exact-1.0.sssom.tsv path/to/directory or a whole directory of them: univeralizer run -m path/to/mapfiles path/to/directory To map node categories as well as identifiers, use the -u flag: univeralizer run -m path/to/mapfiles path/to/directory -u For SSSOM maps from subject_id to object_id , subject node IDs will be remapped to object IDs. If the object_category value is specified the node's category ID will be remapped as well. Note that this will complete node normalization and ID remapping. Maps should use the normalized form (e.g., specify \"FBbt:00005201\", not \"FBBT:00005201\", even if the latter form is in the input graph.)","title":"ID and category mapping"},{"location":"Repositories/upheno-dev/","text":"upheno-dev Details GitHub obophenotype/upheno-dev Language Jupyter Notebook Description Framework for the automated construction of uPheno 2.0 Dependencies External Dependencies Package Version python ^3.9 setuptools ^65.5.0 tox ^3.25.1 click ^8.1.3 importlib-metadata ^4.8.0 sphinx {'version': '^5.3.0', 'extras': ['docs']} sphinx-rtd-theme {'version': '^1.0.0', 'extras': ['docs']} sphinx-autodoc-typehints {'version': '^1.19.4', 'extras': ['docs']} sphinx-click {'version': '^4.3.0', 'extras': ['docs']} myst-parser {'version': '^0.18.1', 'extras': ['docs']} pandas ^2.2.2 sssom ^0.4.9 Documentation Editors, to run a uPheno 2 release, please check: https://obophenotype.github.io/upheno/howto/run-upheno2-release/ Framework for the automated construction of uPheno 2.0 (alpha) uPheno 2.0 is the upcoming new version of the Unified Phenotype Ontology ( uPheno ). The uPheno project aims to unify the annotation of phenotypes across species in a manner analogous to unification of gene function annotation by the Gene Ontology. uPheno 2.0 builds on earlier efforts with a new strategy that directly leverages the work of the phenotype ontology development community and incorporates phenotypes from a much wider range of species. We have organised a collaborative community effort , including representatives of all major model organism databases, to document and align formal design patterns for representing phenotypes and further develop reference ontologies, such as PATO, which are used in these patterns. A common development infrastructure makes it easy to use these design patterns to generate both species-specific ontologies and a species-independent layer that subsumes them. The resulting community-curated ontology for the representation and integration of phenotypes across species serves two general purposes: - Providing a community-developed framework for ontology editors to bootstrap, maintain and extend their phenotype ontologies in a scalable and standardised manner. - Facilitating the retrieval and comparative analysis of species-specific phenotypes through a deep layer of species-independent phenotypes. Architecture UPheno 2.0 comprises three layers. The phenotype base layer contains the phenotype terms defined by the various organism-specific communities, such as C. elegans and Human. The reference ontology layer contains the subsets of external ontologies that are referenced by the base layer such as GO, Chebi and UBERON. The Upheno integration layer is generated automatically from the base layer and the reference ontology layer and contains species independent phenotype terms such as \u2018abnormal skin morphology\u2019. Contact Please use this GitHub repository's Issue tracker to report errors or specific concerns related to the ontology. This pipeline is being developed by members of the Monarch Initiative. Acknowledgements This ontology repository was created using the ontology development kit .","title":"upheno-dev"},{"location":"Repositories/upheno-dev/#upheno-dev","text":"","title":"upheno-dev"},{"location":"Repositories/upheno-dev/#details","text":"GitHub obophenotype/upheno-dev Language Jupyter Notebook Description Framework for the automated construction of uPheno 2.0","title":"Details"},{"location":"Repositories/upheno-dev/#dependencies","text":"External Dependencies Package Version python ^3.9 setuptools ^65.5.0 tox ^3.25.1 click ^8.1.3 importlib-metadata ^4.8.0 sphinx {'version': '^5.3.0', 'extras': ['docs']} sphinx-rtd-theme {'version': '^1.0.0', 'extras': ['docs']} sphinx-autodoc-typehints {'version': '^1.19.4', 'extras': ['docs']} sphinx-click {'version': '^4.3.0', 'extras': ['docs']} myst-parser {'version': '^0.18.1', 'extras': ['docs']} pandas ^2.2.2 sssom ^0.4.9","title":"Dependencies"},{"location":"Repositories/upheno-dev/#documentation","text":"Editors, to run a uPheno 2 release, please check: https://obophenotype.github.io/upheno/howto/run-upheno2-release/","title":"Documentation"},{"location":"Repositories/upheno-dev/#framework-for-the-automated-construction-of-upheno-20-alpha","text":"uPheno 2.0 is the upcoming new version of the Unified Phenotype Ontology ( uPheno ). The uPheno project aims to unify the annotation of phenotypes across species in a manner analogous to unification of gene function annotation by the Gene Ontology. uPheno 2.0 builds on earlier efforts with a new strategy that directly leverages the work of the phenotype ontology development community and incorporates phenotypes from a much wider range of species. We have organised a collaborative community effort , including representatives of all major model organism databases, to document and align formal design patterns for representing phenotypes and further develop reference ontologies, such as PATO, which are used in these patterns. A common development infrastructure makes it easy to use these design patterns to generate both species-specific ontologies and a species-independent layer that subsumes them. The resulting community-curated ontology for the representation and integration of phenotypes across species serves two general purposes: - Providing a community-developed framework for ontology editors to bootstrap, maintain and extend their phenotype ontologies in a scalable and standardised manner. - Facilitating the retrieval and comparative analysis of species-specific phenotypes through a deep layer of species-independent phenotypes.","title":"Framework for the automated construction of uPheno 2.0 (alpha)"},{"location":"Repositories/upheno-dev/#architecture","text":"UPheno 2.0 comprises three layers. The phenotype base layer contains the phenotype terms defined by the various organism-specific communities, such as C. elegans and Human. The reference ontology layer contains the subsets of external ontologies that are referenced by the base layer such as GO, Chebi and UBERON. The Upheno integration layer is generated automatically from the base layer and the reference ontology layer and contains species independent phenotype terms such as \u2018abnormal skin morphology\u2019.","title":"Architecture"},{"location":"Repositories/upheno-dev/#contact","text":"Please use this GitHub repository's Issue tracker to report errors or specific concerns related to the ontology. This pipeline is being developed by members of the Monarch Initiative.","title":"Contact"},{"location":"Repositories/upheno-dev/#acknowledgements","text":"This ontology repository was created using the ontology development kit .","title":"Acknowledgements"},{"location":"monarch-roles/mondo_technical_lead/","text":"Monarch role: Mondo technical lead Main responsibilities: Coordinate the development of the Mondo ingest pipeline Ensure the ongoing Mondo ingest pipeline with external sources runs smoothly (devops) Support the curation team: Ensure that the release system (including import management, ODK stuff etc) runs smoothly (mostly support / debugging role when things break because of a bad imported axiom or a software update). Maintain and extend the QC system. The curation team identifies and issue that needs a check. We develop it and integrate it into the QC system General debugging support for Curation team 'when things break' Communicate with technical stakeholders (mainly NORD, ClinGen). Mostly support role, but sometimes requirements gathering which are fed back to curation team (eg rare disease subset, release notification endpoint). Lead ongoing processes to clean and standardise metadata inside the ontology. Communicate with external stakeholders such as MedGen and ClinGen about technical issues Coordination of the Mondo Ingest pipeline Github: https://github.com/monarch-initiative/mondo-ingest Documentation: https://monarch-initiative.github.io/mondo-ingest/ Develop an efficient system for aligning external ontologies The most important technical component of Mondo is its alignment system. It comprises a number of sub-systems. The three core subsystems are: ETL system (download external sources and \"massage\" them into a common form (e.g. same properties for synonyms and definitions, same properties for part of and subclassof). based on the normal ODK system Mapping system Goal: take all classes from an external resource such as ORDO and use simple lexical matching, using oak lexmatch, to determine candidate mappings. The matching system is very simple, and uses a synonymiser configuration file for capturing lexical variation across resources. Responsible developer: Harshad Main lexmatch coordination happens in $(SCRIPTSDIR)/match-mondo-sources-all-lexical.py Output: a set of SSSOM mapping files that are split into two groups Exact matches on labels: these should be mergable without a real review Exact matches on anything else: need to be reviewed by a human curator Both can be merged into mondo-edit.obo as a ROBOT template (Sabrina does this most of the time) Migration system (incorporate new terms from external resources into Mondo) Syncing system (update information about terms already mapped in Mondo) Incorporating new ingests As there are dozens of resources that could be incorporated, but our curation resources are limited, we need to carefully decide which ingests to incorporate, strategically. Two ingests that are top priority for example are: ICD10 ICD11","title":"Mondo technical lead"},{"location":"monarch-roles/mondo_technical_lead/#monarch-role-mondo-technical-lead","text":"Main responsibilities: Coordinate the development of the Mondo ingest pipeline Ensure the ongoing Mondo ingest pipeline with external sources runs smoothly (devops) Support the curation team: Ensure that the release system (including import management, ODK stuff etc) runs smoothly (mostly support / debugging role when things break because of a bad imported axiom or a software update). Maintain and extend the QC system. The curation team identifies and issue that needs a check. We develop it and integrate it into the QC system General debugging support for Curation team 'when things break' Communicate with technical stakeholders (mainly NORD, ClinGen). Mostly support role, but sometimes requirements gathering which are fed back to curation team (eg rare disease subset, release notification endpoint). Lead ongoing processes to clean and standardise metadata inside the ontology. Communicate with external stakeholders such as MedGen and ClinGen about technical issues","title":"Monarch role: Mondo technical lead"},{"location":"monarch-roles/mondo_technical_lead/#coordination-of-the-mondo-ingest-pipeline","text":"Github: https://github.com/monarch-initiative/mondo-ingest Documentation: https://monarch-initiative.github.io/mondo-ingest/","title":"Coordination of the Mondo Ingest pipeline"},{"location":"monarch-roles/mondo_technical_lead/#develop-an-efficient-system-for-aligning-external-ontologies","text":"The most important technical component of Mondo is its alignment system. It comprises a number of sub-systems. The three core subsystems are: ETL system (download external sources and \"massage\" them into a common form (e.g. same properties for synonyms and definitions, same properties for part of and subclassof). based on the normal ODK system Mapping system Goal: take all classes from an external resource such as ORDO and use simple lexical matching, using oak lexmatch, to determine candidate mappings. The matching system is very simple, and uses a synonymiser configuration file for capturing lexical variation across resources. Responsible developer: Harshad Main lexmatch coordination happens in $(SCRIPTSDIR)/match-mondo-sources-all-lexical.py Output: a set of SSSOM mapping files that are split into two groups Exact matches on labels: these should be mergable without a real review Exact matches on anything else: need to be reviewed by a human curator Both can be merged into mondo-edit.obo as a ROBOT template (Sabrina does this most of the time) Migration system (incorporate new terms from external resources into Mondo) Syncing system (update information about terms already mapped in Mondo)","title":"Develop an efficient system for aligning external ontologies"},{"location":"monarch-roles/mondo_technical_lead/#incorporating-new-ingests","text":"As there are dozens of resources that could be incorporated, but our curation resources are limited, we need to carefully decide which ingests to incorporate, strategically. Two ingests that are top priority for example are: ICD10 ICD11","title":"Incorporating new ingests"},{"location":"monarch-roles/ontology_lead/","text":"Monarch role: Ontology Technical Lead The Monarch Ontology lead is responsible for coordinating all Monarch-related ontology efforts. Primarily means the following: Drive Monarch Ontologies towards a common development stack: ODK for releases and QC Shared Python libraries for code in favour of scripts DOSDP and ROBOT templates for pattern driven development Establish documentation standards (minimal requirements for ontology documentation based on Monarch-wide SOPs) Coordinate reporting responsibilities: Ontology related RPPR reports Ontology Working Group report presentations (get people to provide content)","title":"Ontology lead"},{"location":"monarch-roles/ontology_lead/#monarch-role-ontology-technical-lead","text":"The Monarch Ontology lead is responsible for coordinating all Monarch-related ontology efforts. Primarily means the following: Drive Monarch Ontologies towards a common development stack: ODK for releases and QC Shared Python libraries for code in favour of scripts DOSDP and ROBOT templates for pattern driven development Establish documentation standards (minimal requirements for ontology documentation based on Monarch-wide SOPs) Coordinate reporting responsibilities: Ontology related RPPR reports Ontology Working Group report presentations (get people to provide content)","title":"Monarch role: Ontology Technical Lead"}]}